var __webpack_modules__={"./node_modules/onnxruntime-web/dist/ort.webgpu.min.js":
/*!*************************************************************!*\
  !*** ./node_modules/onnxruntime-web/dist/ort.webgpu.min.js ***!
  \*************************************************************/(module,__unused_webpack_exports,__webpack_require__)=>{var __dirname="/",__filename="/index.js",t;self,t=()=>(()=>{var __webpack_modules__={5716:(e,t,n)=>{t.R=void 0;const r=n(6027),o=n(1723);t.R=new class{async init(){}async createSessionHandler(e,t){const n=new r.Session(t);return await n.loadModel(e),new o.OnnxjsSessionHandler(n)}}},2818:(e,t,n)=>{t.c8=t.rX=void 0;const r=n(2235),o=n(5381),a=n(9544),i=n(6640);t.rX=()=>{if(("number"!=typeof r.env.wasm.initTimeout||r.env.wasm.initTimeout<0)&&(r.env.wasm.initTimeout=0),"boolean"!=typeof r.env.wasm.simd&&(r.env.wasm.simd=!0),"boolean"!=typeof r.env.wasm.proxy&&(r.env.wasm.proxy=!1),"number"!=typeof r.env.wasm.numThreads||!Number.isInteger(r.env.wasm.numThreads)||r.env.wasm.numThreads<=0){const e="undefined"==typeof navigator?(0,o.cpus)().length:navigator.hardwareConcurrency;r.env.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},t.c8=new class{async init(){(0,t.rX)(),await(0,a.initializeWebAssemblyInstance)()}async createSessionHandler(e,t){const n=new i.OnnxruntimeWebAssemblySessionHandler;return await n.loadModel(e,t),Promise.resolve(n)}}},1057:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(2235),t);const a=n(2235),i=n(8408);{const e=n(5716).R;(0,a.registerBackend)("webgl",e,-10)}{const e=n(2818).c8;"undefined"!=typeof navigator&&navigator.gpu&&(0,a.registerBackend)("webgpu",e,5),(0,a.registerBackend)("cpu",e,10),(0,a.registerBackend)("wasm",e,10),(0,a.registerBackend)("xnnpack",e,9),(0,a.registerBackend)("webnn",e,9)}Object.defineProperty(a.env.versions,"web",{value:i.version,enumerable:!0})},4910:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},6874:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Attribute=void 0;const r=n(5127),o=n(2446),a=n(9240),i=n(7273);var s=r.onnxruntime.experimental.fbs;class l{constructor(e){if(this._attributes=new Map,null!=e){for(const t of e)t instanceof o.onnx.AttributeProto?this._attributes.set(t.name,[l.getValue(t),l.getType(t)]):t instanceof s.Attribute&&this._attributes.set(t.name(),[l.getValue(t),l.getType(t)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,t,n){this._attributes.set(e,[n,t])}delete(e){this._attributes.delete(e)}getFloat(e,t){return this.get(e,"float",t)}getInt(e,t){return this.get(e,"int",t)}getString(e,t){return this.get(e,"string",t)}getTensor(e,t){return this.get(e,"tensor",t)}getFloats(e,t){return this.get(e,"floats",t)}getInts(e,t){return this.get(e,"ints",t)}getStrings(e,t){return this.get(e,"strings",t)}getTensors(e,t){return this.get(e,"tensors",t)}get(e,t,n){const r=this._attributes.get(e);if(void 0===r){if(void 0!==n)return n;throw new Error(`required attribute not found: ${e}`)}if(r[1]!==t)throw new Error(`type mismatch: expected ${t} but got ${r[1]}`);return r[0]}static getType(e){const t=e instanceof o.onnx.AttributeProto?e.type:e.type();switch(t){case o.onnx.AttributeProto.AttributeType.FLOAT:return"float";case o.onnx.AttributeProto.AttributeType.INT:return"int";case o.onnx.AttributeProto.AttributeType.STRING:return"string";case o.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case o.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case o.onnx.AttributeProto.AttributeType.INTS:return"ints";case o.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case o.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${o.onnx.AttributeProto.AttributeType[t]}`)}}static getValue(e){const t=e instanceof o.onnx.AttributeProto?e.type:e.type();if(t===o.onnx.AttributeProto.AttributeType.GRAPH||t===o.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");const n=this.getValueNoCheck(e);if(t===o.onnx.AttributeProto.AttributeType.INT&&i.LongUtil.isLong(n))return i.LongUtil.longToNumber(n);if(t===o.onnx.AttributeProto.AttributeType.INTS){const e=n,t=new Array(e.length);for(let n=0;n<e.length;n++){const r=e[n];t[n]=i.LongUtil.longToNumber(r)}return t}if(t===o.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof o.onnx.AttributeProto?a.Tensor.fromProto(n):a.Tensor.fromOrtTensor(n);if(t===o.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof o.onnx.AttributeProto)return n.map((e=>a.Tensor.fromProto(e)));if(e instanceof s.Attribute)return n.map((e=>a.Tensor.fromOrtTensor(e)))}if(t===o.onnx.AttributeProto.AttributeType.STRING&&e instanceof o.onnx.AttributeProto){const e=n;return(0,i.decodeUtf8String)(e)}return t===o.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof o.onnx.AttributeProto?n.map(i.decodeUtf8String):n}static getValueNoCheck(e){return e instanceof o.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case o.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case o.onnx.AttributeProto.AttributeType.INT:return e.i;case o.onnx.AttributeProto.AttributeType.STRING:return e.s;case o.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case o.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case o.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case o.onnx.AttributeProto.AttributeType.INTS:return e.ints;case o.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case o.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case o.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${o.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case s.AttributeType.FLOAT:return e.f();case s.AttributeType.INT:return e.i();case s.AttributeType.STRING:return e.s();case s.AttributeType.TENSOR:return e.t();case s.AttributeType.GRAPH:return e.g();case s.AttributeType.FLOATS:return e.floatsArray();case s.AttributeType.INTS:{const t=[];for(let n=0;n<e.intsLength();n++)t.push(e.ints(n));return t}case s.AttributeType.STRINGS:{const t=[];for(let n=0;n<e.stringsLength();n++)t.push(e.strings(n));return t}case s.AttributeType.TENSORS:{const t=[];for(let n=0;n<e.tensorsLength();n++)t.push(e.tensors(n));return t}default:throw new Error(`unsupported attribute type: ${s.AttributeType[e.type()]}`)}}}t.Attribute=l},1975:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.resolveBackend=t.backend=void 0;const r=n(4418),o=new Map;async function a(e){const n=t.backend;if(void 0!==n[e]&&function(e){const t=e;return"initialize"in t&&"function"==typeof t.initialize&&"createSessionHandler"in t&&"function"==typeof t.createSessionHandler&&"dispose"in t&&"function"==typeof t.dispose}(n[e])){const t=n[e];let r=t.initialize();if("object"==typeof r&&"then"in r&&(r=await r),r)return o.set(e,t),t}}t.backend={webgl:new r.WebGLBackend},t.resolveBackend=async function e(t){if(!t)return e(["webgl"]);{const e="string"==typeof t?[t]:t;for(const t of e){const e=o.get(t);if(e)return e;const n=await a(t);if(n)return n}}throw new Error("no available backend to use")}},4418:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLBackend=void 0;const r=n(2235),o=n(1315),a=n(2171),i=n(3389);t.WebGLBackend=class{get contextId(){return r.env.webgl.contextId}set contextId(e){r.env.webgl.contextId=e}get matmulMaxBatchSize(){return r.env.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){r.env.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return r.env.webgl.textureCacheMode}set textureCacheMode(e){r.env.webgl.textureCacheMode=e}get pack(){return r.env.webgl.pack}set pack(e){r.env.webgl.pack=e}get async(){return r.env.webgl.async}set async(e){r.env.webgl.async=e}initialize(){try{return this.glContext=(0,i.createWebGLContext)(this.contextId),"number"!=typeof this.matmulMaxBatchSize&&(this.matmulMaxBatchSize=16),"string"!=typeof this.textureCacheMode&&(this.textureCacheMode="full"),"boolean"!=typeof this.pack&&(this.pack=!1),"boolean"!=typeof this.async&&(this.async=!1),o.Logger.setWithEnv(r.env),Object.defineProperty(r.env.webgl,"context",{value:this.glContext.gl}),o.Logger.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return o.Logger.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new a.WebGLSessionHandler(this,e)}dispose(){this.glContext.dispose()}}},6859:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CoordsGlslLib=void 0;const r=n(7273),o=n(1997),a=n(6757),i=n(7618),s=n(432);class l extends o.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.offsetToCoords()),this.coordsToOffset()),this.toVec()),this.valueFrom()),this.getCommonUtilFuncs()),this.getInputsSamplingSnippets()),this.getOutputSamplingSnippet())}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new o.GlslLibRoutine("\n      vec2 offsetToCoords(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      ")}}coordsToOffset(){return{coordsToOffset:new o.GlslLibRoutine("\n      int coordsToOffset(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      ")}}getOutputSamplingSnippet(){const e=this.context.outputTextureLayout;return e.isPacked?this.getPackedOutputSamplingSnippet(e):this.getUnpackedOutputSamplingSnippet(e)}getPackedOutputSamplingSnippet(e){const t=e.unpackedShape,n=[e.width,e.height],r={},i="getOutputCoords";switch(t.length){case 0:r[i]=this.getOutputScalarCoords();break;case 1:r[i]=this.getOutputPacked1DCoords(t,n);break;case 2:r[i]=this.getOutputPacked2DCoords(t,n);break;case 3:r[i]=this.getOutputPacked3DCoords(t,n);break;default:r[i]=this.getOutputPackedNDCoords(t,n)}const s=`\n      void setOutput(vec4 val) {\n        ${(0,a.getGlsl)(this.context.glContext.version).output} = val;\n      }\n    `;return r.floatTextureSetRGBA=new o.GlslLibRoutine(s),r}getUnpackedOutputSamplingSnippet(e){const t=e.unpackedShape,n=[e.width,e.height],r={},i="getOutputCoords";switch(t.length){case 0:r[i]=this.getOutputScalarCoords();break;case 1:r[i]=this.getOutputUnpacked1DCoords(t,n);break;case 2:r[i]=this.getOutputUnpacked2DCoords(t,n);break;case 3:r[i]=this.getOutputUnpacked3DCoords(t,n);break;case 4:r[i]=this.getOutputUnpacked4DCoords(t,n);break;case 5:r[i]=this.getOutputUnpacked5DCoords(t,n);break;case 6:r[i]=this.getOutputUnpacked6DCoords(t,n);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}const s=`\n        void setOutput(float val) {\n          ${(0,a.getGlsl)(this.context.glContext.version).output} = vec4(val, 0, 0, 0);\n        }\n    `;return r.floatTextureSetR=new o.GlslLibRoutine(s),r}getOutputScalarCoords(){return new o.GlslLibRoutine("\n      int getOutputCoords() {\n        return 0;\n      }\n    ")}getOutputPacked1DCoords(e,t){const n=t;let r="";return 1===n[0]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${n[1]}.0);\n          }\n        `,new o.GlslLibRoutine(r)):1===n[1]?(r=`\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${n[0]}.0);\n          }\n        `,new o.GlslLibRoutine(r)):(r=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${n[0]}, ${n[1]}));\n          return 2 * (resTexRC.y * ${n[0]} + resTexRC.x);\n        }\n      `,new o.GlslLibRoutine(r))}getOutputPacked2DCoords(e,t){let n="";if(r.ArrayUtil.arraysEqual(e,t))return n=`\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));\n        }\n      `,new o.GlslLibRoutine(n);const a=t,i=Math.ceil(e[1]/2);return n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${a[0]}, ${a[1]}));\n\n          int index = resTexRC.y * ${a[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${i}) * 2;\n          int c = 2 * (index / ${i});\n\n          return ivec2(r, c);\n        }\n      `,new o.GlslLibRoutine(n)}getOutputPacked3DCoords(e,t){const n=[t[0],t[1]],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2),i=`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${n[0]}, ${n[1]}));\n          int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n          int b = index / ${a};\n          index -= b * ${a};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${r}) * 2;\n          int c = 2 * (index / ${r});\n\n          return ivec3(b, r, c);\n        }\n      `;return new o.GlslLibRoutine(i)}getOutputPackedNDCoords(e,t){const n=[t[0],t[1]],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,s="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],s=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+s,l=`b${t}, `+l;const u=`\n      ivec${e.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${n[0]}, ${n[1]}));\n        int index = resTexRC.y * ${n[0]} + resTexRC.x;\n\n        ${s}\n\n        int b = index / ${a};\n        index -= b * ${a};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${r}) * 2;\n        int c = 2 * (index / ${r});\n\n        return ivec${e.length}(${l});\n      }\n    `;return new o.GlslLibRoutine(u)}getOutputUnpacked1DCoords(e,t){const n=`\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          return resTexRC.y * ${t[0]} + resTexRC.x;\n        }\n      `;return new o.GlslLibRoutine(n)}getOutputUnpacked2DCoords(e,t){const n=`\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          int r = index / ${e[1]};\n          int c = index - r * ${e[1]};\n          return ivec2(r, c);\n        }\n      `;return new o.GlslLibRoutine(n)}getOutputUnpacked3DCoords(e,t){let n="";const r=e.length;let a=null;r<2&&(a=[]),a=new Array(r-1),a[r-2]=e[r-1];for(let t=r-3;t>=0;--t)a[t]=a[t+1]*e[t+1];const i=["r","c","d"],s=a.map(((e,t)=>`int ${i[t]} = index / ${e}; ${t===a.length-1?`int ${i[t+1]} = index - ${i[t]} * ${e}`:`index -= ${i[t]} * ${e}`};`)).join("");return n=`\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec3(r, c, d);\n        }\n      `,new o.GlslLibRoutine(n)}getOutputUnpacked4DCoords(e,t){let n="";const r=e.length;let a=null;r<2&&(a=[]),a=new Array(r-1),a[r-2]=e[r-1];for(let t=r-3;t>=0;--t)a[t]=a[t+1]*e[t+1];const i=["r","c","d","d2"],s=a.map(((e,t)=>`int ${i[t]} = index / ${e}; ${t===a.length-1?`int ${i[t+1]} = index - ${i[t]} * ${e}`:`index -= ${i[t]} * ${e}`};`)).join("");return n=`\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec4(r, c, d, d2);\n        }\n      `,new o.GlslLibRoutine(n)}getOutputUnpacked5DCoords(e,t){let n="";const r=e.length;let a=null;r<2&&(a=[]),a=new Array(r-1),a[r-2]=e[r-1];for(let t=r-3;t>=0;--t)a[t]=a[t+1]*e[t+1];const i=["r","c","d","d2","d3"],s=a.map(((e,t)=>`int ${i[t]} = index / ${e}; ${t===a.length-1?`int ${i[t+1]} = index - ${i[t]} * ${e}`:`index -= ${i[t]} * ${e}`};`)).join("");return n=`\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${t[0]}, ${t[1]}));\n          int index = resTexRC.y * ${t[0]} + resTexRC.x;\n          ${s}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `,new o.GlslLibRoutine(n)}getOutputUnpacked6DCoords(e,t){let n="";const r=e.length;let a=null;r<2&&(a=[]),a=new Array(r-1),a[r-2]=e[r-1];for(let t=r-3;t>=0;--t)a[t]=a[t+1]*e[t+1];const i=["r","c","d","d2","d3","d4"],s=a.map(((e,t)=>`int ${i[t]} = index / ${e}; ${t===a.length-1?`int ${i[t+1]} = index - ${i[t]} * ${e}`:`index -= ${i[t]} * ${e}`};`)).join("");return n=`\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${t[0]}, ${t[1]}));\n         int index = resTexRC.y * ${t[0]} + resTexRC.x;\n         ${s}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `,new o.GlslLibRoutine(n)}getCommonUtilFuncs(){const e={};let t="uvFromFlat";e[t]=new o.GlslLibRoutine("\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    "),t="packedUVfrom1D",e[t]=new o.GlslLibRoutine("\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom2D",e[t]=new o.GlslLibRoutine("\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="packedUVfrom3D",e[t]=new o.GlslLibRoutine("\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      "),t="sampleTexture";const n=(0,a.getGlsl)(this.context.glContext.version);return e[t]=new o.GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${n.texture2D}(textureSampler, uv).r;\n        }`),e}getInputsSamplingSnippets(){const e={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach(((n,r)=>{const o=this.context.inputTextureLayouts[r],a=(0,s.generateShaderFuncNameFromInputSamplerName)(n);o.isPacked?e[a]=this.getPackedSamplerFromInput(a,n,o):e[a]=this.getUnpackedSamplerFromInput(a,n,o);const i=(0,s.generateShaderFuncNameFromInputSamplerNameAtOutCoords)(n);o.unpackedShape.length<=t.unpackedShape.length&&(o.isPacked?e[i]=this.getPackedSamplerAtOutputCoords(i,o,t,n):e[i]=this.getUnpackedSamplerAtOutputCoords(i,o,t,n))})),e}getPackedSamplerAtOutputCoords(e,t,n,a){const i=t.unpackedShape,l=n.unpackedShape,u=a,c=(0,s.generateShaderFuncNameFromInputSamplerName)(u),p=i.length,d=l.length,h=r.BroadcastUtil.getBroadcastDims(i,l),f=(0,s.getCoordsDataType)(d),g=d-p;let _;const m=(0,s.getGlChannels)();_=0===p?"":d<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${m[e+g]} = 0;`)).join("\n");let b="";b=d<2&&p>0?"coords":i.map(((e,t)=>`coords.${m[t+g]}`)).join(", ");let y="return outputValue;";const w=1===r.ShapeUtil.size(i),x=1===r.ShapeUtil.size(l);if(1!==p||w||x){if(w&&!x)y=1===d?"\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        ":"\n          return vec4(outputValue.x);\n        ";else if(h.length){const e=p-2,t=p-1;h.indexOf(e)>-1&&h.indexOf(t)>-1?y="return vec4(outputValue.x);":h.indexOf(e)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(t)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}}else y="\n        return vec4(outputValue.xy, outputValue.xy);\n      ";const v=`\n      vec4 ${e}() {\n        ${f} coords = getOutputCoords();\n        \n        int lastDim = coords.${m[d-1]};\n        coords.${m[d-1]} = coords.${m[d-2]};\n        coords.${m[d-2]} = lastDim;\n      \n        ${_}\n        vec4 outputValue = ${c}(${b});\n        ${y}\n      }\n    `;return new o.GlslLibRoutine(v,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(e,t,n,a){const i=[n.width,n.height],l=[t.width,t.height],u=t.unpackedShape.length,c=n.unpackedShape.length,p=t.unpackedShape,d=n.unpackedShape,h=(0,s.generateShaderFuncNameFromInputSamplerName)(a);if(u===c&&r.ArrayUtil.arraysEqual(l,i)){const t=`\n          float ${e}() {\n            return sampleTexture(${a}, TexCoords);\n          }\n        `;return new o.GlslLibRoutine(t,["coordinates.sampleTexture"])}const f=(0,s.getCoordsDataType)(c),g=r.BroadcastUtil.getBroadcastDims(p,d),_=c-u;let m;const b=(0,s.getGlChannels)();m=0===u?"":c<2&&g.length>=1?"coords = 0;":g.map((e=>`coords.${b[e+_]} = 0;`)).join("\n");let y="";y=c<2&&u>0?"coords":t.unpackedShape.map(((e,t)=>`coords.${b[t+_]}`)).join(", ");const w=`\n        float ${e}() {\n          ${f} coords = getOutputCoords();\n          ${m}\n          return ${h}(${y});\n        }\n      `;return new o.GlslLibRoutine(w,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(e,t,n){switch(n.unpackedShape.length){case 0:return this.getPackedSamplerScalar(e,t);case 1:return this.getPackedSampler1D(e,t,n);case 2:return this.getPackedSampler2D(e,t,n);case 3:return this.getPackedSampler3D(e,t,n);default:return this.getPackedSamplerND(e,t,n)}}getUnpackedSamplerFromInput(e,t,n){const r=n.unpackedShape;switch(r.length){case 0:return this.getUnpackedSamplerScalar(e,t,n);case 1:return this.getUnpackedSampler1D(e,t,n);case 2:return this.getUnpackedSampler2D(e,t,n);case 3:return this.getUnpackedSampler3D(e,t,n);case 4:return this.getUnpackedSampler4D(e,t,n);case 5:return this.getUnpackedSampler5D(e,t,n);case 6:return this.getUnpackedSampler6D(e,t,n);default:throw new Error(`Unsupported dimension ${r.length}-D`)}}getPackedSamplerScalar(e,t){const n=`\n          vec4 ${e}() {\n            return ${(0,a.getGlsl)(this.context.glContext.version).texture2D}(${t}, halfCR);\n          }\n        `;return new o.GlslLibRoutine(n)}getPackedSampler1D(e,t,n){const r=[n.width,n.height],i=[r[1],r[0]],s=(0,a.getGlsl)(this.context.glContext.version),l=`vec4 ${e}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }`;return new o.GlslLibRoutine(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(e,t,n){const i=n.unpackedShape,s=[n.width,n.height],l=(0,a.getGlsl)(this.context.glContext.version),u=s[0],c=s[1];if(null!=s&&r.ArrayUtil.arraysEqual(i,s)){const n=`vec4 ${e}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${u}.0);\n        return ${l.texture2D}(${t}, uv);\n      }`;return new o.GlslLibRoutine(n)}const p=s,d=Math.ceil(i[1]/2),h=`vec4 ${e}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${p[1]}, ${p[0]}, ${d}, row, col);\n      return ${l.texture2D}(${t}, uv);\n    }`;return new o.GlslLibRoutine(h,["coordinates.packedUVfrom2D"])}getPackedSampler3D(e,t,n){const r=n.unpackedShape,i=[n.width,n.height],l=[i[0],i[1]],u=(0,a.getGlsl)(this.context.glContext.version);if(1===r[0]){const a=r.slice(1),i=[1,2],l=(0,s.squeezeInputShape)(r,a),u=["b","row","col"],c=JSON.parse(JSON.stringify(n));c.unpackedShape=l;const p=this.getPackedSamplerFromInput(e,t,c),d=`${p.routineBody}\n      vec4 ${e}(int b, int row, int col) {\n        return ${e}(${(0,s.getSqueezedParams)(u,i)});\n      } `;return new o.GlslLibRoutine(d,p.dependencies)}const c=l[0],p=l[1],d=Math.ceil(r[2]/2),h=`vec4 ${e}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${p}, ${c}, ${d*Math.ceil(r[1]/2)}, ${d}, b, row, col);\n      return ${u.texture2D}(${t}, uv);}`;return new o.GlslLibRoutine(h,["coordinates.packedUVfrom3D"])}getPackedSamplerND(e,t,n){const r=n.unpackedShape,i=r.length,s=[n.width,n.height],l=(0,a.getGlsl)(this.context.glContext.version),u=[s[0],s[1]],c=u[1],p=u[0],d=Math.ceil(r[i-1]/2);let h=d*Math.ceil(r[i-2]/2),f="int b, int row, int col",g=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)f=`int b${e}, `+f,h*=r[i-e-1],g=`b${e} * ${h} + `+g;const _=`vec4 ${e}(${f}) {\n      int index = ${g};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${c});\n      return ${l.texture2D}(${t}, uv);\n    }`;return new o.GlslLibRoutine(_)}getUnpackedSamplerScalar(e,t,n){const[r,a]=[n.width,n.height];if(1===r&&1===a){const n=`\n          float ${e}() {\n            return sampleTexture(${t}, halfCR);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture"])}const i=`\n        float ${e}() {\n          int offset_${t} = coordsToOffset(TexCoords, ${r}, ${a});\n          vec2 uv = uvFromFlat(${r}, ${a}, offset_${t});\n          return sampleTexture(${t}, uv);\n        }\n      `;return new o.GlslLibRoutine(i,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(e,t,n){const r=n.width,a=n.height;if(1===a&&1===r){const n=`\n        float ${e}(int index) {\n          return sampleTexture(${t}, halfCR);\n        }\n      `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture"])}if(1===a){const n=`\n          float ${e}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${r}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture"])}if(1===r){const n=`\n          float ${e}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${a}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture"])}const i=`\n        float ${e}(int index) {\n          vec2 uv = uvFromFlat(${r}, ${a}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new o.GlslLibRoutine(i,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(e,t,n){const a=n.unpackedShape,l=[n.height,n.width];if(null!=l&&r.ArrayUtil.arraysEqual(a,l)){const n=`\n          float ${e}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${l[1]}.0, ${l[0]}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture"])}const{newShape:u,keptDims:c}=(0,i.squeezeShape)(a),p=u;if(p.length<a.length){const r=(0,s.squeezeInputShape)(a,p),i=JSON.parse(JSON.stringify(n));i.unpackedShape=r;const l=["col","row"],u=`\n          ${this.getUnpackedSamplerFromInput(e,t,i).routineBody}\n          float ${e}(int row, int col) {\n            return ${e}(${(0,s.getSqueezedParams)(l,c)});\n          }\n        `;return new o.GlslLibRoutine(u,["coordinates.sampleTexture"])}const d=l[1],h=l[0];if(1===h){const n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${a[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(1===d){const n=`\n          float ${e}(int row, int col) {\n            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${h});\n            float index = dot(vec3(row, col, offset_${t}), vec3(${a[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(n,["coordinates.sampleTexture","coordinates.coordsToOffset"])}const f=`\n        float ${e}(int row, int col) {\n          int index = col * ${a[1]} + row;\n          vec2 uv = uvFromFlat(${d}, ${h}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new o.GlslLibRoutine(f,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(e,t,n){const r=n.unpackedShape,a=r[1]*r[2],l=r[2],{newShape:u,keptDims:c}=(0,i.squeezeShape)(r),p=u;if(p.length<r.length){const a=(0,s.squeezeInputShape)(r,p),i=["batch","col","row"],l=JSON.parse(JSON.stringify(n));l.unpackedShape=a;const u=this.getUnpackedSamplerFromInput(e,t,l),d=c.reverse(),h=`\n          ${u.routineBody}\n          float ${e}(int batch, int row, int col) {\n            return ${e}(${(0,s.getSqueezedParams)(i,d)});\n          }\n        `;return new o.GlslLibRoutine(h,u.dependencies)}const d=`\n          float ${e}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${a} + col * ${l} + row;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n      `;return new o.GlslLibRoutine(d,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(e,t,n){const r=n.unpackedShape,a=r[3],i=r[2]*a,s=`\n        float ${e}(int row, int col, int depth, int depth2) {\n          int index = row * ${r[1]*i} + col * ${i} +\n              depth2 * ${a} + depth;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new o.GlslLibRoutine(s,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(e,t,n){const r=n.unpackedShape,a=r[4],l=r[3]*a,u=r[2]*l,c=r[1]*u,{newShape:p,keptDims:d}=(0,i.squeezeShape)(r);if(p.length<r.length){const a=(0,s.squeezeInputShape)(r,p),i=["row","col","depth","depth2","depth3"],l=JSON.parse(JSON.stringify(n));l.unpackedShape=a;const u=`\n          ${this.getUnpackedSamplerFromInput(e,t,l).routineBody}\n          float ${e}(int row, int col, int depth, int depth2, int depth3) {\n            return ${e}(${(0,s.getSqueezedParams)(i,d)});\n          }\n        `;return new o.GlslLibRoutine(u,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const h=`\n        float ${e}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth3 * ${a} + depth2;\n          vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n          return sampleTexture(${t}, uv);\n        }\n      `;return new o.GlslLibRoutine(h,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(e,t,n){const r=n.unpackedShape,a=r[5],l=r[4]*a,u=r[3]*l,c=r[2]*u,p=r[1]*c,{newShape:d,keptDims:h}=(0,i.squeezeShape)(r);if(d.length<r.length){const a=(0,s.squeezeInputShape)(r,d),i=["row","col","depth","depth2","depth3","depth4"],l=JSON.parse(JSON.stringify(n));l.unpackedShape=a;const u=`\n            ${this.getUnpackedSamplerFromInput(e,t,l).routineBody}\n            float ${e}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${e}(${(0,s.getSqueezedParams)(i,h)});\n            }\n          `;return new o.GlslLibRoutine(u,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const f=`\n          float ${e}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${p} + col * ${c} + depth * ${u} +\n            depth2 * ${l} + depth3 * ${a} + depth4;\n            vec2 uv = uvFromFlat(${n.width}, ${n.height}, index);\n            return sampleTexture(${t}, uv);\n          }\n        `;return new o.GlslLibRoutine(f,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){const e=this.context.outputTextureLayout,t=e.shape.length,n=e.strides,r=e.width,a=e.height,i=[];for(let e=0;e<t-1;++e)i.push(`\n        c[${e}] = offset / ${n[e]};`),i.push(`\n        offset -= c[${e}] * ${n[e]};`);i.push(`\n        c[${t-1}] = offset;`);const s=`\n      void toVec(vec2 texCoords, out int c[${t}]) {\n        int offset = coordsToOffset(texCoords, ${r}, ${a});\n        ${i.join("")}\n      }\n      void toVec(int offset, out int c[${t}]) {\n        ${i.join("")}\n      }\n    `;return{toVec:new o.GlslLibRoutine(s,["coordinates.coordsToOffset"])}}valueFrom(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const r=this.context.inputTextureLayouts[n],a=(r.unpackedShape.length>0?r.unpackedShape:r.shape).length;let i=`_${t}`;e[i]=new o.GlslLibRoutine(this.getValueFromSingle(t,a,r.width,r.height,!1),[`shapeUtils.indicesToOffset${i}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),i+="_T",e[i]=new o.GlslLibRoutine(this.getValueFromSingle(t,a,r.width,r.height,!0),[`shapeUtils.indicesToOffset${i}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])})),e}getValueFromSingle(e,t,n,r,o){let i=`_${e}`;return o&&(i+="_T"),`\n        float ${i}(int m[${t}]) {\n          int offset = indicesToOffset${i}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          float value = getColorAsFloat(${(0,a.getGlsl)(this.context.glContext.version).texture2D}(${e}, coords));\n          return value;\n        }\n        `}getPackedValueFrom(e,t,n,r,o){let i=`_${e}_Pack`;return o&&(i+="_T"),`\n        vec4 ${i}(int m[${t}]) {\n          int offset = indicesToOffset_${e}(m);\n          vec2 coords = offsetToCoords(offset, ${n}, ${r});\n          return ${(0,a.getGlsl)(this.context.glContext.version).texture2D}(${e}, coords);\n        }\n        `}}t.CoordsGlslLib=l},1997:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TopologicalSortGlslRoutines=t.GlslLibRoutineNode=t.GlslLibRoutine=t.GlslLib=t.GlslContext=t.FunctionType=void 0,(n=t.FunctionType||(t.FunctionType={}))[n.ValueBased=0]="ValueBased",n[n.Positional=1]="Positional",t.GlslContext=class{constructor(e,t,n,r){this.glContext=e,this.programInfo=t,this.inputTextureLayouts=n,this.outputTextureLayout=r}},t.GlslLib=class{constructor(e){this.context=e}},t.GlslLibRoutine=class{constructor(e,t){this.routineBody=e,this.dependencies=t}},t.GlslLibRoutineNode=class{constructor(e,t,n){this.name=e,this.dependencies=n||[],t&&(this.routineBody=t)}addDependency(e){e&&this.dependencies.push(e)}},t.TopologicalSortGlslRoutines=class{static returnOrderedNodes(e){if(!e||0===e.length)return[];if(1===e.length)return e;const t=new Set,n=new Set,r=new Array;return this.createOrderedNodes(e,t,n,r),r}static createOrderedNodes(e,t,n,r){for(let o=0;o<e.length;++o)this.dfsTraverse(e[o],t,n,r)}static dfsTraverse(e,t,n,r){if(!e||n.has(e.name))return;if(t.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");t.add(e.name);const o=e.dependencies;if(o&&o.length>0)for(let e=0;e<o.length;++e)this.dfsTraverse(o[e],t,n,r);r.push(e),n.add(e.name),t.delete(e.name)}}},1371:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EncodingGlslLib=void 0;const r=n(1997);class o extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign({},this.encodeFloat32()),this.decodeFloat32())}getCustomTypes(){return{}}encodeFloat32(){return{encode:new r.GlslLibRoutine("highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        ")}}decodeFloat32(){return{decode:new r.GlslLibRoutine("highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        ")}}encodeUint8(){const e=o.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new r.GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${e}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)}}decodeUint8(){const e=o.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new r.GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${e}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)}}static isLittleEndian(){const e=new ArrayBuffer(4),t=new Uint32Array(e),n=new Uint8Array(e);if(t[0]=3735928559,239===n[0])return!0;if(222===n[0])return!1;throw new Error("unknown endianness")}}t.EncodingGlslLib=o},2691:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FragColorGlslLib=void 0;const r=n(1997),o=n(6757);class a extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign({},this.setFragColor()),this.getColorAsFloat())}getCustomTypes(){return{}}setFragColor(){const e=(0,o.getGlsl)(this.context.glContext.version);return{setFragColor:new r.GlslLibRoutine(`\n        void setFragColor(float value) {\n            ${e.output} = encode(value);\n        }\n        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new r.GlslLibRoutine("\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        ",["encoding.decode"])}}}t.FragColorGlslLib=a},3878:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.replaceInlines=void 0;const n=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;t.replaceInlines=function(e){const t={};let r;for(;null!==(r=n.exec(e));){const e=r[3].split(",").map((e=>{const t=e.trim().split(" ");return t&&2===t.length?{type:t[0],name:t[1]}:null})).filter((e=>null!==e));t[r[2]]={params:e,body:r[4]}}for(const n in t){const o="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;".replace("__FUNC__",n),a=new RegExp(o,"gm");for(;null!==(r=a.exec(e));){const o=r[1],a=r[2],i=r[3].split(","),s=o?`${o} ${a};`:"";let l=t[n].body,u="";t[n].params.forEach(((e,t)=>{e&&(u+=`${e.type} ${e.name} = ${i[t]};\n`)})),l=`${u}\n ${l}`,l=l.replace("return",`${a} = `);const c=`\n      ${s}\n      {\n        ${l}\n      }\n      `;e=e.replace(r[0],c)}}return e.replace(n,"")}},8897:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GlslPreprocessor=void 0;const r=n(1997),o=n(3878),a=n(1248),i=n(6757);t.GlslPreprocessor=class{constructor(e,t,n,o){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new r.GlslContext(e,t,n,o),Object.keys(a.glslRegistry).forEach((e=>{const t=new a.glslRegistry[e](this.context);this.libs[e]=t}));const i=this.glslLibRoutineDependencyGraph;for(const e in this.libs){const t=this.libs[e].getFunctions();for(const n in t){const o=e+"."+n;let a;i[o]?(a=i[o],a.routineBody=t[n].routineBody):(a=new r.GlslLibRoutineNode(o,t[n].routineBody),i[o]=a);const s=t[n].dependencies;if(s)for(let e=0;e<s.length;++e)if(i[s[e]])a.addDependency(i[s[e]]);else{const t=new r.GlslLibRoutineNode(s[e]);i[s[e]]=t,a.addDependency(t)}}}}preprocess(){const e=this.context.programInfo;let t=e.shaderSource;return this.context.programInfo.hasMain||(t=`${t}\n      ${(0,i.getDefaultFragShaderMain)(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),t=(0,o.replaceInlines)(t),`${(0,i.getFragShaderPreamble)(this.context.glContext.version)}\n    ${this.getUniforms(e.inputNames,e.variables)}\n    ${this.getImports(t)}\n    ${t}`}getImports(e){const t=this.selectGlslLibRoutinesToBeIncluded(e);if(0===t.length)return"";let n="";for(let e=0;e<t.length;++e){if(!t[e].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${t[e].name}`);n+=t[e].routineBody+"\n"}return n}selectGlslLibRoutinesToBeIncluded(e){const t=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach((n=>{const r=n.split(".")[1];-1!==e.indexOf(r)&&t.push(this.glslLibRoutineDependencyGraph[n])})),r.TopologicalSortGlslRoutines.returnOrderedNodes(t)}getUniforms(e,t){const n=[];if(e)for(const t of e)n.push(`uniform sampler2D ${t};`);if(t)for(const e of t)n.push(`uniform ${e.type} ${e.name}${e.arrayLength?`[${e.arrayLength}]`:""};`);return n.join("\n")}}},1248:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.glslRegistry=void 0;const r=n(6859),o=n(1371),a=n(2691),i=n(9183),s=n(9314);t.glslRegistry={encoding:o.EncodingGlslLib,fragcolor:a.FragColorGlslLib,vec:s.VecGlslLib,shapeUtils:i.ShapeUtilsGlslLib,coordinates:r.CoordsGlslLib}},9183:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ShapeUtilsGlslLib=void 0;const r=n(1997);class o extends r.GlslLib{constructor(e){super(e)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.bcastIndex()),this.bcastMatmulIndex()),this.offsetToIndices()),this.indicesToOffset()),this.incrementIndices())}getCustomTypes(){return{}}bcastIndex(){const e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,o)=>{const a=this.context.inputTextureLayouts[o].unpackedShape;if(a.length<=e){const o=a.length,i=e-o,s=`bcastIndices_${n}`;let l="";for(let e=0;e<o;++e)l+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${i+e}]), ${a[e]}.0) );\n          `;const u=`\n        void ${s} (int bcastedIndices[${e}], out int realIndices[${o}]) {\n          ${l}\n        }\n        `;t[s]=new r.GlslLibRoutine(u)}})),t}bcastMatmulIndex(){const e=this.context.outputTextureLayout.shape.length,t={};return this.context.programInfo.inputNames.forEach(((n,o)=>{const a=this.context.inputTextureLayouts[o].shape;if(!(a.length<2||a.length>e)){const o=a.length,i=e-o,s=`bcastMatmulIndices_${n}`;let l="";for(let e=0;e<o-2;++e)l+=`\n          realIndices[${e}] = int( mod(float(bcastedIndices[${i+e}]), ${a[e]}.0) );\n          `;const u=`\n        void ${s}(int bcastedIndices[${e}], out int realIndices[${o}]) {\n          ${l}\n          realIndices[${o-1}] = bcastedIndices[${e-1}];\n          realIndices[${o-2}] = bcastedIndices[${e-2}];\n        }\n        `;t[s]=new r.GlslLibRoutine(u)}})),t}indicesToOffset(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const a=this.context.inputTextureLayouts[n].shape,i=this.context.inputTextureLayouts[n].strides,s=a.length;let l=`indicesToOffset_${t}`;e[l]=new r.GlslLibRoutine(o.indexToOffsetSingle(l,s,i)),l=`indicesToOffset_${t}_T`,e[l]=new r.GlslLibRoutine(o.indexToOffsetSingle(l,s,i.slice().reverse()))})),e}static indexToOffsetSingle(e,t,n){let r="";for(let e=t-1;e>=0;--e)r+=`\n        offset += indices[${e}] * ${n[e]};\n        `;return`\n      int ${e}(int indices[${t}]) {\n        int offset = 0;\n        ${r}\n        return offset;\n      }\n      `}offsetToIndices(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const a=this.context.inputTextureLayouts[n].shape,i=this.context.inputTextureLayouts[n].strides,s=a.length;let l=`offsetToIndices_${t}`;e[l]=new r.GlslLibRoutine(o.offsetToIndicesSingle(l,s,i)),l=`offsetToIndices_${t}_T`,e[l]=new r.GlslLibRoutine(o.offsetToIndicesSingle(l,s,i.slice().reverse()))})),e}static offsetToIndicesSingle(e,t,n){const r=[];for(let e=0;e<t-1;++e)r.push(`\n      indices[${e}] = offset / ${n[e]};`),r.push(`\n        offset -= indices[${e}] * ${n[e]};`);return r.push(`\n      indices[${t-1}] = offset;`),`\n      void ${e}(int offset, out int indices[${t}]) {\n        ${r.join("")}\n      }\n      `}incrementIndices(){const e={};return this.context.programInfo.inputNames.forEach(((t,n)=>{const o=this.context.inputTextureLayouts[n].shape,a=o.length,i=`incrementIndices_${t}`;let s="";for(let e=0;e<a;++e)s+=`\n        shape[${e}] = ${o[e]};`;const l=`\n        void ${i}(int axis, out int indices[${a}]) {\n          int shape[${a}];\n          ${s};\n          for(int i = ${a} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;e[i]=new r.GlslLibRoutine(l)})),e}}t.ShapeUtilsGlslLib=o},6757:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultFragShaderMain=t.getFragShaderPreamble=t.getVertexShaderSource=t.getGlsl=void 0;const n={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},r={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"};function o(e){return 1===e?n:r}t.getGlsl=o,t.getVertexShaderSource=function(e){const t=o(e);return`${t.version}\n      precision highp float;\n      ${t.attribute} vec3 position;\n      ${t.attribute} vec2 textureCoord;\n\n      ${t.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`},t.getFragShaderPreamble=function(e){const t=o(e);return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFrag} vec2 TexCoords;\n    ${t.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `},t.getDefaultFragShaderMain=function(e,t){return`\n  void main() {\n    int indices[${t}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${o(e).output} = result;\n  }\n  `}},9314:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VecGlslLib=void 0;const r=n(1997);class o extends r.GlslLib{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign({},this.binaryVecFunctions()),this.copyVec()),this.setVecItem()),this.getVecItem())}binaryVecFunctions(){const e=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},n={};for(const o in t){const a=`${o}Vec`;let i="";for(let n=0;n<e;++n)i+=`\n          dest[${n}] ${t[o]} src[${n}];\n          `;const s=`\n        void ${a}(int src[${e}], out int dest[${e}]) {\n          ${i}\n        }\n        `;n[a]=new r.GlslLibRoutine(s)}return n}copyVec(){const e=this.context.outputTextureLayout.shape.length;let t="";for(let n=0;n<e;++n)t+=`\n        dest[${n}] = src[${n}];\n        `;const n=`\n      void copyVec(int src[${e}], out int dest[${e}]) {\n        ${t}\n      }\n      `;return{copyVec:new r.GlslLibRoutine(n)}}setVecItem(){const e=this.context.outputTextureLayout.shape.length;let t=`\n        if(index < 0)\n            index =${e} + index;\n        if (index == 0)\n            m[0] = value;\n        `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            m[${n}] = value;\n            `;t+=`\n        else\n            m[${e-1}] = value;\n        `;const n=`\n      void setVecItem(out int m[${e}], int index, int value) {\n        ${t}\n      }\n        `;return{setVecItem:new r.GlslLibRoutine(n)}}getVecItem(){const e=this.context.outputTextureLayout.shape.length;let t=`\n        if(index < 0)\n            index = ${e} + index;\n        if (index == 0)\n            return m[0];\n      `;for(let n=1;n<e-1;++n)t+=`\n        else if (index == ${n})\n            return m[${n}];\n      `;t+=`\n        else\n            return m[${e-1}];\n        `;const n=`\n      int getVecItem(int m[${e}], int index) {\n        ${t}\n      }\n    `;return{getVecItem:new r.GlslLibRoutine(n)}}}t.VecGlslLib=o},7860:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLInferenceHandler=void 0;const r=n(1315),o=n(9240),a=n(7273),i=n(9),s=n(7379),l=n(2488),u=n(540),c=n(3314),p=n(5639);t.WebGLInferenceHandler=class{constructor(e){this.session=e,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,t){return(0,c.calculateTextureWidthAndHeight)(this.session.layoutStrategy,e,t)}executeProgram(e,t){if(t.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");const n=[];for(let r=0;r<e.inputNames.length;++r)n[r]=this.getOrCreateTextureData(t[r],e.inputTypes[r]);const r=((e,t)=>{const n=t.map((e=>`${e.unpackedShape.join(",")};${e.width}x${e.height}`)).join("_");let r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r})(e,n);let o=this.session.programManager.getArtifact(r);const a=o?o.programInfo:"function"==typeof e.get?e.get():e,i=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,a.output.dims,a.output.textureType),s=this.createTextureData(i,a.output.type);return o||(o=this.session.programManager.build(a,n,s),this.session.programManager.setArtifact(r,o)),this.runProgram(o,n,s),s}run(e,t){return this.executeProgram(e,t).tensor}runProgram(e,t,n){for(let n=0;n<t.length;++n)if(!!t[n].isPacked!=(e.programInfo.inputTypes[n]===p.TextureType.packed))throw new Error(`input[${n}] property packed inconsistent`);if(!!n.isPacked!=(e.programInfo.output.textureType===p.TextureType.packed))throw new Error("output property packed inconsistent");this.session.programManager.run(e,t,n)}getOrCreateTextureData(e,t){let n=this.getTextureData(e.dataId,t===p.TextureType.packed);if(!n&&(n=this.getTextureData(e.dataId,t!==p.TextureType.packed),n))return t===p.TextureType.packed?this.pack(n):this.unpack(n);if(!n){const r=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,e.dims,t);if(t===p.TextureType.packedLastDimension){const n=1,r=4,o=e.dims;if(4===o.length){const a=[o[0],Math.ceil(o[1]*o[2]*o[3]/r)],i=(0,c.createTextureLayoutFromTextureType)(this.session.layoutStrategy,a,t);let s=e.numberData;if(o[1]*o[2]*o[3]%r!=0){const t=o[0],a=o[1]*o[2]*o[3],i=Math.ceil(a*n/r)*r;s=new Float32Array(t*i);for(let r=0;r<t;++r){const t=r*a,o=r*i+r%n*a;s.set(e.numberData.subarray(t,t+a),o)}}return this.createTextureData(i,e.type,s,e,1)}}if(t===p.TextureType.packed){const t=(0,c.createTextureLayoutFromShape)(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),r=this.createTextureData(t,e.type,e.numberData,e,1);n=this.pack(r)}else n=this.createTextureData(r,e.type,e.numberData,e,1)}return n}createTextureDataFromLayoutBindTensor(e,t,n,r){return this.createTextureData(e,t,n,r,1)}createTextureData(e,t,n,o,a){r.Logger.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);const i=this.session.textureManager.createTextureFromLayout(t,e,n,a);return this.createTextureDataFromTexture(e,t,i,o)}reshapeUnpacked(e,t){const n=this.getOrCreateTextureData(e,p.TextureType.unpacked),r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:a.ShapeUtil.computeStrides(t),unpackedShape:t};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}reshapePacked(e,t){const n=this.getOrCreateTextureData(e,p.TextureType.packed);if((0,s.isReshapeCheap)(e.dims,t)){const r={channels:n.channels,height:n.height,width:n.width,shape:0!==t.length?t:[1],strides:a.ShapeUtil.computeStrides(t),unpackedShape:t,isPacked:!0};return this.createTextureDataFromTexture(r,e.type,n.texture).tensor}const r=(0,s.processDims3D)(e.dims),o=(0,s.processDims3D)(t),i=this.reshapePacked(e,r),l=this.run((0,s.createPackedReshape3DProgramInfoLoader)(this,i,o),[i]);return this.reshapePacked(l,t)}cast(e,t){const n=this.getOrCreateTextureData(e,p.TextureType.unpacked);return this.createTextureDataFromTexture(n,t,n.texture).tensor}createTextureDataFromTexture(e,t,n,r,a){const i=Object.assign(Object.assign({},e),{tensor:r||new o.Tensor(e.unpackedShape,t,(e=>this.readTexture(i)),(async e=>this.readTextureAsync(i)),void 0,a),texture:n});return this.setTextureData(i.tensor.dataId,i,e.isPacked),i}getTextureData(e,t=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,t):t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){this.session.isInitializer(e)?this.session.setTextureData(e,t,n):(n?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,t)}isTextureLayoutCached(e,t=!1){return!!this.getTextureData(e.dataId,t)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.session.textureManager.releaseTexture(e))),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat((0,l.encodeAsUint8)(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat((0,l.encodeAsUint8)(this,e))}pack(e){return this.executeProgram((0,i.createPackProgramInfoLoader)(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram((0,u.createUnpackProgramInfoLoader)(this,e.tensor),[e.tensor])}}},4110:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGL_OP_RESOLVE_RULES=void 0;const i=n(8817),s=a(n(5194)),l=n(4752),u=n(6668),c=n(9754),p=n(5042),d=n(6742),h=n(4125),f=n(6149),g=n(5378),_=n(6981),m=n(7413),b=n(7006),y=n(8276),w=n(5565),x=n(2834),v=n(1010),T=n(8126),k=n(2801),S=n(565),$=n(2444),P=n(815),A=n(564),O=n(5416),M=n(1240),I=n(5944),C=n(5707),E=a(n(9087)),D=n(7862),F=n(3980);t.WEBGL_OP_RESOLVE_RULES=[["Abs","","6+",E.abs],["Acos","","7+",E.acos],["Add","","7+",s.add],["And","","7+",s.and],["Asin","","7+",E.asin],["Atan","","7+",E.atan],["AveragePool","","7+",x.averagePool,x.parseAveragePoolAttributes],["BatchNormalization","","7+",i.batchNormalization,i.parseBatchNormalizationAttributes],["Cast","","6+",l.cast,l.parseCastAttributes],["Ceil","","6+",E.ceil],["Clip","","6-10",E.clip,E.parseClipAttributes],["Clip","","11+",E.clipV11],["Concat","","4+",u.concat,u.parseConcatAttributes],["Conv","","1+",c.conv,c.parseConvAttributes],["ConvTranspose","","1+",p.convTranspose,p.parseConvTransposeAttributes],["Cos","","7+",E.cos],["Div","","7+",s.div],["Dropout","","7+",E.identity],["DepthToSpace","","1+",d.depthToSpace,d.parseDepthToSpaceAttributes],["Equal","","7+",s.equal],["Elu","","6+",E.elu,E.parseEluAttributes],["Exp","","6+",E.exp],["Flatten","","1+",h.flatten,h.parseFlattenAttributes],["Floor","","6+",E.floor],["FusedConv","com.microsoft","1+",c.conv,c.parseConvAttributes],["Gather","","1+",f.gather,f.parseGatherAttributes],["Gemm","","7-10",g.gemm,g.parseGemmAttributesV7],["Gemm","","11+",g.gemm,g.parseGemmAttributesV11],["GlobalAveragePool","","1+",x.globalAveragePool,x.parseGlobalAveragePoolAttributes],["GlobalMaxPool","","1+",x.globalMaxPool],["Greater","","7+",s.greater],["Identity","","1+",E.identity],["ImageScaler","","1+",_.imageScaler,_.parseImageScalerAttributes],["InstanceNormalization","","6+",m.instanceNormalization,m.parseInstanceNormalizationAttributes],["LeakyRelu","","6+",E.leakyRelu,E.parseLeakyReluAttributes],["Less","","7+",s.less],["LRN","","1+",b.lrn,b.parseLrnAttributes],["Log","","6+",E.log],["MatMul","","1+",y.matMul,y.parseMatMulAttributes],["MaxPool","","1+",x.maxPool,x.parseMaxPoolAttributes],["Mul","","7+",s.mul],["Neg","","6+",E.neg],["Not","","1+",E.not],["Or","","7+",s.or],["Pad","","2-10",w.padV2,w.parsePadAttributesV2],["Pad","","11+",w.padV11,w.parsePadAttributesV11],["Pow","","7+",s.pow],["PRelu","","7+",s.pRelu],["ReduceLogSum","","1+",v.reduceLogSum,v.parseReduceAttributes],["ReduceMax","","1+",v.reduceMax,v.parseReduceAttributes],["ReduceMean","","1+",v.reduceMean,v.parseReduceAttributes],["ReduceMin","","1+",v.reduceMin,v.parseReduceAttributes],["ReduceProd","","1+",v.reduceProd,v.parseReduceAttributes],["ReduceSum","","1-12",v.reduceSum,v.parseReduceAttributes],["ReduceSumSquare","","1+",v.reduceLogSumSquare,v.parseReduceAttributes],["Relu","","6+",E.relu],["Reshape","","5+",T.reshape],["Resize","","10",k.resize,k.parseResizeAttributesV10],["Resize","","11+",k.resize,k.parseResizeAttributesV11],["Shape","","1+",S.shape],["Sigmoid","","6+",E.sigmoid],["Sin","","7+",E.sin],["Slice","","10+",$.sliceV10],["Slice","","1-9",$.slice,$.parseSliceAttributes],["Softmax","","1-12",P.softmax,P.parseSoftmaxAttributes],["Softmax","","13+",P.softmaxV13,P.parseSoftmaxAttributesV13],["Split","","2-12",A.split,A.parseSplitAttributes],["Sqrt","","6+",E.sqrt],["Squeeze","","1-12",O.squeeze,O.parseSqueezeAttributes],["Squeeze","","13+",O.squeezeV13],["Sub","","7+",s.sub],["Sum","","6+",M.sum],["Tan","","7+",E.tan],["Tanh","","6+",E.tanh],["Tile","","6+",I.tile],["Transpose","","1+",C.transpose,C.parseTransposeAttributes],["Upsample","","7-8",F.upsample,F.parseUpsampleAttributesV7],["Upsample","","9",F.upsample,F.parseUpsampleAttributesV9],["Unsqueeze","","1-12",D.unsqueeze,D.parseUnsqueezeAttributes],["Unsqueeze","","13+",D.unsqueezeV13],["Xor","","7+",s.xor]]},8817:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseBatchNormalizationAttributes=t.batchNormalization=void 0;const r=n(4910),o=n(6757),a=n(5639),i={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]};t.batchNormalization=(e,t,n)=>(l(t),[e.run(Object.assign(Object.assign({},i),{cacheHint:n.cacheKey,get:()=>s(e,t,n)}),t)]),t.parseBatchNormalizationAttributes=e=>{const t=e.attributes.getFloat("epsilon",1e-5),n=e.attributes.getFloat("momentum",.9),o=e.attributes.getInt("spatial",1);return(0,r.createAttributeWithCacheKey)({epsilon:t,momentum:n,spatial:o})};const s=(e,t,n)=>{const r=(0,o.getGlsl)(e.session.backend.glContext.version),s=t[0].dims.length,[l,u]=e.calculateTextureWidthAndHeight(t[1].dims,a.TextureType.unpacked),c=`\n  float process(int[${s}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${l}, ${u});\n    float scale = getColorAsFloat(${r.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${r.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${r.texture2D}(Variance, position));\n    float b = getColorAsFloat(${r.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;\n  }`;return Object.assign(Object.assign({},i),{output:{dims:t[0].dims,type:t[0].type,textureType:a.TextureType.unpacked},shaderSource:c})},l=e=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs.");const t=e[0],n=e[1],r=e[2],o=e[3],a=e[4];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length||1!==o.dims.length||1!==a.dims.length)throw new Error("invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1]||o.dims[0]!==t.dims[1]||a.dims[0]!==t.dims[1])throw new Error("invalid input shape.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type||"float32"!==o.type&&"float64"!==o.type||"float32"!==a.type&&"float64"!==a.type)throw new Error("invalid input tensor types.")}},5194:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.xor=t.sub=t.pRelu=t.pow=t.or=t.mul=t.less=t.greater=t.equal=t.div=t.and=t.add=t.glslPRelu=t.glslPow=t.glslXor=t.glslOr=t.glslAnd=t.glslLess=t.glslGreater=t.glslEqual=t.glslSub=t.glslMul=t.glslDiv=t.glslAdd=void 0;const r=n(7273),o=n(1997),a=n(6757),i=n(5639);function s(){const e="add_";return{body:`\n  float ${e}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function l(){const e="div_";return{body:`\n  float ${e}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function u(){const e="mul_";return{body:`\n  float ${e}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function c(){const e="sub_";return{body:`\n  float ${e}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function p(){const e="equal_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function d(){const e="greater_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function h(){const e="less_";return{body:`\n  float ${e}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function f(){const e="and_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function g(){const e="or_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function _(){const e="xor_";return{body:`\n  float ${e}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}function m(){return function(e){const t=`${e}_`;return{body:`\n  float ${t}(float a, float b) {\n    return ${e}(a, b);\n  }\n  vec4 ${t}(vec4 v1, vec4 v2) {\n    return ${e}(v1, v2);\n  }\n  `,name:t,type:o.FunctionType.ValueBased}}("pow")}function b(){const e="prelu_";return{body:`\n  float ${e}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${e}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `,name:e,type:o.FunctionType.ValueBased}}t.glslAdd=s,t.glslDiv=l,t.glslMul=u,t.glslSub=c,t.glslEqual=p,t.glslGreater=d,t.glslLess=h,t.glslAnd=f,t.glslOr=g,t.glslXor=_,t.glslPow=m,t.glslPRelu=b;const y=(e,t,n,r=t[0].type,o)=>{const a=e.session.pack?i.TextureType.packed:i.TextureType.unpacked;return{name:n.name,inputNames:["A","B"],inputTypes:[a,a],cacheHint:o,get:()=>w(e,t,n,r)}},w=(e,t,n,o=t[0].type)=>{const s=e.session.pack?i.TextureType.packed:i.TextureType.unpacked,l=!r.ShapeUtil.areEqual(t[0].dims,t[1].dims);let u=t[0].dims;const c=e.session.pack;if(l){const i=r.BroadcastUtil.calcShape(t[0].dims,t[1].dims,!1);if(!i)throw new Error("Can't perform binary op on the given tensors");u=i;const l=u.length,p=0!==t[0].dims.length?t[0].dims.length:1,d=0!==t[1].dims.length?t[1].dims.length:1,h=0!==t[0].dims.length?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",f=0!==t[1].dims.length?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",g=(0,a.getGlsl)(e.session.backend.glContext.version),_=c?`\n      ${n.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${n.name}(a, b);\n        ${g.output} = result;\n      }`:`\n      ${n.body}\n      float process(int indices[${l}]) {\n        int aindices[${p}];\n        int bindices[${d}];\n        ${h}\n        ${f}\n        return ${n.name}(_A(aindices), _B(bindices));\n      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:u,type:o,textureType:s},shaderSource:_,hasMain:c}}const p=(0,a.getGlsl)(e.session.backend.glContext.version),d=`\n    ${n.body}\n    void main() {\n      vec4 v1 = ${p.texture2D}(A, TexCoords);\n      vec4 v2 = ${p.texture2D}(B, TexCoords);\n      vec4 result = ${n.name}(v1, v2);\n      ${p.output} = result;\n    }\n    `;return{name:n.name,inputNames:["A","B"],inputTypes:[s,s],output:{dims:t[0].dims,type:o,textureType:s},shaderSource:d,hasMain:!0}};t.add=(e,t)=>[e.run(y(e,t,s()),t)],t.and=(e,t)=>[e.run(y(e,t,f(),"bool"),t)],t.div=(e,t)=>[e.run(y(e,t,l()),t)],t.equal=(e,t)=>[e.run(y(e,t,p(),"bool"),t)],t.greater=(e,t)=>[e.run(y(e,t,d(),"bool"),t)],t.less=(e,t)=>[e.run(y(e,t,h(),"bool"),t)],t.mul=(e,t)=>[e.run(y(e,t,u()),t)],t.or=(e,t)=>[e.run(y(e,t,g(),"bool"),t)],t.pow=(e,t)=>[e.run(y(e,t,m()),t)],t.pRelu=(e,t)=>[e.run(y(e,t,b()),t)],t.sub=(e,t)=>[e.run(y(e,t,c()),t)],t.xor=(e,t)=>[e.run(y(e,t,_(),"bool"),t)]},4752:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseCastAttributes=t.cast=void 0;const r=n(7273);t.cast=(e,t,n)=>(o(t),[e.cast(t[0],n)]),t.parseCastAttributes=e=>r.ProtoUtil.tensorDataTypeFromProto(e.attributes.getInt("to"));const o=e=>{if(!e||1!==e.length)throw new Error("Cast requires 1 input.");if("string"===e[0].type)throw new Error("Invalid input type.")}},4595:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedConcatProgramInfoLoader=void 0;const r=n(6757),o=n(5639),a=n(432),i=n(5614);t.createPackedConcatProgramInfoLoader=(e,t,n)=>{const l=(u=t.length,c=n.cacheKey,{name:"Concat (packed)",inputNames:Array.from({length:u},((e,t)=>`X${t}`)),inputTypes:Array(u).fill(o.TextureType.packed),cacheHint:c});var u,c;return Object.assign(Object.assign({},l),{get:()=>((e,t,n,l)=>{const u=n[0].dims.slice();if(l>=u.length||l<-1*u.length)throw new Error("axis specified for concat doesn't match input dimensionality");l<0&&(l=u.length+l);const c=u.slice(0);for(let e=1;e<n.length;e++){const t=n[e].dims.slice();for(let e=0;e<u.length;e++)if(e===l)c[l]+=t[e];else if(u[e]!==t[e])throw new Error("non concat dimensions must match")}const p=c.length,d=(0,i.getChannels)("coords",p),h=(0,a.getCoordsDataType)(p),f=(0,i.unpackFromChannel)(),g=n.map((e=>e.dims)),_=(0,a.getGlChannels)(p),m=new Array(g.length-1);m[0]=g[0][l];for(let e=1;e<m.length;e++)m[e]=m[e-1]+g[e][l];const b=_[l],y=_.slice(-2),w=_.join();let x=`if (${b} < ${m[0]}) {\n        return getChannel(\n            getX0(${w}), vec2(${y.join()}));\n        }`;for(let e=1;e<m.length;e++){const t=m[e-1];x+=`\n            if (${b} < ${m[e]}  && ${b} >= ${m[e-1]}) {\n              return getChannel(\n                getX${e}(${s(_,b,t)}),\n                vec2(${s(y,b,t)}));\n            }`}const v=m.length,T=m[m.length-1];x+=`\n            return getChannel(\n              getX${v}(${s(_,b,T)}),\n              vec2(${s(y,b,T)}));`;const k=(0,r.getGlsl)(e.session.backend.glContext.version),S=`\n          ${f}\n          float getValue(${_.map((e=>"int "+e))}) {\n            ${x}\n          }\n\n          void main() {\n            ${h} coords = getOutputCoords();\n            int lastDim = coords.${_[p-1]};\n            coords.${_[p-1]} = coords.${_[p-2]};\n            coords.${_[p-2]} = lastDim;\n\n            vec4 result = vec4(getValue(${d}), 0., 0., 0.);\n\n            ${d[p-1]} = ${d[p-1]} + 1;\n            if (${d[p-1]} < ${c[p-1]}) {\n              result.g = getValue(${d});\n            }\n\n            ${d[p-2]} = ${d[p-2]} + 1;\n            if (${d[p-2]} < ${c[p-2]}) {\n              result.a = getValue(${d});\n            }\n\n            ${d[p-1]} = ${d[p-1]} - 1;\n            if (${d[p-2]} < ${c[p-2]} &&\n                ${d[p-1]} < ${c[p-1]}) {\n              result.b = getValue(${d});\n            }\n            ${k.output} = result;\n          }\n        `;return Object.assign(Object.assign({},t),{output:{dims:c,type:n[0].type,textureType:o.TextureType.packed},shaderSource:S,hasMain:!0})})(e,l,t,n.axis)})};const s=(e,t,n)=>{const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}},6668:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const r=n(4910),o=n(5639),a=n(4595);t.concat=(e,t,n)=>(p(t),e.session.pack&&t[0].dims.length>1?[e.run((0,a.createPackedConcatProgramInfoLoader)(e,t,n),t)]:[e.run(i(e,t,n),t)]);const i=(e,t,n)=>{const r=(a=t.length,i=n.cacheKey,{name:"Concat",inputNames:Array.from({length:a},((e,t)=>`X${t}`)),inputTypes:Array(a).fill(o.TextureType.unpacked),cacheHint:i});var a,i;return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const a=n[0].dims.slice();if(r>=a.length||r<-1*a.length)throw new Error("axis specified for concat doesn't match input dimensionality");r<0&&(r=a.length+r);const i=a.slice(0);for(let e=1;e<n.length;e++){const t=n[e].dims.slice();for(let e=0;e<a.length;e++)if(e===r)i[r]+=t[e];else if(a[e]!==t[e])throw new Error("non concat dimensions must match")}const p=i.length,d=new Array(n.length);let h=0;for(let e=0;e<d.length;++e)h+=n[e].dims[r],d[e]=h;let f="";f=n.length<5?s(d):l(d);const g=`\n        ${u(n.length,p)}\n        ${c(d)}\n        ${f}\n        float process(int indices[${p}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${r}]);\n\n          if(textureIndex != 0) {\n            indices[${r}] = indices[${r}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;return Object.assign(Object.assign({},t),{output:{dims:i,type:n[0].type,textureType:o.TextureType.unpacked},shaderSource:g})})(0,r,t,n.axis)})},s=e=>`int getTextureWhereDataResides(int index) {\n      ${e.map(((e,t)=>`if(index<${e}) {return ${t};}\n`)).join("")}\n    }`,l=e=>s(e),u=(e,t)=>{const n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${t}]) {`];for(let t=0;t<e;++t)0===t?n.push(`\tif (textureIndex == ${t}) { return _X${t}(indices); }`):t===e-1?n.push(`\telse { return _X${t}(indices); }`):n.push(`\telse if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("\t}"),n.join("\n")},c=e=>{const t=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<e.length;++n)0===n?t.push(`\tif (index == ${n}) { return ${e[n]}; }`):n===e.length-1?t.push(`\telse { return ${e[n]}; }`):t.push(`\telse if (index == ${n}) { return ${e[n]}; }`);return t.push("\t}"),t.join("\n")};t.parseConcatAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis")});const p=e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].type,n=e[0].dims.length;if("string"===t)throw new Error("string tensor is not supported yet");for(const r of e){if(r.type!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}}},7825:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createUnpackedGroupedConvProgramInfoLoader=void 0;const r=n(1315),o=n(6757),a=n(5639),i=n(9754),s=n(2150);t.createUnpackedGroupedConvProgramInfoLoader=(e,t,n)=>{const l=(u=t.length>2,c=n.cacheKey,{name:"GroupedConv",inputNames:u?["X","W","Bias"]:["X","W"],inputTypes:u?[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]:[a.TextureType.unpacked,a.TextureType.unpacked],cacheHint:c});var u,c;return Object.assign(Object.assign({},l),{get:()=>((e,t,n,l)=>{const u=t.length>2?"value += getBias(output_channel);":"",c=t[0].dims.slice(),p=t[1].dims.slice(),d=p[0]/l.group;r.Logger.verbose("GroupedConv",`autpPad:${l.autoPad}, dilations:${l.dilations}, group:${l.group}, kernelShape:${l.kernelShape}, pads:${l.pads}, strides:${l.strides}`);const h=(0,i.calculateOutputShape)(c,p,l.dilations,l.pads,l.strides),f=(0,o.getGlsl)(e.session.backend.glContext.version),{activationFunction:g,applyActivation:_}=(0,s.getActivationSnippet)(l),m=`\n  const ivec2 strides = ivec2(${l.strides[0]}, ${l.strides[1]});\n  const ivec2 pads = ivec2(${l.pads[0]}, ${l.pads[1]});\n  ${g}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${d};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${p[1]}; wInChannel++) {\n      int input_channel = group_id * ${p[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${p[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${l.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${c[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${p[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${l.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${c[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${u}\n    ${_}\n    ${f.output} = vec4(value, .0, .0, .0);\n  }\n`;return Object.assign(Object.assign({},n),{output:{dims:h,type:t[0].type,textureType:a.TextureType.unpacked},shaderSource:m,hasMain:!0})})(e,t,l,n)})}},7708:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.conv2DPacked=t.conv2DPackedPointwise=void 0;const r=n(9754),o=n(5950),a=n(5632);t.conv2DPackedPointwise=(e,t,n)=>{const o=t[0].dims,i=t[1].dims,s=(0,r.calculateOutputShape)(o,i,n.dilations,n.pads,n.strides),l=e.reshapePacked(t[0],[o[1],o[2]*o[3]]),u=e.reshapePacked(t[1],[i[0],i[1]]),c=t.length>2?[u,l,t[2]]:[u,l],p=e.run((0,a.createPackedMatmulProgramInfoLoader)(e,c,n),c);return e.reshapePacked(p,s)},t.conv2DPacked=(e,t,n)=>{const i=t[0].dims,s=t[1].dims,l=(0,r.calculateOutputShape)(i,s,n.dilations,n.pads,n.strides),u=e.run((0,o.createPackedIm2ColProgramInfoLoader)(e,t[0],t[1],l,n),[t[0]]),c=e.reshapePacked(t[1],[s[0],s[1]*s[2]*s[3]]),p=3===t.length?[c,u,t[2]]:[c,u],d=e.run((0,a.createPackedMatmulProgramInfoLoader)(e,p,n),p);return e.reshapePacked(d,l)}},5042:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseConvTransposeAttributes=t.convTranspose=void 0;const r=n(4910),o=n(6757),a=n(5639),i=n(2150),s=(e,t,n,r,o,a)=>(e-1)*t+n+(r-1)*o+1-a,l=(e,t,n,r,o)=>{const a=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=a,n[o]=e-a):"SAME_LOWER"===t&&(n[r]=e-a,n[o]=a)};t.convTranspose=(e,t,n)=>(d(t,n),u(e,t,n));const u=(e,t,n)=>{const r=p(n,t);return[c(e,t,r)]},c=(e,t,n)=>e.run(((e,t,n)=>{const r=(s=t.length>2,l=n.cacheKey,{name:"ConvTranspose",inputNames:s?["X","W","B"]:["X","W"],inputTypes:s?[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]:[a.TextureType.unpacked,a.TextureType.unpacked],cacheHint:l});var s,l;return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const s=t.length>2?"getB(output_channel)":"0.0",l=t[0].dims,u=t[1].dims,c=u[1],p=u[0]/r.group,d=[t[0].dims[0],t[1].dims[1]*r.group,...r.outputShape],h=(0,o.getGlsl)(e.session.backend.glContext.version),{activationFunction:f,applyActivation:g}=(0,i.getActivationSnippet)(r),_=`\n  const ivec2 strides = ivec2(${r.strides[0]}, ${r.strides[1]});\n  const ivec2 pads = ivec2(${r.pads[0]}, ${r.pads[1]});\n  ${f}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${c};\n    int wOutChannel = output_channel - group_id * ${c};\n\n    float value = ${s};\n    for (int inChannelOffset = 0; inChannelOffset < ${p}; inChannelOffset++) {\n      int input_channel = group_id * ${p} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${u[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${u[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${r.dilations[0]}, wHOff * ${r.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${l[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${l[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${g}\n    ${h.output} = vec4(value, .0, .0, .0);\n  }\n`;return Object.assign(Object.assign({},n),{output:{dims:d,type:t[0].type,textureType:a.TextureType.unpacked},shaderSource:_,hasMain:!0})})(e,t,r,n)})})(e,t,n),t),p=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);const r=e.pads.slice(),o=e.outputShape.slice();((e,t,n,r,o,a,i,u)=>{const c=e.length-2,p=0===u.length;for(let d=0;d<c;++d){const h=p?e[d+2]*a[d]:u[d],f=s(e[d+2],a[d],o[d],t[d],n[d],h);l(f,r,o,d,d+c),p&&u.push(a[d]*(e[d+2]-1)+i[d]+(t[d]-1)*n[d]+1-o[d]-o[d+c])}})(t[0].dims,n,e.dilations,e.autoPad,r,e.strides,e.outputPadding,o);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:r,outputShape:o,cacheKey:e.cacheKey}),a};t.parseConvTransposeAttributes=e=>{const t=e.attributes,n=(0,i.parseInternalActivationAttributes)(t),o=t.getString("auto_pad","NOTSET"),a=t.getInts("dilations",[1,1]),s=t.getInt("group",1),l=t.getInts("kernel_shape",[]),u=t.getInts("output_padding",[0,0]),c=t.getInts("output_shape",[]),p=t.getInts("pads",[0,0,0,0]),d=t.getInts("strides",[1,1]);return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:o,dilations:a,group:s,kernelShape:l,outputPadding:u,outputShape:c,pads:p,strides:d},n))};const d=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const r=e[0].dims.length-2;if(t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r)throw new Error(`output_padding should be ${r}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("ConvTranspose input(bias) should be float tensor")}},9754:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseConvAttributes=t.conv=t.calculateOutputShape=void 0;const r=n(4910),o=n(7273),a=n(7825),i=n(7708),s=n(3281),l=n(2150),u=n(1625),c=n(8276);t.calculateOutputShape=(e,t,n,r,o)=>{const a=e[0],i=e.slice(2),s=i.length,l=t[0],u=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=i.map(((e,t)=>e+r[t]+r[t+s])).map(((e,t)=>Math.floor((e-u[t]+o[t])/o[t])));return[a,l].concat(...c)},t.conv=(e,t,n)=>(g(t,n),p(e,t,n));const p=(e,t,n)=>{const r=f(n,t),o=e.session.pack,s=1===r.kernelShape[0]&&1===r.kernelShape[1];return r.group>1?[e.run((0,a.createUnpackedGroupedConvProgramInfoLoader)(e,t,r),t)]:s&&o?[d(e,t,r)]:o&&4===t[0].dims.length&&1===t[0].dims[0]&&!s?[(0,i.conv2DPacked)(e,t,r)]:[h(e,t,r)]},d=(e,n,r)=>{const o=n[0].dims,a=n[1].dims,i=(0,t.calculateOutputShape)(o,a,r.dilations,r.pads,r.strides),s=e.reshapeUnpacked(n[0],[o[1],o[2]*o[3]]),l=e.reshapeUnpacked(n[1],[a[0],a[1]]),u=n.length>2?[l,s,n[2]]:[l,s],p=e.run((0,c.createMatmulProgramInfoLoader)(u,r),u);return e.reshapeUnpacked(p,i)},h=(e,n,r)=>{const o=n[0].dims,a=n[1].dims,i=(0,t.calculateOutputShape)(o,a,r.dilations,r.pads,r.strides),l=e.run((0,u.createIm2ColProgramInfoLoader)(e,n[0],n[1],i,r),[n[0]]),c=3===n.length?[l,n[1],n[2]]:[l,n[1]];return e.run((0,s.createDotProductProgramInfoLoader)(e,n,i,r),c)},f=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length)for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e]);const r=e.pads.slice();o.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,e.autoPad);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:r,cacheKey:e.cacheKey}),a};t.parseConvAttributes=e=>{const t=e.attributes,n=(0,l.parseInternalActivationAttributes)(t),o=t.getString("auto_pad","NOTSET"),a=t.getInts("dilations",[1,1]),i=t.getInt("group",1),s=t.getInts("kernel_shape",[]),u=t.getInts("pads",[0,0,0,0]),c=t.getInts("strides",[1,1]);return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:o,dilations:a,group:i,kernelShape:s,pads:u,strides:c},n))};const g=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length||4!==e[1].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims[1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if("float32"!==e[0].type||"float32"!==e[1].type)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&"float32"!==e[2].type)throw new Error("Conv input(bias) should be float tensor")}},6742:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseDepthToSpaceAttributes=t.depthToSpace=void 0;const r=n(5707);t.depthToSpace=(e,t,n)=>{o(t);const a=n.blocksize,i=a*a,s="DCR"===n.mode?[0,3,4,1,5,2]:[0,1,4,2,5,3],l="DCR"===n.mode?[t[0].dims[0],a,a,t[0].dims[1]/i,t[0].dims[2],t[0].dims[3]]:[t[0].dims[0],t[0].dims[1]/i,a,a,t[0].dims[2],t[0].dims[3]],u=e.reshapeUnpacked(t[0],l),c={perm:s,cacheKey:`${s}`},[p]=(0,r.transpose)(e,[u],c),d=[t[0].dims[0],t[0].dims[1]/i,t[0].dims[2]*a,t[0].dims[3]*a];return[e.reshapeUnpacked(p,d)]},t.parseDepthToSpaceAttributes=e=>{const t=e.attributes.getInt("blocksize");if(t<1)throw new Error(`blocksize must be >= 1, but got : ${t} for DepthToSpace`);const n=e.attributes.getString("mode","DCR");if("DCR"!==n&&"CRD"!==n)throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:t}};const o=e=>{if(1!==e.length)throw new Error(`DepthToSpace expect 1 inputs, but got ${e.length}`);if("string"===e[0].type||4!==e[0].dims.length)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}},3281:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createDotProductProgramInfoLoader=void 0;const r=n(7273),o=n(6757),a=n(5639),i=n(2150),s=n(1625);t.createDotProductProgramInfoLoader=(e,t,n,l)=>{const u=((e,t)=>({name:"ConvDotProduct",inputNames:e?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:e?[a.TextureType.unpacked,a.TextureType.packedLastDimension,a.TextureType.unpacked]:[a.TextureType.unpacked,a.TextureType.packedLastDimension],cacheKey:t.activationCacheKey}))(t.length>2,l);return Object.assign(Object.assign({},u),{get:()=>((e,t,n,l,u)=>{const c=n[0].dims,p=n[1].dims,d=[p[0],Math.ceil(c[1]*p[2]*p[3]/4)],h=(0,s.calculateIm2ColDims)(c,p,l),[f,g]=e.calculateTextureWidthAndHeight(d,a.TextureType.packedLastDimension),_=r.ShapeUtil.computeStrides(h),[m,b]=e.calculateTextureWidthAndHeight(h,a.TextureType.packedLastDimension),y=l.length,w=n.length<3?"0.0":"_B(b)",x=Math.ceil(c[1]*p[2]*p[3]/4),{activationFunction:v,applyActivation:T}=(0,i.getActivationSnippet)(u),k=(0,o.getGlsl)(e.session.backend.glContext.version),S=`\n${v}\nfloat process(int indices[${y}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${_[0]} + im2col[1] * ${_[1]} + im2col[2] * ${_[2]};\n  int kernelOffset = indices[1] * ${d[1]};\n  float value = ${w};\n  for (int i = 0; i < ${x}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${m}, ${b});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${f}, ${g});\n    value += dot(${k.texture2D}(Im2Col, im2colCoords), ${k.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${T}\n  return value;\n}`;return Object.assign(Object.assign({},t),{output:{dims:l,type:n[0].type,textureType:a.TextureType.unpacked},shaderSource:S})})(e,u,t,n,l)})}},4125:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseFlattenAttributes=t.flatten=void 0;const r=n(7273);t.flatten=(e,t,n)=>{o(t,n);const a=r.ShapeUtil.flattenShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],a)]},t.parseFlattenAttributes=e=>e.attributes.getInt("axis",1);const o=(e,t)=>{if(!e||1!==e.length)throw new Error("Flatten requires 1 input.");const n=e[0].dims.length;if(0===n)throw new Error("scalar tensor is not supported.");if(t<-n||t>n)throw new Error("Invalid axis");if("string"===e[0].type)throw new Error("string tensor is not supported.")}},2150:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActivationSnippet=void 0;const r=n(7273),o=n(9087);t.getActivationSnippet=function(e){let t;switch(e.activation){case"Relu":t=(0,o.glslRelu)();break;case"Sigmoid":t=(0,o.glslSigmoid)();break;case"Clip":t=(0,o.glslClip)(e.clipMin,e.clipMax);break;default:return{activationFunction:"",applyActivation:""}}const n=t.name;return{activationFunction:t.body,applyActivation:`value = ${n}_(value);`}},t.parseInternalActivationAttributes=e=>{const t=e.getString("activation","");if("Clip"===t){const[n,o]=e.getFloats("activation_params",[r.MIN_CLIP,r.MAX_CLIP]);return{activation:t,clipMax:o,clipMin:n,activationCacheKey:`${t}:${n},${o}`}}return{activation:t,activationCacheKey:t}}},6149:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseGatherAttributes=t.gather=void 0;const r=n(4910),o=n(6145),a=n(7273),i=n(5639);t.gather=(e,t,n)=>(u(t,n.axis),[e.run(l(e,t,n),t)]),t.parseGatherAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",0)});const s={name:"Gather",inputNames:["A","B"],inputTypes:[i.TextureType.unpacked,i.TextureType.unpacked]},l=(e,t,n)=>{const r=Object.assign(Object.assign({},s),{cacheHint:n.cacheKey});return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const o=n[0].dims.slice(),s=n[1].dims.slice(),l=new Array(o.length+s.length-1);r=a.ShapeUtil.normalizeAxis(r,o.length);const u=[];for(let e=0;e<l.length;e++)e<r?(l[e]=o[e],u.push(`inputIdx[${e}] = outputIdx[${e}];`)):e<r+s.length?(l[e]=s[e-r],u.push(`indexDataIdx[${e-r}] = outputIdx[${e}];`)):(l[e]=o[e-s.length+1],u.push(`inputIdx[${e-s.length+1}] = outputIdx[${e}];`));const c=`\n      float process(int outputIdx[${l.length||1}]) {\n        int inputIdx[${o.length}];\n        int indexDataIdx[${s.length||1}];\n        indexDataIdx[0] = 0;\n        ${u.join("\n        ")}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${r}] = idx < 0 ? idx + ${o[r]} : idx;\n        return _A(inputIdx);\n      }`;return Object.assign(Object.assign({},t),{output:{dims:l,type:n[0].type,textureType:i.TextureType.unpacked},shaderSource:c})})(0,r,t,n.axis)})},u=(e,t)=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.");const n=e[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(t<-n||t>n-1)throw new Error("Invalid axis.");if(-1===o.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invaid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invaid input type.")}},5378:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributesV11=t.parseGemmAttributesV7=t.gemm=void 0;const r=n(4910),o=n(7273),a=n(5639);t.gemm=(e,t,n)=>(u(t,n),[e.run(s(t,n),t)]);const i=(e,t)=>{const n=0!==e.attributes.getInt("transA",0),o=0!==e.attributes.getInt("transB",0),a=e.attributes.getFloat("alpha",1),i=e.attributes.getFloat("beta",1);return(0,r.createAttributeWithCacheKey)({transA:n,transB:o,alpha:a,beta:i,isOptionalC:t})};t.parseGemmAttributesV7=e=>i(e,!1),t.parseGemmAttributesV11=e=>i(e,!0);const s=(e,t)=>{const n={name:"Gemm",inputNames:3===e.length?["A","B","C"]:["A","B"],inputTypes:3===e.length?[a.TextureType.unpacked,a.TextureType.unpacked,a.TextureType.unpacked]:[a.TextureType.unpacked,a.TextureType.unpacked],key:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>l(n,e,t)})},l=(e,t,n)=>{const r=t[0].dims.slice(),i=t[1].dims.slice(),[s,l]=o.GemmUtil.getShapeOfGemmResult(r,n.transA,i,n.transB,3===t.length?t[2].dims:void 0),u=[s,l];if(!u)throw new Error("Can't use gemm on the given tensors");let c=r[r.length-1],p="";n.transA&&(c=r[0]),n.transA&&n.transB?p="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?p="value += _A_T(a) * _B(b);":!n.transA&&n.transB?p="value += _A(a) * _B_T(b);":n.transA||n.transB||(p="value += _A(a) * _B(b);");const d=u.length,h=`\n      float process(int indices[${d}]) {\n          int a[${d}];\n          int b[${d}];\n          ${3===t.length?`int c[${t[2].dims.length}];`:""}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${3===t.length?"bcastIndices_C(indices, c);":""}\n\n          float value = 0.0;\n          for (int k=0; k<${c}; ++k) {\n              a[${d-1}] = k;\n              b[${d-2}] = k;\n              ${p}\n          }\n\n          value = value * alpha;\n          ${3===t.length?"value += beta * _C(c);":""}\n          return value;\n      }`;return Object.assign(Object.assign({},e),{output:{dims:u,type:t[0].type,textureType:a.TextureType.unpacked},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:h})},u=(e,t)=>{if(!e)throw new Error("Input is missing");if(t.isOptionalC&&(e.length<2||e.length>3))throw new Error("Invaid input shape.");if(!t.isOptionalC&&3!==e.length)throw new Error("Gemm requires 3 inputs");if(3===e.length&&1!==e[2].dims.length&&2!==e[2].dims.length)throw new Error("Invalid input shape of C");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type||3===e.length&&"float32"!==e[2].type&&"float64"!==e[2].type)throw new Error("Invalid input type.");if(e[0].type!==e[1].type||3===e.length&&e[0].type!==e[2].type)throw new Error("Input types are mismatched")}},5950:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedIm2ColProgramInfoLoader=void 0;const r=n(6757),o=n(5639),a=n(5614);t.createPackedIm2ColProgramInfoLoader=(e,t,n,i,s)=>{const l=(u=s.cacheKey,{name:"Im2Col (packed)",inputNames:["A"],inputTypes:[o.TextureType.packed],cacheHint:u});var u;return Object.assign(Object.assign({},l),{get:()=>((e,t,n,i,s,l)=>{const u=n.dims,c=i.dims,p=s.length,d=[c[1]*c[2]*c[3],s[2]*s[3]],h=c[2]*c[3],f=(0,a.unpackFromChannel)(),g=(0,r.getGlsl)(e.session.backend.glContext.version);let _="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)_+=`\n            blockIndex = rc.x + ${t};\n            pos = rc.y + ${e};\n\n            if(blockIndex < ${d[1]} && pos < ${d[0]}) {\n              offsetY = int(blockIndex / (${s[p-1]})) * ${l.strides[0]} -\n                ${l.pads[0]};\n              d0 = offsetY + ${l.dilations[0]} * (imod(pos, ${h}) / ${c[2]});\n\n              if(d0 < ${u[2]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${s[p-1]}) * ${l.strides[1]} -\n                  ${l.pads[1]};\n                d1 = offsetX + ${l.dilations[1]} * imod(imod(pos, ${h}), ${c[2]});\n\n                if(d1 < ${u[3]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${h}.);\n                    innerDims = vec2(d0, d1);\n                    result[${2*e+t}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;const m=`\n      ${f}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${_}\n          ${g.output} = result;\n      }\n            `;return Object.assign(Object.assign({},t),{output:{dims:d,type:n.type,textureType:o.TextureType.packed},shaderSource:m,hasMain:!0})})(e,l,t,n,i,s)})}},1625:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.calculateIm2ColDims=t.createIm2ColProgramInfoLoader=void 0;const r=n(5639);t.createIm2ColProgramInfoLoader=(e,n,o,a,i)=>{const s=(l=i.cacheKey,{name:"Im2Col",inputNames:["X"],inputTypes:[r.TextureType.unpacked],cacheHint:l});var l;return Object.assign(Object.assign({},s),{get:()=>((e,n,o,a,i,s)=>{const l=o.dims,u=a.dims,c=i.length,p=(0,t.calculateIm2ColDims)(l,u,i,4),d=`\n        const int XC = ${l[1]};\n        const int XH = ${l[2]};\n        const int XW = ${l[3]};\n        const int KH = ${s.kernelShape[0]};\n        const int KW = ${s.kernelShape[1]};\n        const int dilationH = ${s.dilations[0]};\n        const int dilationW = ${s.dilations[1]};\n        const int strideH = ${s.strides[0]};\n        const int strideW = ${s.strides[1]};\n        const int padH = ${s.pads[0]};\n        const int padW = ${s.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${c}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${l.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;return Object.assign(Object.assign({},n),{output:{dims:p,type:o.type,textureType:r.TextureType.packedLastDimension},shaderSource:d})})(0,s,n,o,a,i)})},t.calculateIm2ColDims=(e,t,n,r=4)=>[n[0],n[2],n[3],Math.ceil(e[1]*t[2]*t[3]/r)]},6981:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseImageScalerAttributes=t.imageScaler=void 0;const r=n(4910),o=n(5639);t.imageScaler=(e,t,n)=>(l(t),[e.run(i(e,t,n),t)]),t.parseImageScalerAttributes=e=>{const t=e.attributes.getFloat("scale"),n=e.attributes.getFloats("bias");return(0,r.createAttributeWithCacheKey)({scale:t,bias:n})};const a={name:"ImageScaler",inputNames:["X"],inputTypes:[o.TextureType.unpacked]},i=(e,t,n)=>{const r=Object.assign(Object.assign({},a),{cacheHint:n.cacheKey});return Object.assign(Object.assign({},r),{get:()=>((e,t,n,r)=>{const a=n[0].dims.slice(),i=a.length,l=`\n      ${s(r.bias.length)}\n      float process(int indices[${i}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;return Object.assign(Object.assign({},t),{output:{dims:a,type:n[0].type,textureType:o.TextureType.unpacked},variables:[{name:"bias",type:"float",arrayLength:r.bias.length,data:r.bias},{name:"scale",type:"float",data:r.scale}],shaderSource:l})})(0,r,t,n)})},s=e=>{const t=[`float getBias(float bias[${e}], int channel) {`];for(let n=0;n<e;++n)0===n?t.push(`\tif (channel == ${n}) { return bias[${n}]; }`):n===e-1?t.push(`\telse { return bias[${n}]; }`):t.push(`\telse if (channel == ${n}) { return bias[${n}]; }`);return t.push("\t}"),t.join("\n")},l=e=>{if(!e||1!==e.length)throw new Error("ImageScaler requires 1 input.");if(4!==e[0].dims.length)throw new Error("Invalid input shape.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")}},7413:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseInstanceNormalizationAttributes=t.instanceNormalization=void 0;const r=n(6757),o=n(5639);t.instanceNormalization=(e,t,n)=>{u(t);const r=e.run(i(t[0]),t);return[e.run(l(e,t[0],n,r.dims),[t[0],r,t[1],t[2]])]},t.parseInstanceNormalizationAttributes=e=>e.attributes.getFloat("epsilon",1e-5);const a={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[o.TextureType.unpacked]},i=e=>Object.assign(Object.assign({},a),{get:()=>((e,t)=>{const n=t.dims.slice(),r=n[1],a=n[2]*n[3],i=[n[0],r],s=`\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${a});\n        temp = 0.0;\n        for(int a2=0; a2<${n[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${n[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${a});\n\n        return v;\n      }`;return Object.assign(Object.assign({},e),{output:{dims:i,type:t.type,textureType:o.TextureType.packedLastDimension},shaderSource:s})})(a,e)}),s={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[o.TextureType.unpacked,o.TextureType.packedLastDimension,o.TextureType.unpacked,o.TextureType.unpacked]},l=(e,t,n,a)=>{const i=Object.assign(Object.assign({},s),{cacheHint:`${n}`});return Object.assign(Object.assign({},i),{get:()=>((e,t,n,a,i)=>{const s=(0,r.getGlsl)(e.session.backend.glContext.version),[l,u]=e.calculateTextureWidthAndHeight(i,o.TextureType.packedLastDimension),[c,p]=[l/4,u],d=`\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${c}, ${p});\n        return ${s.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;return Object.assign(Object.assign({},t),{output:{dims:n.dims,type:n.type,textureType:o.TextureType.unpacked},variables:[{name:"epsilon",type:"float",data:a}],shaderSource:d})})(e,i,t,n,a)})},u=e=>{if(!e||3!==e.length)throw new Error("InstanceNormalization requires 3 inputs.");const t=e[0],n=e[1],r=e[2];if(t.dims.length<3||1!==n.dims.length||1!==r.dims.length)throw new Error("Invalid input shape.");if(n.dims[0]!==t.dims[1]||r.dims[0]!==t.dims[1])throw new Error("Input shapes are mismatched.");if("float32"!==t.type&&"float64"!==t.type||"float32"!==n.type&&"float64"!==n.type||"float32"!==r.type&&"float64"!==r.type)throw new Error("Invalid input type.");if(4!==e[0].dims.length)throw new Error("Only support 4-D input shape.")}},7006:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createLrnProgramInfoLoader=t.parseLrnAttributes=t.lrn=void 0;const r=n(4910),o=n(5639);t.lrn=(e,t,n)=>(s(t),[e.run(i(t,n),t)]),t.parseLrnAttributes=e=>{const t=e.attributes.getFloat("alpha",1e-4),n=e.attributes.getFloat("beta",.75),o=e.attributes.getFloat("bias",1),a=e.attributes.getInt("size");return(0,r.createAttributeWithCacheKey)({alpha:t,beta:n,bias:o,size:a})};const a={name:"LRN",inputNames:["X"],inputTypes:[o.TextureType.unpacked]};function i(e,t){return Object.assign(Object.assign({},a),{cacheHint:t.cacheKey,get:()=>function(e,t){const n=e[0].dims[1],r=e[0].dims.length,i=-Math.floor((t.size-1)/2),s=Math.ceil((t.size-1)/2),l=`float(${t.alpha}) / float(${t.size})`,u=`\n    float process(int indices[${r}]) {\n        int c = indices[1];\n        float x = _X(indices);\n        float square_sum = 0.0;\n\n        for (int i = ${i}; i <= ${s}; i++) {\n          int idx = c + i;\n          if (c >= 0 && c < ${n}) {\n            indices[1] = idx;\n            float j = _X(indices);\n            square_sum += j * j;\n          }\n        }\n        return x / pow(float(${t.bias}) + ${l} * square_sum, float(${t.beta}));\n    }`;return Object.assign(Object.assign({},a),{cacheHint:t.cacheKey,output:{dims:e[0].dims,type:e[0].type,textureType:o.TextureType.unpacked},shaderSource:u})}(e,t)})}t.createLrnProgramInfoLoader=i;const s=e=>{if(!e||1!==e.length)throw new Error("LRN requires 1 input.");if(4!==e[0].dims.length)throw new Error('currently only support LRN for input with "NCHW" format');if("float32"!==e[0].type)throw new Error("input should be float type")}},5632:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createPackedMatmulProgramInfoLoader=void 0;const r=n(7273),o=n(6757),a=n(5639),i=n(432),s=n(2150),l=n(8276);t.createPackedMatmulProgramInfoLoader=(e,t,n)=>{const u=(c=t.length>2,p=n.activationCacheKey,{name:"MatMul (packed)",inputNames:c?["A","B","Bias"]:["A","B"],inputTypes:c?[a.TextureType.packed,a.TextureType.packed,a.TextureType.packed]:[a.TextureType.packed,a.TextureType.packed],cacheHint:p});var c,p;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const c=n.length>2,p=c?"value += getBiasForMatmul();":"",d=n[0].dims,h=n[1].dims,f=r.BroadcastUtil.calcShape(d,h,!0),g=!r.ShapeUtil.areEqual(n[0].dims,n[1].dims);if(!f)throw new Error("Can't use matmul on the given tensors");const _=d[d.length-1],m=Math.ceil(_/2),b=d.length,y=h.length,w=(0,o.getGlsl)(e.session.backend.glContext.version),x=(0,i.getCoordsDataType)(f.length),v=f.length,T=(0,i.getGlChannels)(),{activationFunction:k,applyActivation:S}=(0,s.getActivationSnippet)(u),$=c?`${(0,l.getBiasForMatmul)(x,T,n[2].dims,f,!0)}`:"",P=g?`${function(e,t,n,o){let a=[],i=[];const s=n[0].dims,l=n[1].dims,u=s.length,c=l.length,p=o.length,d=p-u,h=p-c;a=s.map(((e,n)=>`coords.${t[n+d]}`)),a[u-1]="i*2",a.join(", "),i=l.map(((e,n)=>`coords.${t[n+h]}`)),i[c-2]="i*2",i.join(", ");const f=r.BroadcastUtil.getBroadcastDims(s,o),g=r.BroadcastUtil.getBroadcastDims(l,o),_=f.map((e=>`coords.${t[e+d]} = 0;`)).join("\n"),m=g.map((e=>`coords.${t[e+h]} = 0;`)).join("\n"),b=`int lastDim = coords.${t[p-1]};\n  coords.${t[p-1]} = coords.${t[p-2]};\n  coords.${t[p-2]} = lastDim;`;return`\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${b}\n  ${_}\n  vec4 outputValue = getA(${a});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${e} coords = getOutputCoords();\n  ${b}\n  ${m}\n  vec4 outputValue = getB(${i});\n  return outputValue;\n}`}(x,T,n,f)}`:"",A=g?"getAAtOutCoordsMatmul(i)":`getA(${function(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`rc.${e[t-2]}, i*2`,n}(T,b)})`,O=g?"getBAtOutCoordsMatmul(i)":`getB(${function(e,t){let n="";for(let r=0;r<t-2;r++)n+=`rc.${e[r]}, `;return n+=`i*2, rc.${e[t-1]}`,n}(T,y)})`,M=`\n            ${P}\n            ${$}\n            ${k}\n            void main() {\n              ${g?"":`${x} rc =\n          getOutputCoords(); int lastDim = rc.${T[v-1]}; rc.${T[v-1]} =\n          rc.${T[v-2]}; rc.${T[v-2]} = lastDim;\n      `}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${m}; i++) {\n                vec4 a = ${A};\n                vec4 b = ${O};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${p}\n              ${S}\n              ${w.output} = value;\n            }`;return Object.assign(Object.assign({},t),{output:{dims:f,type:n[0].type,textureType:a.TextureType.packed},shaderSource:M,hasMain:!0})})(e,u,t,n)})}},8276:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getBiasForMatmul=t.createMatmulProgramInfoLoader=t.parseMatMulAttributes=t.matMul=void 0;const r=n(7273),o=n(5639),a=n(432),i=n(2150),s=n(5632);t.matMul=(e,t,n)=>(c(t),e.session.pack?[e.run((0,s.createPackedMatmulProgramInfoLoader)(e,t,n),t)]:[e.run(u(t,n),t)]),t.parseMatMulAttributes=e=>(0,i.parseInternalActivationAttributes)(e.attributes);const l=(e,t)=>({name:"MatMul",inputNames:e?["A","B","Bias"]:["A","B"],inputTypes:e?[o.TextureType.unpacked,o.TextureType.unpacked,o.TextureType.unpacked]:[o.TextureType.unpacked,o.TextureType.unpacked],cacheHint:t});function u(e,t){const n=l(e.length>2,t.activationCacheKey);return Object.assign(Object.assign({},n),{get:()=>function(e,t,n){const s=t[0].dims,l=t[1].dims,u=r.BroadcastUtil.calcShape(s,l,!0);if(!u)throw new Error("Can't use matmul on the given tensors");const c=(0,a.getCoordsDataType)(u.length),d=(0,a.getGlChannels)(),{activationFunction:h,applyActivation:f}=(0,i.getActivationSnippet)(n),g=t.length>2,_=g?"value += getBiasForMatmul();":"",m=g?`${p(c,d,t[2].dims,u,!1)}`:"",b=u.length,y=s.length,w=l.length,x=`\n    ${h}\n    ${m}\n    float process(int indices[${b}]) {\n        int a[${y}];\n        int b[${w}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${s[s.length-1]}; ++k) {\n            a[${y-1}] = k;\n            b[${w-2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${_}\n        ${f}\n        return value;\n    }`;return Object.assign(Object.assign({},e),{output:{dims:u,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:x})}(n,e,t)})}t.createMatmulProgramInfoLoader=u;const c=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if("float32"!==e[0].type&&"float64"!==e[0].type||"float32"!==e[1].type&&"float64"!==e[1].type)throw new Error("inputs should be float type");if(e[0].type!==e[1].type)throw new Error("inputs types should match")};function p(e,t,n,o,a){let i="";const s=n.length,l=o.length,u=l-s;i=l<2&&s>0?"coords":n.map(((e,n)=>`coords.${t[n+u]}`)).join(", ");const c=r.BroadcastUtil.getBroadcastDims(n,o).map((e=>`coords.${t[e+u]} = 0;`)).join("\n");let p="vec4(outputValue.xx, outputValue.yy)";return 1===r.ShapeUtil.size(n)&&(p="vec4(outputValue.x)"),a?`\nvec4 getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${c}\n  vec4 outputValue = getBias(${i});\n  return ${p};\n}`:`\nfloat getBiasForMatmul() {\n  ${e} coords = getOutputCoords();\n  ${c}\n  return getBias(coords.x);\n}`}t.getBiasForMatmul=p},9:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createPackProgramInfoLoader=void 0;const r=n(6757),o=n(5639),a=n(432),i=n(5614),s={name:"pack",inputNames:["A"],inputTypes:[o.TextureType.unpackedReversed]};t.createPackProgramInfoLoader=(e,t)=>Object.assign(Object.assign({},s),{get:()=>((e,t)=>{const n=(0,r.getGlsl)(e.session.backend.glContext.version),l=t.dims,u=l.length,c=t.dims.length,p=(0,a.getCoordsDataType)(c),d=(0,i.getChannels)("rc",c),h=(f=c,g=d,_=l[l.length-2],m=l[l.length-1],0===f||1===f?"":`\n    int r = ${g[f-2]};\n    int c = ${g[f-1]};\n    int rp1 = ${g[f-2]} + 1;\n    int cp1 = ${g[f-1]} + 1;\n    bool rEdge = rp1 >= ${m};\n    bool cEdge = cp1 >= ${_};\n    `);var f,g,_,m;let b;b=0===u?[1,1]:1===u?[l[0],1]:[l[c-1],l[c-2]];const y=function(e,t,n){if(0===e)return"false";if(1===e)return`rc > ${t[0]}`;let r="";for(let o=e-2;o<e;o++)r+=`${n[o]} >= ${t[o-e+2]}`,o<e-1&&(r+="||");return r}(c,b,d),w=function(e,t){const n=e.length;if(0===n)return"getA(), 0, 0, 0";if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;let r="";if(n>2)for(let e=0;e<n-2;++e)r+=`${t[e]},`;return`getA(${r}r, c),\n          rEdge ? 0. : getA(${r}rp1, c),\n          cEdge ? 0. : getA(${r}r, cp1),\n          rEdge || cEdge ? 0. : getA(${r}rp1, cp1)`}(l,d),x=`\n        void main() {\n          ${p} rc = getOutputCoords();\n\n          if(${y}) {\n            ${n.output} = vec4(0);\n          } else {\n            ${h}\n\n            ${n.output} = vec4(${w});\n          }\n        }\n      `;return Object.assign(Object.assign({},s),{hasMain:!0,output:{dims:t.dims,type:t.type,textureType:o.TextureType.packed},shaderSource:x})})(e,t)})},5614:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.unpackFromChannel=t.getChannels=t.getVecChannels=void 0;const r=n(432);function o(e,t){return(0,r.getGlChannels)(t).map((t=>`${e}.${t}`))}t.getVecChannels=o,t.getChannels=function(e,t){return 1===t?[e]:o(e,t)},t.unpackFromChannel=function(){return"\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  "}},5565:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parsePadAttributesV11=t.padV11=t.parsePadAttributesV2=t.padV2=void 0;const r=n(4910),o=n(7273),a=n(6757),i=n(5639),s={name:"Pad",inputNames:["A"],inputTypes:[i.TextureType.unpacked]};t.padV2=(e,t,n)=>(c(t),[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>u(e,t[0],n)}),t)]),t.parsePadAttributesV2=e=>{const t=e.attributes.getString("mode","constant"),n=e.attributes.getFloat("value",0),o=e.attributes.getInts("pads");return(0,r.createAttributeWithCacheKey)({mode:t,value:n,pads:o})},t.padV11=(e,n,r)=>{p(n);const o=l(e,n,r);return(0,t.padV2)(e,[n[0]],o)},t.parsePadAttributesV11=e=>e.attributes.getString("mode","constant");const l=(e,t,n)=>{if(!e.session.isInitializer(t[1].dataId)||t.length>=3&&!e.session.isInitializer(t[2].dataId))throw new Error("dynamic pad attributes are not allowed");const o=Array.from(t[1].integerData),a=t.length>=3?t[2].floatData[0]:0;return(0,r.createAttributeWithCacheKey)({mode:n,pads:o,value:a})},u=(e,t,n)=>{const r=o.ShapeUtil.padShape(t.dims.slice(),n.pads),a=r.length,s=`\n      ${d(e,t,n)}\n      float process(int[${a}] indices) {\n          return padA(indices);\n      }`;return{name:"Pad",inputNames:["A"],inputTypes:[i.TextureType.unpacked],output:{dims:r,type:t.type,textureType:i.TextureType.unpacked},shaderSource:s}},c=e=>{if(!e||1!==e.length)throw new Error("Pad requires 1 input");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},p=e=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Pad requires 2 or 3 inputs");if("int32"!==e[1].type)throw new Error("Invalid input type.");if(e.length>=3&&"string"===e[2].type)throw new Error("Invalid input type.")},d=(e,t,n)=>{const r=(0,a.getGlsl)(e.session.backend.glContext.version),[s,l]=e.calculateTextureWidthAndHeight(t.dims,i.TextureType.unpacked),u=o.ShapeUtil.computeStrides(t.dims);switch(n.mode){case"constant":return h(r,t.dims,u,s,l,n.pads,n.value);case"reflect":return f(r,t.dims,u,s,l,n.pads);case"edge":return g(r,t.dims,u,s,l,n.pads);default:throw new Error("Invalid mode")}},h=(e,t,n,r,o,a,i)=>{const s=t.length;let l="";for(let e=s-1;e>=0;--e)l+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0)  return constant;\n        if (k >= ${t[e]}) return constant;\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${s}]) {\n        const float constant = float(${i});\n        int offset = 0;\n        int k = 0;\n        ${l}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},f=(e,t,n,r,o,a)=>{const i=t.length;let s="";for(let e=i-1;e>=0;--e)s+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2*(t[e]-1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${t[e]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${n[e]};\n        `;return`\n      float padA(int m[${i}]) {\n        int offset = 0;\n        int k = 0;\n        ${s}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `},g=(e,t,n,r,o,a)=>{const i=t.length;let s="";for(let e=i-1;e>=0;--e)s+=`\n        k = m[${e}] - ${a[e]};\n        if (k < 0)  k = 0;\n        if (k >= ${t[e]}) k = ${t[e]-1};\n        offset += k * ${n[e]};\n      `;return`\n      float padA(int m[${i}]) {\n        int offset = 0;\n        int k = 0;\n        ${s}\n        vec2 coords = offsetToCoords(offset, ${r}, ${o});\n        float value = getColorAsFloat(${e.texture2D}(A, coords));\n        return value;\n      }\n      `}},2834:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseMaxPoolAttributes=t.maxPool=t.parseGlobalAveragePoolAttributes=t.globalAveragePool=t.parseAveragePoolAttributes=t.averagePool=void 0;const r=n(4910),o=n(7273),a=n(5639);t.averagePool=(e,t,n)=>{p(t);const r={name:"AveragePool",inputNames:["X"],inputTypes:[a.TextureType.unpacked],cacheHint:n.cacheKey};return[e.run(Object.assign(Object.assign({},r),{get:()=>i(t,r,!1,n)}),t)]},t.parseAveragePoolAttributes=e=>{const t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),o=0!==e.attributes.getInt("count_include_pad",0),a=e.attributes.getInts("kernel_shape"),i=e.attributes.getInts("strides",[]),s=e.attributes.getInts("pads",[]);if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,r.createAttributeWithCacheKey)({autoPad:t,ceilMode:n,countIncludePad:o,kernelShape:a,strides:i,pads:s})};const i=(e,t,n,r)=>{const[i,s]=l(e,r,n),u=o.ShapeUtil.size(i.kernelShape);let c="";i.countIncludePad?c+=`value /= float(${u});`:c+=`value /= float(${u} - pad);`;const p=`\n        ${d(e[0].dims,i,"value += _X(x);",c,"0.0")}\n      `;return Object.assign(Object.assign({},t),{output:{dims:s,type:e[0].type,textureType:a.TextureType.unpacked},shaderSource:p})};t.globalAveragePool=(e,t,n)=>{p(t);const r={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[a.TextureType.unpacked],cacheHint:`${n.countIncludePad}`};return[e.run(Object.assign(Object.assign({},r),{get:()=>i(t,r,!0,n)}),t)]},t.parseGlobalAveragePoolAttributes=e=>{const t=0!==e.attributes.getInt("count_include_pad",0);return(0,r.createAttributeWithCacheKey)({autoPad:"",ceilMode:0,countIncludePad:t,kernelShape:[],strides:[],pads:[]})},t.maxPool=(e,t,n)=>{p(t);const r={name:"MaxPool",inputNames:["X"],inputTypes:[a.TextureType.unpacked],cacheHint:n.cacheKey};return[e.run(Object.assign(Object.assign({},r),{get:()=>s(t,r,!1,n)}),t)]},t.parseMaxPoolAttributes=e=>{const t=e.attributes.getString("auto_pad","NOTSET"),n=e.attributes.getInt("ceil_mode",0),o=e.attributes.getInts("kernel_shape"),a=e.attributes.getInts("strides",[]),i=e.attributes.getInts("pads",[]),s=e.attributes.getInt("storage_order",0),l=e.attributes.getInts("dilations",[]);if(0!==s)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==n)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,r.createAttributeWithCacheKey)({autoPad:t,ceilMode:n,countIncludePad:!1,kernelShape:o,strides:a,pads:i,storageOrder:s,dilations:l})};const s=(e,t,n,r)=>{const[o,i]=l(e,r,n),s=`\n      ${d(e[0].dims,o,"\n      value = max(_X(x), value);\n    ","","-1e5")}\n    `;return Object.assign(Object.assign({},t),{output:{dims:i,type:e[0].type,textureType:a.TextureType.unpacked},shaderSource:s})},l=(e,t,n)=>{const r=e[0].dims.slice(),a=Object.hasOwnProperty.call(t,"dilations"),i=t.kernelShape.slice(),s=t.strides.slice(),l=a?t.dilations.slice():[],u=t.pads.slice();o.PoolConvUtil.adjustPoolAttributes(n,r,i,s,l,u);const c=o.PoolConvUtil.computePoolOutputShape(n,r,s,l,i,u,t.autoPad),p=Object.assign({},t);return a?Object.assign(p,{kernelShape:i,strides:s,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(p,{kernelShape:i,strides:s,pads:u,cacheKey:t.cacheKey}),[p,c]},u={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},c={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[a.TextureType.unpacked]};t.globalMaxPool=(e,t)=>(p(t),[e.run(Object.assign(Object.assign({},c),{get:()=>s(t,c,!0,u)}),t)]);const p=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.")},d=(e,t,n,r,a)=>{const i=e.length;if(t.kernelShape.length<=2){const o=t.kernelShape[t.kernelShape.length-1],s=t.strides[t.strides.length-1],l=t.pads[t.pads.length/2-1],u=t.pads[t.pads.length-1],c=e[i-1];let p="",d="",h="";if(p=l+u!==0?`\n          for (int i = 0; i < ${o}; i++) {\n            x[${i} - 1] = indices[${i} - 1] * ${s} - ${l} + i;\n            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${c}) {\n              pad++;\n              continue;\n            }\n            ${n}\n          }`:`\n          for (int i = 0; i < ${o}; i++) {\n            x[${i} - 1] = indices[${i} - 1] * ${s} - ${l} + i;\n            ${n}\n          }`,2===t.kernelShape.length){const n=t.kernelShape[t.kernelShape.length-2],r=t.strides[t.strides.length-2],a=t.pads[t.pads.length/2-2],s=t.pads[t.pads.length-2],l=e[i-2];d=a+s!==0?`\n            for (int j = 0; j < ${n}; j++) {\n              x[${i} - 2] = indices[${i} - 2] * ${r} - ${a} + j;\n              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${l}) {\n                pad+= ${o};\n                continue;\n              }\n          `:`\n            for (int j = 0; j < ${n}; j++) {\n              x[${i} - 2] = indices[${i} - 2] * ${r} - ${a} + j;\n            `,h="\n          }\n        "}return`\n        float process(int indices[${i}]) {\n          int x[${i}];\n          copyVec(indices, x);\n\n          float value = ${a};\n          int pad = 0;\n          ${d}\n          ${p}\n          ${h}\n          ${r}\n          return value;\n        }\n      `}{const s=o.ShapeUtil.size(t.kernelShape),l=o.ShapeUtil.computeStrides(t.kernelShape),u=l.length,c=t.pads.length,p=f(u),d=h(e,"inputDims"),g=h(t.pads,"pads"),_=h(l,"kernelStrides"),m=h(t.strides,"strides");let b="";return b=t.pads.reduce(((e,t)=>e+t))?`\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${n}\n          }`:`\n          }\n          ${n}\n        `,`\n        ${p}\n        float process(int indices[${i}]) {\n          int x[${i}];\n          copyVec(indices, x);\n          int offset[${u}];\n          int pads[${c}];\n          int inputDims[${i}];\n          int kernelStrides[${u}];\n          int strides[${u}];\n          ${g}\n          ${d}\n          ${m}\n          ${_}\n\n          float value = ${a};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${s}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${i} - ${u}; j < ${i}; j++) {\n              x[j] = indices[j] * strides[j - ${i} + ${u}]\n                + offset[j - ${i} + ${u}] - pads[j - 2];\n              ${b}\n          }\n          ${r}\n\n          return value;\n        }\n      `}},h=(e,t)=>{let n="";for(let r=0;r<e.length;r++)n+=`\n      ${t}[${r}] = ${e[r]};\n    `;return n},f=e=>`\n  void offsetToIndices(int offset, int[${e}] strides, out int[${e}] indices) {\n    if (${e} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${e} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${e} - 1] = offset;\n  }`},1010:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.reduceLogSumSquare=t.reduceLogSum=t.reduceProd=t.reduceMin=t.reduceMax=t.reduceMean=t.reduceSum=t.parseReduceAttributes=void 0;const r=n(4910),o=n(6145),a=n(7273),i=n(5639),s=(e,t,n,r,o)=>{u(t);const a={name:r,inputNames:["A"],inputTypes:[i.TextureType.unpacked]};return[e.run(Object.assign(Object.assign({},a),{cacheHint:n.cacheKey,get:()=>l(e,t,n,r,o,a)}),t)]};t.parseReduceAttributes=e=>{const t=e.attributes.getInts("axes",[]),n=1===e.attributes.getInt("keepdims",1);return(0,r.createAttributeWithCacheKey)({axes:t,keepDims:n})};const l=(e,t,n,r,o,s)=>{const l=[],u=t[0].dims.length||1,c=[],p=a.ShapeUtil.normalizeAxes(n.axes,t[0].dims.length),d=o(t,p);let h=d[1];for(let e=0;e<t[0].dims.length;e++)p.indexOf(e)>=0||0===p.length?(n.keepDims&&l.push(1),h=`\n          for(int j${e} = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n            inputIdx[${e}] = j${e};\n            ${h}\n          }`):(c.push(`inputIdx[${e}] = outputIdx[${l.length}];`),l.push(t[0].dims[e]));const f=`\n      float process(int outputIdx[${l.length||1}]) {\n        float value;                 // final result\n        int inputIdx[${u}];      // addressing input data\n        ${c.join("\n")}\n        ${d[0]}       // init ops for reduce max/min\n        ${h}\n        ${d[2]}       // final computation for reduce mean\n        return value;\n      }`;return Object.assign(Object.assign({},s),{output:{dims:l,type:t[0].type,textureType:i.TextureType.unpacked},shaderSource:f})},u=e=>{if(!e||1!==e.length)throw new Error("Reduce op requires 1 input.");if(-1===o.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.")};t.reduceSum=(e,t,n)=>s(e,t,n,"ReduceSum",(()=>["value = 0.0;","value += _A(inputIdx);",""])),t.reduceMean=(e,t,n)=>s(e,t,n,"ReduceMean",((e,t)=>{let n=1;for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&(n*=e[0].dims[r]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${n}.;`]})),t.reduceMax=(e,t,n)=>s(e,t,n,"ReduceMax",((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]})),t.reduceMin=(e,t,n)=>s(e,t,n,"ReduceMin",((e,t)=>{const n=[];for(let r=0;r<e[0].dims.length;r++)(t.indexOf(r)>=0||0===t.length)&&n.push(`inputIdx[${r}] = 0;`);return[`${n.join("\n")}\nvalue = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]})),t.reduceProd=(e,t,n)=>s(e,t,n,"ReduceProd",(()=>["value = 1.0;","value *= _A(inputIdx);",""])),t.reduceLogSum=(e,t,n)=>s(e,t,n,"ReduceLogSum",(()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"])),t.reduceLogSumSquare=(e,t,n)=>s(e,t,n,"ReduceLogSumSquare",(()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""]))},7379:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isReshapeCheap=t.processDims3D=t.createPackedReshape3DProgramInfoLoader=void 0;const r=n(7273),o=n(6757),a=n(5639),i=n(5614);t.createPackedReshape3DProgramInfoLoader=(e,t,n)=>{const s=(e=>({name:"Reshape (packed)",inputTypes:[a.TextureType.packed],inputNames:["A"],cacheHint:`${e}`}))(n);return Object.assign(Object.assign({},s),{get:()=>((e,t,n,s)=>{const l=t.dims,u=s;let c="";for(let e=0;e<4;e++){let t="";switch(e){case 0:t="outputCoords = rc;";break;case 1:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:t="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:t="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}c+=`\n        ${t}\n        ${e>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${e>0?"}":""}\n      `}const p=(0,o.getGlsl)(e.session.backend.glContext.version),d=`\n      ${function(e){const t=r.ShapeUtil.computeStrides(e),n=["b","r","c"],o="index";return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t.map(((e,r)=>`int ${n[r]} = ${o} / ${e}; ${r===t.length-1?`int ${n[r+1]} = ${o} - ${n[r]} * ${e}`:`index -= ${n[r]} * ${e}`};`)).join("")}\n      return ivec3(b, r, c);\n    }\n  `}(l)}\n      ${function(e){const t=r.ShapeUtil.computeStrides(e);return`\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${t[0]} + coords.z * ${t[1]} + coords.y;\n  }\n`}(u)}\n      ${(0,i.unpackFromChannel)()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${u[2]};\n        int cols = ${u[1]};\n\n        ${c}\n        ${p.output} = result;\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:u,type:t.type,textureType:a.TextureType.packed},shaderSource:d,hasMain:!0})})(e,t,s,n)})},t.processDims3D=function(e){if(0===e.length)return[1,1,1];let t=1;for(let n=0;n<e.length-2;++n)t*=e[n];return[t,e.length>1?e[e.length-2]:1,e[e.length-1]]},t.isReshapeCheap=function(e,t){let n=!1;return n=0===e.length||0===t.length||(e.length<2||t.length<2?e[e.length-1]===t[t.length-1]:e[e.length-1]===t[t.length-1]&&e[e.length-2]===t[t.length-2]),n}},8126:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.reshape=void 0;const r=n(7273);t.reshape=(e,t)=>{const n=r.ShapeUtil.calculateReshapedDims(t[0].dims,t[1].integerData);return e.session.pack?[e.reshapePacked(t[0],n)]:[e.reshapeUnpacked(t[0],n)]}},2801:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributesV11=t.parseResizeAttributesV10=t.resize=void 0;const r=n(6757),o=n(5639),a=n(432),i=n(5614),s=n(3980),l={name:"Resize",inputNames:["A"],inputTypes:[o.TextureType.packed]};t.resize=(e,t,n)=>((0,s.validateInputs)(t,n),[e.run(Object.assign(Object.assign({},l),{cacheHint:n.cacheKey,get:()=>u(e,t,n)}),t)]),t.parseResizeAttributesV10=e=>(0,s.parseUpsampleAttributes)(e,10),t.parseResizeAttributesV11=e=>(0,s.parseUpsampleAttributes)(e,11);const u=(e,t,n)=>{const s=(0,r.getGlsl)(e.session.backend.glContext.version),[u,p]=c(t,n);if(u.every((e=>1===e))&&"tf_crop_and_resize"!==n.coordinateTransformMode)return Object.assign(Object.assign({},l),{output:{dims:p,type:t[0].type,textureType:o.TextureType.packed},hasMain:!0,shaderSource:`void main() {\n                    vec4 v = ${s.texture2D}(X, TexCoords);\n                    ${s.output} = v;\n                }`});const d=p.length;if(d<2)throw new Error(`output dimension should be at least 2, but got ${d}`);const h=p[d-2],f=p[d-1],g=t[0].dims;if(d!==g.length)throw new Error(`output dimension should match input ${g.length}, but got ${d}`);const _=g[d-2],m=g[d-1],b=u[d-2],y=u[d-1];let w="";if("linear"!==n.mode)throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                ";break;case"half_pixel":w="\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                ";break;case"pytorch_half_pixel":w=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${f}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${h}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${f}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${h}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;break;case"align_corners":w=`\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${f}.0 - 1.0, ${h}.0 - 1.0, ${f}.0 - 1.0,\n                            ${h}.0 - 1.0);\n                        vec4 original = vec4(${m}.0 - 1.0, ${_}.0 - 1.0, ${m}.0 - 1.0,\n                            ${_}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}const x=(0,a.getCoordsDataType)(d),v=`\n            const vec2 inputWH = vec2(${_}.0, ${m}.0);\n            const vec4 scaleWHWH = vec4(float(${b}), float(${y}), float(${b}), float(${y}));\n            ${(0,i.unpackFromChannel)()}\n            ${w}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${x} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${h-1};\n                bool hasNextCol = rc.z < ${f-1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${s.output} = vec4(newValue);\n            }\n        `;return Object.assign(Object.assign({},l),{output:{dims:p,type:t[0].type,textureType:o.TextureType.packed},hasMain:!0,shaderSource:v})},c=(e,t)=>{const n=e[0].dims;let r,o=t.scales;if(0===o.length){const a=e[t.scalesInputIdx];if(a&&0!==a.size){if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=p(a,t.mode,t.isResize)}else{const a=e[t.sizesInputIdx];if(!a||0===a.size)throw new Error("Either scales or sizes MUST be provided as input.");r=Array.from(a.integerData),o=d(r,n,t.mode,t.isResize)}}else if(e[t.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");const a=r||n.map(((e,t)=>Math.floor(e*o[t])));return[o,a]},p=(e,t,n)=>{const r=Array.from(e.floatData);return(0,s.scalesValidation)(r,t,n),r},d=(e,t,n,r)=>{const o=t.length,a=new Array(o);for(let n=0,r=o;n<r;n++)if(0===t[n]){if(0!==e[n])throw new Error("Input dim is zero but required output dim is non-zero.");a[n]=1}else a[n]=e[n]/t[n];return(0,s.scalesValidation)(a,n,r),a}},565:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.shape=void 0;const r=n(9240);t.shape=(e,t)=>(o(t),[new r.Tensor([t[0].dims.length],"int32",void 0,void 0,new Int32Array(t[0].dims))]);const o=e=>{if(!e||1!==e.length)throw new Error("Shape requires 1 input.")}},2444:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sliceV10=t.parseSliceAttributes=t.slice=void 0;const r=n(4910),o=n(6145),a=n(7273),i=n(5639),s={name:"Slice",inputNames:["A"],inputTypes:[i.TextureType.unpacked]};t.slice=(e,t,n)=>(u(t),[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>l(e,t[0],n)}),t)]),t.parseSliceAttributes=e=>{const t=e.attributes.getInts("starts"),n=e.attributes.getInts("ends"),o=e.attributes.getInts("axes",[]);return(0,r.createAttributeWithCacheKey)({starts:t,ends:n,axes:o})};const l=(e,t,n)=>{const r=0===n.axes.length?t.dims.slice(0).map(((e,t)=>t)):n.axes,o=a.ShapeUtil.normalizeAxes(r,t.dims.length),l=n.starts.map(((e,n)=>e>t.dims[o[n]]-1?t.dims[o[n]]:a.ShapeUtil.normalizeAxis(e,t.dims[o[n]]))),u=n.ends.map(((e,n)=>e>t.dims[o[n]]-1?t.dims[o[n]]:a.ShapeUtil.normalizeAxis(e,t.dims[o[n]]))),c=t.dims.slice(),p=[];for(let e=0;e<o.length;e++)c[o[e]]=u[e]-l[e],l[e]>0&&p.push(`outputIdx[${o[e]}] += ${l[e]};`);const d=`\n      float process(int outputIdx[${c.length}]) {\n        ${p.join("\n      ")}\n        return _A(outputIdx);\n      }`;return Object.assign(Object.assign({},s),{output:{dims:c,type:t.type,textureType:i.TextureType.unpacked},shaderSource:d})},u=e=>{if(!e||1!==e.length)throw new Error("Slice requires 1 input.");if(-1===o.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.")};t.sliceV10=(e,t)=>{p(t);const n=c(e,t);return[e.run(Object.assign(Object.assign({},s),{cacheHint:n.cacheKey,get:()=>l(e,t[0],n)}),[t[0]])]};const c=(e,t)=>{if(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)||t.length>=4&&!e.session.isInitializer(t[3].dataId)||t.length>=5&&!e.session.isInitializer(t[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(t.length>=5&&t[4].integerData.some((e=>1!==e)))throw new Error("currently non-1 steps is not supported for Slice");const n=Array.from(t[1].integerData),r=Array.from(t[2].integerData),o=t.length>=4?Array.from(t[3].integerData):[];return{starts:n,ends:r,axes:o,cacheKey:`${o};${n};${r}`}},p=e=>{if(!e||e.length<3||e.length>5)throw new Error("Invalid input number.");if("int32"!==e[1].type||1!==e[1].dims.length)throw new Error("Invalid input type.");if("int32"!==e[2].type||1!==e[2].dims.length)throw new Error("Invalid input type.");if(e.length>=4&&("int32"!==e[3].type||1!==e[3].dims.length))throw new Error("Invalid input type.");if(e.length>=5&&("int32"!==e[4].type||1!==e[4].dims.length))throw new Error("Invalid input type.")}},815:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.softmaxV13=t.parseSoftmaxAttributesV13=t.parseSoftmaxAttributes=t.softmax=void 0;const r=n(4910),o=n(7273),a=n(6757),i=n(5639),s=n(5707),l={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[i.TextureType.unpacked]},u={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[i.TextureType.unpacked,i.TextureType.unpacked]},c={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[i.TextureType.unpacked,i.TextureType.unpacked,i.TextureType.unpacked]};t.softmax=(e,t,n)=>{g(t);const r=t[0].dims.slice(),a=o.ShapeUtil.normalizeAxis(n.axis,r.length),i=o.ShapeUtil.sizeToDimension(r,a),s=o.ShapeUtil.sizeFromDimension(r,a);return p(e,t,n,i,s)},t.parseSoftmaxAttributes=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",1)}),t.parseSoftmaxAttributesV13=e=>(0,r.createAttributeWithCacheKey)({axis:e.attributes.getInt("axis",-1)}),t.softmaxV13=(e,t,n)=>{g(t);const a=t[0].dims.slice(),i=o.ShapeUtil.normalizeAxis(n.axis,a.length),l=a.length,u=i!==l-1,c=[];let d,h=[],f=[];u&&(h=Array.from({length:l}).map(((e,t)=>t)),h[i]=l-1,h[l-1]=i,h.map((e=>c.push(a[e]))),d=(0,r.createAttributeWithCacheKey)({perm:h}),f=(0,s.transpose)(e,t,d));const _=u?o.ShapeUtil.sizeToDimension(c,l-1):o.ShapeUtil.sizeToDimension(a,l-1),m=u?o.ShapeUtil.sizeFromDimension(c,l-1):o.ShapeUtil.sizeFromDimension(a,l-1),b=p(e,u?f:t,n,_,m);return u?(0,s.transpose)(e,b,d):b};const p=(e,t,n,r,o)=>{const a=d(e,t[0],r,o,[r]),i=e.run(Object.assign(Object.assign({},l),{cacheHint:n.cacheKey,get:()=>a}),t),s=h(e,t[0],r,o,a.output.dims,[r]),p=e.run(Object.assign(Object.assign({},u),{cacheHint:n.cacheKey,get:()=>s}),[t[0],i]),g=f(e,t[0],r,o,a.output.dims,s.output.dims);return[e.run(Object.assign(Object.assign({},c),{cacheHint:n.cacheKey,get:()=>g}),[t[0],i,p])]},d=(e,t,n,r,o)=>{const[s,u]=e.calculateTextureWidthAndHeight(t.dims,i.TextureType.unpacked),c=o.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==o.length)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");const p=(0,a.getGlsl)(e.session.backend.glContext.version),d=`\n      float process(int[${c}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float max = getColorAsFloat(${p.texture2D}(A, offsetToCoords(logical_row_start_offset, ${s},\n        ${u} )));\n        for(int i=1; i<${r}; ++i)\n        {\n          float current = getColorAsFloat(${p.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${s}, ${u})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;return Object.assign(Object.assign({},l),{output:{dims:o,type:t.type,textureType:i.TextureType.unpacked},shaderSource:d})},h=(e,t,n,r,o,s)=>{const[l,c]=e.calculateTextureWidthAndHeight(t.dims,i.TextureType.unpacked),p=s.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==s.length)throw new Error("Dimensionality of the output should be 1");if(s[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(1!==o.length)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");const d=`\n      float process(int[${p}] indices) {\n        int logical_row_start_offset = indices[0] * ${r};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${r}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${(0,a.getGlsl)(e.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${l}, ${c}))) - max);\n        }\n\n        return norm_factor;\n      }`;return Object.assign(Object.assign({},u),{output:{dims:s,type:t.type,textureType:i.TextureType.unpacked},shaderSource:d})},f=(e,t,n,r,o,a)=>{const[s,l]=e.calculateTextureWidthAndHeight(t.dims,i.TextureType.unpacked),u=t.dims.length;if(n<1||r<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(1!==o.length||1!==a.length)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||a[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");const p=`\n      float process(int[${u}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${s}, ${l});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${r};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;return Object.assign(Object.assign({},c),{output:{dims:t.dims,type:t.type,textureType:i.TextureType.unpacked},shaderSource:p})},g=e=>{if(!e||1!==e.length)throw new Error("Softmax requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type")}},564:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const r=n(4910),o=n(7273),a=n(5639),i={name:"Split",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};t.split=(e,t,n)=>{u(t);const r=o.ShapeUtil.normalizeAxis(n.axis,t[0].dims.length),a=s(e,t,r,n),c=[];for(let o=0;o<a;++o)c.push(e.run(Object.assign(Object.assign({},i),{cacheHint:`${n.cacheKey};${o}`,get:()=>l(e,t[0],n,r,o)}),t));return c},t.parseSplitAttributes=e=>{const t=e.attributes.getInt("axis",0),n=e.attributes.getInts("split",[]),o=e.outputs.length;return(0,r.createAttributeWithCacheKey)({axis:t,split:n,numOutputs:o})};const s=(e,t,n,r)=>{const[,a]=o.SplitUtil.splitShape(t[0].dims,n,r.split,r.numOutputs);return a.length},l=(e,t,n,r,s)=>{const[l,u]=o.SplitUtil.splitShape(t.dims,r,n.split,n.numOutputs),c=u[s],p=l[s],d=`\n      float process(int indices[${p.length}]) {\n        indices[${r}] += ${c};\n        return _A(indices);\n      }\n    `;return Object.assign(Object.assign({},i),{cacheHint:`${n.cacheKey}:${s}`,output:{dims:p,type:t.type,textureType:a.TextureType.unpacked},shaderSource:d})},u=e=>{if(!e||1!==e.length)throw new Error("Split requires one input.");if("int8"!==e[0].type&&"uint8"!==e[0].type&&"int16"!==e[0].type&&"uint16"!==e[0].type&&"int32"!==e[0].type&&"uint32"!==e[0].type&&"float32"!==e[0].type&&"float64"!==e[0].type&&"bool"!==e[0].type)throw new Error("Invalid input type.")}},5416:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSqueezeAttributes=t.squeezeV13=t.squeeze=void 0;const r=n(7273);t.squeeze=(e,t,n)=>{o(t);const a=r.ShapeUtil.squeezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],a)]},t.squeezeV13=(e,n)=>(a(n),(0,t.squeeze)(e,[n[0]],Array.from(n[1].integerData))),t.parseSqueezeAttributes=e=>e.attributes.getInts("axes");const o=e=>{if(!e||1!==e.length)throw new Error("Squeeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},a=e=>{if(!e||2!==e.length)throw new Error("Squeeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}},1240:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.sum=void 0;const r=n(6757),o=n(5639);t.sum=(e,t)=>{i(t);const n={name:"Sum",inputNames:t.map(((e,t)=>`X${t}`)),inputTypes:new Array(t.length).fill(o.TextureType.unpacked)};return[e.run(Object.assign(Object.assign({},n),{get:()=>a(e,t,n)}),t)]};const a=(e,t,n)=>{const a=(0,r.getGlsl)(e.session.backend.glContext.version),i=t[0].dims.slice(),s=`\n      void main() {\n        vec4 result = ${t.map(((e,t)=>`${a.texture2D}(X${t},TexCoords)`)).join(" + ")};\n        ${a.output} = result;\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:i,type:t[0].type,textureType:o.TextureType.unpacked},hasMain:!0,shaderSource:s})},i=e=>{if(!e||0===e.length)throw new Error("Sum requires inputs.");const t=e[0].dims.length;for(let n=1;n<e.length;n++){if(t!==e[n].dims.length)throw new Error("Input shapes are mismatched.");for(let r=0;r<t;r++)if(e[0].dims[r]!==e[n].dims[r])throw new Error("Input shapes are not matched.")}if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("Invalid input type.");for(let t=1;t<e.length;t++)if(e[0].type!==e[t].type)throw new Error("Input types are not matched.")}},5944:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tile=void 0;const r=n(6145),o=n(5639);t.tile=(e,t)=>{i(t);const n={name:"Tile",inputNames:["A"],inputTypes:[o.TextureType.unpacked]};return[e.run(Object.assign(Object.assign({},n),{get:()=>a(e,t,n)}),t)]};const a=(e,t,n)=>{const r=t[0].dims.slice(),a=new Array(r.length),i=[];for(let e=0;e<r.length;e++)a[e]=r[e]*t[1].numberData[e],i.push(`inputIdx[${e}] = int(mod(float(outputIdx[${e}]), ${r[e]}.));`);const s=a.length,l=`\n      float process(int outputIdx[${s}]) {\n        int inputIdx[${s}];\n        ${i.join("\n")}\n        return _A(inputIdx);\n      }\n    `;return Object.assign(Object.assign({},n),{output:{dims:a,type:t[0].type,textureType:o.TextureType.unpacked},shaderSource:l})},i=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 input.");if(1!==e[1].dims.length)throw new Error("The second input shape must 1 dimension.");if(e[1].dims[0]!==e[0].dims.length)throw new Error("Invalid input shape.");if(-1===r.NUMBER_TYPES.indexOf(e[0].type))throw new Error("Invalid input type.");if("int32"!==e[1].type&&"int16"!==e[1].type)throw new Error("Invalid repeat type.")}},5707:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=void 0;const r=n(4910),o=n(7273),a=n(5639),i={name:"Transpose",inputNames:["A"],inputTypes:[a.TextureType.unpacked]};t.transpose=(e,t,n)=>(p(t),[e.run(Object.assign(Object.assign({},i),{cacheHint:n.cacheKey,get:()=>s(e,t[0],n.perm)}),t)]),t.parseTransposeAttributes=e=>(0,r.createAttributeWithCacheKey)({perm:e.attributes.getInts("perm",[])});const s=(e,t,n)=>{const r=t.dims;n=l(r,n);const o=u(r,n),s=r.length,p=`\n      ${c("perm",n,s)}\n      float process(int indices[${s}]) {\n        int a[${s}];\n        perm(a, indices);\n        return _A(a);\n      }`;return Object.assign(Object.assign({},i),{output:{dims:o,type:t.type,textureType:a.TextureType.unpacked},shaderSource:p})},l=(e,t)=>(t&&t.length!==e.length&&(t=[...e.keys()].reverse()),t),u=(e,t)=>(t=l(e,t),o.ShapeUtil.sortBasedOnPerm(e,t)),c=(e,t,n)=>{const r=[];r.push(`void ${e}(out int a[${n}], int src[${n}]) {`);for(let e=0;e<n;++e)r.push(`\ta[${t[e]}]=src[${e}];`);return r.push("\t}"),r.join("\n")},p=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if("float32"!==e[0].type&&"float64"!==e[0].type)throw new Error("input should be float tensor")}},2488:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.encodeAsUint8=void 0;const r=n(6757),o=n(5639);t.encodeAsUint8=(e,t)=>{const n=t.shape,a=(0,r.getGlsl)(e.session.backend.glContext.version),i=`\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${a.texture2D}(X,TexCoords).r;\n      ${a.output} = encodeAsUint8(value);\n    }`,s={name:"Uint8Encode",inputTypes:[o.TextureType.unpacked],inputNames:["X"],output:{dims:n,type:t.tensor.type,textureType:o.TextureType.downloadUint8AsFloat},shaderSource:i,hasMain:!0};return e.executeProgram(s,[t.tensor])}},9087:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tanh=t.tan=t.sqrt=t.sin=t.sigmoid=t.relu=t.not=t.neg=t.log=t.parseLeakyReluAttributes=t.leakyRelu=t.identity=t.floor=t.exp=t.parseEluAttributes=t.elu=t.cos=t.ceil=t.clipV11=t.parseClipAttributes=t.clip=t.atan=t.asin=t.acos=t.abs=t.glslTanh=t.glslTan=t.glslSqrt=t.glslSigmoid=t.glslRelu=t.glslSin=t.glslNot=t.glslNeg=t.glslLog=t.glslLeakyRelu=t.glslIdentity=t.glslClip=t.glslFloor=t.glslExp=t.glslElu=t.glslCos=t.glslCeil=t.glslAtan=t.glslAsin=t.glslAcos=t.glslAbs=void 0;const r=n(4910),o=n(7273),a=n(1997),i=n(6757),s=n(5639);function l(){return O("abs")}function u(){return O("acos")}function c(){return O("asin")}function p(){return O("atan")}function d(){return O("ceil")}function h(){return O("cos")}function f(e){const t="elu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:a.FunctionType.ValueBased}}function g(){return O("exp")}function _(){return O("floor")}function m(e,t){const n="clip";return{body:`\n  const float min = float(${e});\n  const float max = float(${t});\n\n  float ${n}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${n}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `,name:n,type:a.FunctionType.ValueBased}}function b(){const e="indentity";return{body:`\n  float ${e}_(float a) {\n    return a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return v;\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function y(e){const t="leakyRelu";return{body:`\n  const float alpha = float(${e});\n\n  float ${t}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${t}_(vec4 v) {\n    return vec4(${t}_(v.x), ${t}_(v.y), ${t}_(v.z), ${t}_(v.w));\n  }\n  `,name:t,type:a.FunctionType.ValueBased}}function w(){return O("log")}function x(){const e="neg";return{body:`\n  float ${e}_(float a) {\n    return -a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return -v;\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function v(){const e="not";return{body:`\n  float ${e}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${e}_(bool a) {\n    return !a;\n  }\n  vec4 ${e}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${e}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function T(){return O("sin")}function k(){const e="relu";return{body:`\n  float ${e}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${e}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function S(){const e="sigmoid";return{body:`\n  float ${e}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${e}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function $(){return O("sqrt")}function P(){return O("tan")}function A(){const e="tanh";return{body:`\n  float ${e}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${e}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}function O(e){return{body:`\n  float ${e}_(float a) {\n    return ${e}(a);\n  }\n  vec4 ${e}_(vec4 v) {\n    return ${e}(v);\n  }\n  `,name:e,type:a.FunctionType.ValueBased}}t.glslAbs=l,t.glslAcos=u,t.glslAsin=c,t.glslAtan=p,t.glslCeil=d,t.glslCos=h,t.glslElu=f,t.glslExp=g,t.glslFloor=_,t.glslClip=m,t.glslIdentity=b,t.glslLeakyRelu=y,t.glslLog=w,t.glslNeg=x,t.glslNot=v,t.glslSin=T,t.glslRelu=k,t.glslSigmoid=S,t.glslSqrt=$,t.glslTan=P,t.glslTanh=A;const M=(e,t,n,r)=>{const o=e.session.pack?s.TextureType.packed:s.TextureType.unpacked,a={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:r};return Object.assign(Object.assign({},a),{get:()=>((e,t,n,r)=>{const o=e.session.pack?s.TextureType.packed:s.TextureType.unpacked,a=(0,i.getGlsl)(e.session.backend.glContext.version);return Object.assign(Object.assign({},t),{output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`\n     ${r.body}\n     void main() {\n       vec4 v = ${a.texture2D}(A, TexCoords);\n       v = ${r.name}_(v);\n       ${a.output} = v;\n     }\n     `,hasMain:!0})})(e,a,t,n)})};t.abs=(e,t)=>[e.run(M(e,t[0],l()),t)],t.acos=(e,t)=>[e.run(M(e,t[0],u()),t)],t.asin=(e,t)=>[e.run(M(e,t[0],c()),t)],t.atan=(e,t)=>[e.run(M(e,t[0],p()),t)],t.clip=(e,t,n)=>[e.run(M(e,t[0],m(n.min,n.max),n.cacheKey),t)],t.parseClipAttributes=e=>(0,r.createAttributeWithCacheKey)({min:e.attributes.getFloat("min",o.MIN_CLIP),max:e.attributes.getFloat("max",o.MAX_CLIP)}),t.clipV11=(e,n)=>{const r=I(e,n);return(0,t.clip)(e,[n[0]],r)};const I=(e,t)=>{if(t.length>=3&&(!e.session.isInitializer(t[1].dataId)||!e.session.isInitializer(t[2].dataId)))throw new Error("dynamic clip attributes are not allowed");const n=t.length>=3?t[1].numberData[0]:o.MIN_CLIP,a=t.length>=3?t[2].numberData[0]:o.MAX_CLIP;return(0,r.createAttributeWithCacheKey)({min:n,max:a})};t.ceil=(e,t)=>[e.run(M(e,t[0],d()),t)],t.cos=(e,t)=>[e.run(M(e,t[0],h()),t)],t.elu=(e,t,n)=>[e.run(M(e,t[0],f(n.alpha),n.cacheKey),t)],t.parseEluAttributes=e=>(0,r.createAttributeWithCacheKey)({alpha:e.attributes.getFloat("alpha",1)}),t.exp=(e,t)=>[e.run(M(e,t[0],g()),t)],t.floor=(e,t)=>[e.run(M(e,t[0],_()),t)],t.identity=(e,t)=>[e.run(M(e,t[0],b()),t)],t.leakyRelu=(e,t,n)=>[e.run(M(e,t[0],y(n.alpha),n.cacheKey),t)],t.parseLeakyReluAttributes=e=>(0,r.createAttributeWithCacheKey)({alpha:e.attributes.getFloat("alpha",.01)}),t.log=(e,t)=>[e.run(M(e,t[0],w()),t)],t.neg=(e,t)=>[e.run(M(e,t[0],x()),t)],t.not=(e,t)=>[e.run(M(e,t[0],v()),t)],t.relu=(e,t)=>[e.run(M(e,t[0],k()),t)],t.sigmoid=(e,t)=>[e.run(M(e,t[0],S()),t)],t.sin=(e,t)=>[e.run(M(e,t[0],T()),t)],t.sqrt=(e,t)=>[e.run(M(e,t[0],$()),t)],t.tan=(e,t)=>[e.run(M(e,t[0],P()),t)],t.tanh=(e,t)=>[e.run(M(e,t[0],A()),t)]},540:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createUnpackProgramInfoLoader=t.createUnpackProgramInfo=void 0;const r=n(6757),o=n(5639),a=n(432),i=n(5614),s={name:"unpack",inputNames:["A"],inputTypes:[o.TextureType.packed]};t.createUnpackProgramInfo=(e,t)=>{const n=t.dims.length,l=(0,i.getChannels)("rc",n),u=l.slice(-2),c=(0,a.getCoordsDataType)(n),p=(0,i.unpackFromChannel)(),d=0===t.dims.length?"":function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(n,l),h=n<=1?"rc":`vec2(${u.join(",")})`,f=`\n    ${p}\n    void main() {\n      ${c} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${d});\n\n       ${(0,r.getGlsl)(e.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${h}), 0, 0, 0);\n     }\n   `;return Object.assign(Object.assign({},s),{hasMain:!0,output:{dims:t.dims,type:t.type,textureType:o.TextureType.unpacked},shaderSource:f})},t.createUnpackProgramInfoLoader=(e,n)=>Object.assign(Object.assign({},s),{get:()=>(0,t.createUnpackProgramInfo)(e,n)})},7862:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseUnsqueezeAttributes=t.unsqueezeV13=t.unsqueeze=void 0;const r=n(7273);t.unsqueeze=(e,t,n)=>{o(t);const a=r.ShapeUtil.unsqueezeShape(t[0].dims,n);return[e.reshapeUnpacked(t[0],a)]},t.unsqueezeV13=(e,n)=>(a(n),(0,t.unsqueeze)(e,[n[0]],Array.from(n[1].integerData))),t.parseUnsqueezeAttributes=e=>e.attributes.getInts("axes");const o=e=>{if(!e||1!==e.length)throw new Error("Unsqueeze requires 1 input.");if("string"===e[0].type)throw new Error("invalid input tensor types.")},a=e=>{if(!e||2!==e.length)throw new Error("Unsqueeze requires 2 inputs.");if("int32"!==e[1].type)throw new Error("Invalid input type.")}},3980:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.scalesValidation=t.validateInputs=t.parseUpsampleAttributes=t.parseUpsampleAttributesV9=t.parseUpsampleAttributesV7=t.upsample=void 0;const r=n(4910),o=n(6757),a=n(5639),i={name:"Upsample",inputNames:["X"],inputTypes:[a.TextureType.unpacked]};t.upsample=(e,n,r)=>((0,t.validateInputs)(n,r),[e.run(Object.assign(Object.assign({},i),{cacheHint:r.cacheKey,get:()=>s(e,n,r)}),n)]),t.parseUpsampleAttributesV7=e=>(0,t.parseUpsampleAttributes)(e,7),t.parseUpsampleAttributesV9=e=>(0,t.parseUpsampleAttributes)(e,9),t.parseUpsampleAttributes=(e,n)=>{const o=n>=10,a=e.attributes.getString("mode","nearest");if("nearest"!==a&&"linear"!==a&&(n<11||"cubic"!==a))throw new Error(`unrecognized mode: ${a}`);let i=[];n<9&&(i=e.attributes.getFloats("scales"),(0,t.scalesValidation)(i,a,o));const s=e.attributes.getFloat("extrapolation_value",0),l=n>10?e.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(-1===["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(l))throw new Error(`coordinate_transform_mode '${l}' is not supported`);const u="tf_crop_and_resize"===l,c=u,p="nearest"===a&&n>=11?e.attributes.getString("nearest_mode","round_prefer_floor"):"";if(-1===["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(p))throw new Error(`nearest_mode '${p}' is not supported`);const d=e.attributes.getFloat("cubic_coeff_a",-.75),h=0!==e.attributes.getInt("exclude_outside",0);if(h&&"cubic"!==a)throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");const f=n<11||"nearest"===a&&"asymmetric"===l&&"floor"===p;let g=0,_=0,m=0;return n>10?e.inputs.length>2?(g=1,_=2,m=3):(_=1,m=2):9===n&&(_=1),(0,r.createAttributeWithCacheKey)({opset:n,isResize:o,mode:a,scales:i,extrapolationValue:s,coordinateTransformMode:l,useExtrapolation:c,needRoiInput:u,nearestMode:p,cubicCoefficientA:d,excludeOutside:h,useNearest2xOptimization:f,roiInputIdx:g,scalesInputIdx:_,sizesInputIdx:m})};const s=(e,t,n)=>{const r=(0,o.getGlsl)(e.session.backend.glContext.version),[s,l]=e.calculateTextureWidthAndHeight(t[0].dims,a.TextureType.unpacked),u=t[0].dims.map(((e,t)=>Math.floor(e*n.scales[t]))),[c,p]=e.calculateTextureWidthAndHeight(u,a.TextureType.unpacked),d=u.length,h=new Array(d),f=new Array(d);let g=`\n      int output_pitches[${d}];\n      int input_pitches[${d}];\n      `;for(let e=d-1;e>=0;e--)h[e]=e===d-1?1:h[e+1]*u[e+1],f[e]=e===d-1?1:f[e+1]*t[0].dims[e+1],g+=`\n        output_pitches[${e}] = ${h[e]};\n        input_pitches[${e}] = ${f[e]};\n        `;const _=`\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${s}, ${l});\n        float value = getColorAsFloat(${r.texture2D}(X, coords));\n        return value;\n      }\n      `,m="nearest"===n.mode?`\n    ${_}\n    float process(int indices[${d}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${p});\n\n      ${g}\n\n      int d, m;\n      for (int dim = 0; dim < ${d}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }`:4===d?`\n    ${_}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${p});\n\n      ${g}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${t[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }`:`\n    ${_}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${c}, ${p});\n\n      ${g}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${t[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;return Object.assign(Object.assign({},i),{output:{dims:u,type:t[0].type,textureType:a.TextureType.unpacked},shaderSource:m,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map((e=>Math.ceil(e)))}]})};t.validateInputs=(e,t)=>{if(!e||t.opset<9&&1!==e.length||t.opset>=9&&t.opset<11&&2!==e.length||t.opset>=11&&e.length<2)throw new Error("invalid inputs.");if(t.scales.length>0&&e[0].dims.length!==t.scales.length)throw new Error("Invalid input shape.");if("string"===e[0].type)throw new Error("Invalid input tensor types.")},t.scalesValidation=(e,t,n)=>{if(n){for(const t of e)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(const t of e)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if(!("linear"!==t&&"cubic"!==t||2===e.length||4===e.length&&1===e[0]&&1===e[1]))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}},2757:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(2235),o=n(1315),a=n(8897),i=n(6757);t.ProgramManager=class{constructor(e,t,n){this.profiler=e,this.glContext=t,this.textureLayoutStrategy=n,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n){var r;this.profiler.event("op",`ProgramManager.run ${null!==(r=e.programInfo.name)&&void 0!==r?r:"unknown kernel"}`,(()=>{var r;const a=this.glContext.gl,i=e.program;a.useProgram(i);try{this.bindOutput(n),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,null!==(r=e.programInfo.variables)&&void 0!==r?r:[],t)}catch(t){throw o.Logger.error("ProgramManager",e.programInfo.shaderSource),t}this.profiler.event("backend","GlContext.draw()",(()=>{this.glContext.draw()}))}),this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach((e=>this.glContext.deleteProgram(e.program)))}build(e,t,n){return this.profiler.event("backend","ProgramManager.build",(()=>{const r=new a.GlslPreprocessor(this.glContext,e,t,n),o=r.preprocess(),i=this.compile(o);return{programInfo:e,program:i,uniformLocations:this.getUniformLocations(i,r.context.programInfo.inputNames,r.context.programInfo.variables),attribLocations:this.getAttribLocations(i)}}))}compile(e){if(!this.vertexShader){o.Logger.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");const e=(0,i.getVertexShaderSource)(this.glContext.version);this.vertexShader=this.glContext.compileShader(e,this.glContext.gl.VERTEX_SHADER)}r.env.debug&&o.Logger.verbose("ProrgramManager",`FragShader:\n${e}\n`);const t=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),n=this.glContext.createProgram(this.vertexShader,t);return this.glContext.deleteShader(t),n}bindOutput(e){const t=e.width,n=e.height;o.Logger.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${t}/${n}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,t,n)}bindAttributes(e){const t=e.position,n=e.textureCoord;this.glContext.setVertexAttributes(t,n),this.attributesBound=!0}bindUniforms(e,t,n){var r;const o=this.glContext.gl;let a=0;for(const{name:i,type:s,location:l,arrayLength:u}of e){const e=null===(r=t.find((e=>e.name===i)))||void 0===r?void 0:r.data;if("sampler2D"!==s&&!e)throw new Error(`variable '${i}' does not have data defined in program info`);switch(s){case"sampler2D":this.bindTexture(n[a],l,a),a++;break;case"float":u?o.uniform1fv(l,e):o.uniform1f(l,e);break;case"int":u?o.uniform1iv(l,e):o.uniform1i(l,e);break;default:throw new Error(`Uniform not implemented: ${s}`)}}}bindTexture(e,t,n){this.glContext.bindTextureToUniform(e.texture,n,t)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,t,n){const r=[];if(t)for(const n of t)r.push({name:n,type:"sampler2D",location:this.getUniformLocation(e,n)});if(n)for(const t of n)r.push(Object.assign(Object.assign({},t),{location:this.getUniformLocation(e,t.name)}));return r}getUniformLocation(e,t){const n=this.glContext.gl.getUniformLocation(e,t);if(null===n)throw new Error(`Uniform ${t} not found.`);return n}getAttribLocation(e,t){return this.glContext.gl.getAttribLocation(e,t)}}},2171:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLSessionHandler=void 0;const r=n(1315),o=n(5881),a=n(7860),i=n(4110),s=n(2757),l=n(7618),u=n(5243);t.WebGLSessionHandler=class{constructor(e,t){this.backend=e,this.context=t,this.layoutStrategy=new l.PreferLogicalStrategy(e.glContext.maxTextureSize),this.programManager=new s.ProgramManager(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new u.TextureManager(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:"full"===e.textureCacheMode}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new a.WebGLInferenceHandler(this)}onGraphInitialized(e){const t=e.getValues().filter((e=>-1===e.from&&e.tensor)).map((e=>e.tensor.dataId));this.initializers=new Set(t)}isInitializer(e){return!!this.initializers&&this.initializers.has(e)}addInitializer(e){this.initializers.add(e)}getTextureData(e,t){return t?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,t,n=!1){r.Logger.verbose("WebGLSessionHandler","Storing Texture data in cache"),n?this.packedTextureDataCache.set(e,t):this.unpackedTextureDataCache.set(e,t)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach((e=>this.textureManager.releaseTexture(e,!0))),this.unpackedTextureDataCache=new Map}resolve(e,t,n){const r=(0,o.resolveOperator)(e,t,i.WEBGL_OP_RESOLVE_RULES);return{impl:r.opImpl,context:r.opInit?r.opInit(e,n):e}}}},9622:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Uint8DataEncoder=t.RGBAFloatDataEncoder=t.RedFloat32DataEncoder=void 0;const r=n(1315);t.RedFloat32DataEncoder=class{constructor(e,t=1){if(1===t)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=t}}encode(e,t){let n,o;return e.constructor!==Float32Array&&(r.Logger.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),t*this.channelSize>e.length?(r.Logger.warning("Encoder","Source data too small. Allocating larger array"),o=e,n=this.allocate(t*this.channelSize),o.forEach(((e,t)=>n[t]=e))):(o=e,n=o),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},t.RGBAFloatDataEncoder=class{constructor(e,t=1,n){if(1!==t&&4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=t,this.textureType=n||e.FLOAT}encode(e,t){let n=e;return 1===this.channelSize&&(r.Logger.verbose("Encoder","Exploding into a larger array"),n=this.allocate(t),e.forEach(((e,t)=>n[4*t]=e))),n}allocate(e){return new Float32Array(4*e)}decode(e,t){return 1===this.channelSize?e.filter(((e,t)=>t%4==0)).subarray(0,t):e.subarray(0,t)}},t.Uint8DataEncoder=class{constructor(e,t=1){if(this.channelSize=4,1===t)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t;else{if(4!==t)throw new Error(`Invalid number of channels: ${t}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=t}}encode(e,t){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,t){if(e instanceof Uint8Array)return e.subarray(0,t);throw new Error(`Invalid array type: ${e.constructor}`)}}},7618:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getBatchDim=t.sizeToSquarishShape=t.getRowsCols=t.sizeFromShape=t.isInt=t.parseAxisParam=t.squeezeShape=t.PreferLogicalStrategy=t.AlwaysKeepOriginalSizeStrategy=void 0;const r=n(1315),o=n(7273);function a(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||o?null:i(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[s]||a[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function i(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),(0,o.assert)(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),(0,o.assert)(e.every(s),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function s(e){return e%1==0}function l(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function u(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}t.AlwaysKeepOriginalSizeStrategy=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,t){if(0===e.length)return[1,1];const n=this.maxTextureSize;if(t&&void 0!==t.breakAxis){const o=t.breakAxis>=e.length?1:e.slice(t.breakAxis).reduce(((e,t)=>e*t)),a=t.breakAxis<=0?1:e.slice(0,t.breakAxis).reduce(((e,t)=>e*t));if(!(o>n||a>n))return[o,a];r.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`)}const o=e.reduce(((e,t)=>e*t));let a=Math.floor(Math.sqrt(o));for(;a<n&&a<o&&o%a!=0;a++);if(a>=n||o%a!=0)throw new Error(`The given dimensions are outside this GPU's boundaries: ${e}`);return[a,o/a]}},t.PreferLogicalStrategy=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,t){const n=this.computeTexture(e,t);return t&&t.isPacked&&(n[0]/=2,n[1]/=2),t&&t.reverseWH?[n[1],n[0]]:n}computeTexture(e,t){const n=t&&t.isPacked;if(0===e.length)return n?[2,2]:[1,1];let o=this.maxTextureSize;if(t&&void 0!==t.breakAxis){const n=t.breakAxis>=e.length?1:e.slice(t.breakAxis).reduce(((e,t)=>e*t)),a=t.breakAxis<=0?1:e.slice(0,t.breakAxis).reduce(((e,t)=>e*t));if(!(n>o||a>o))return[n,a];r.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${t.breakAxis}`)}let i=e.slice(0);if(n&&(o*=2,i=i.map(((e,t)=>t>=i.length-2?i[t]%2==0?i[t]:i[t]+1:i[t])),1===i.length&&(i=[2,i[0]])),2!==i.length){const e=a(i);i=e.newShape}const s=l(i);return i.length<=1&&s<=o?[1,s]:2===i.length&&i[0]<=o&&i[1]<=o?i:3===i.length&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:3===i.length&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:4===i.length&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:4===i.length&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:n?u(s/4).map((e=>2*e)):u(s)}},t.squeezeShape=a,t.parseAxisParam=i,t.isInt=s,t.sizeFromShape=l,t.getRowsCols=function(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]},t.sizeToSquarishShape=u,t.getBatchDim=function(e,t=2){return l(e.slice(0,e.length-t))}},3314:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createTextureLayoutFromShape=t.calculateTextureWidthAndHeight=t.createTextureLayoutFromTextureType=void 0;const r=n(7273),o=n(5639);t.createTextureLayoutFromTextureType=(e,n,r)=>{const a=r===o.TextureType.unpacked||r===o.TextureType.unpackedReversed?1:4,i=r===o.TextureType.packed,s=r===o.TextureType.unpackedReversed||r===o.TextureType.packed,l=r===o.TextureType.packedLastDimension?n.length-1:void 0,u=r===o.TextureType.packedLastDimension?n.map(((e,t)=>t===n.length-1?4*e:e)):void 0;return(0,t.createTextureLayoutFromShape)(e,n,a,u,{isPacked:i,reverseWH:s,breakAxis:l})},t.calculateTextureWidthAndHeight=(e,n,r)=>{const o=(0,t.createTextureLayoutFromTextureType)(e,n,r);return[o.width,o.height]},t.createTextureLayoutFromShape=(e,t,n=1,o,a)=>{const i=!(!a||!a.isPacked),[s,l]=e.computeTextureWH(i&&o||t,a),u=t.length;let c=t.slice(0);if(0===u&&(c=[1]),1===n)o=t;else if(i){if(4!==n)throw new Error("a packed texture must be 4-channel");o=t,u>0&&(c[u-1]=Math.ceil(c[u-1]/2)),u>1&&(c[u-2]=Math.ceil(c[u-2]/2))}else if(!o)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:l,channels:n,isPacked:i,shape:c,strides:r.ShapeUtil.computeStrides(c),unpackedShape:o,reversedWH:a&&a.reverseWH}}},5243:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TextureManager=void 0;const r=n(1315);t.TextureManager=class{constructor(e,t,n,r){this.glContext=e,this.layoutStrategy=t,this.profiler=n,this.config=r,this.pendingRead=new Map,r.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,t,n,o){const a=this.toEncoderType(e),i=this.glContext.getEncoder(a,t.channels||1,o);if(t.isPacked&&1===o)throw new Error("not implemented");const s=t.width,l=t.height;let u,c;if(this.config.reuseTextures){u=`${s}x${l}_${i.format}_${i.internalFormat}_${i.textureType}`,c=this.inUseTextures.get(u),c||(c=[],this.inUseTextures.set(u,c));const t=this.idleTextures.get(u);if(t&&t.length>0){const r=t.pop();return c.push(r),1===o&&this.glContext.updateTexture(r,s,l,i,this.toTextureData(e,n)),r}}r.Logger.verbose("TextureManager",`Creating new texture of size ${t.width}x${t.height}`);const p=this.glContext.allocateTexture(s,l,i,this.toTextureData(e,n));return this.config.reuseTextures&&(c.push(p),this.textureLookup.set(p,u)),p}readTexture(e,t,n){return n||(n=1),this.profiler.event("backend","TextureManager.readTexture",(()=>{const r=e.shape.reduce(((e,t)=>e*t))*n,o=this.glContext.readTexture(e.texture,e.width,e.height,r,this.toEncoderType(t),n);return this.toTensorData(t,o)}))}async readTextureAsync(e,t,n){const r=e.tensor.dataId;if(n||(n=1),this.pendingRead.has(r)){const e=this.pendingRead.get(r);return new Promise((t=>null==e?void 0:e.push(t)))}return this.profiler.event("backend","TextureManager.readTextureAsync",(async()=>{this.pendingRead.set(r,[]);const o=e.shape.reduce(((e,t)=>e*t))*n;await this.glContext.createAndWaitForFence();const a=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(t),n),i=this.toTensorData(t,a),s=this.pendingRead.get(r);return this.pendingRead.delete(r),null==s||s.forEach((e=>e(i))),i}))}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",(()=>{const t=e.shape.reduce(((e,t)=>e*t)),n=this.glContext.readTexture(e.texture,e.width,e.height,4*t,"byte",4);return new Float32Array(n.buffer,n.byteOffset,t)}))}releaseTexture(e,t){let n;if(this.config.reuseTextures&&(n=this.textureLookup.get(e.texture),n)){t&&this.textureLookup.delete(n);const r=this.inUseTextures.get(n);if(r){const t=r.indexOf(e.texture);if(-1!==t){r.splice(t,1);let o=this.idleTextures.get(n);o||(o=[],this.idleTextures.set(n,o)),o.push(e.texture)}}}n&&!t||(r.Logger.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,t){switch(e){case"int16":return t instanceof Int16Array?t:Int16Array.from(t);case"int32":return t instanceof Int32Array?t:Int32Array.from(t);case"int8":return t instanceof Int8Array?t:Int8Array.from(t);case"uint16":return t instanceof Uint16Array?t:Uint16Array.from(t);case"uint32":return t instanceof Uint32Array?t:Uint32Array.from(t);case"uint8":case"bool":return t instanceof Uint8Array?t:Uint8Array.from(t);case"float32":return t instanceof Float32Array?t:Float32Array.from(t);case"float64":return t instanceof Float64Array?t:Float64Array.from(t);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,t){if(t)return t instanceof Float32Array?t:new Float32Array(t)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}},5639:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.TextureType=void 0,(n=t.TextureType||(t.TextureType={}))[n.unpacked=0]="unpacked",n[n.unpackedReversed=1]="unpackedReversed",n[n.packed=2]="packed",n[n.downloadUint8AsFloat=3]="downloadUint8AsFloat",n[n.packedLastDimension=4]="packedLastDimension"},432:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getGlChannels=t.getCoordsDataType=t.getSqueezedParams=t.squeezeInputShape=t.generateShaderFuncNameFromInputSamplerNameAtOutCoords=t.generateShaderFuncNameFromInputSamplerName=t.repeatedTry=t.getPackedShape=void 0;const r=n(7273);t.getPackedShape=function(e){const t=e.length;return e.slice(0,t-1).concat(e[t-1]/4)},t.repeatedTry=async function(e,t=(e=>0),n){return new Promise(((r,o)=>{let a=0;const i=()=>{if(e())return void r();a++;const s=t(a);null!=n&&a>=n?o():setTimeout(i,s)};i()}))},t.generateShaderFuncNameFromInputSamplerName=function(e){return(0,r.assert)(void 0!==e&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)},t.generateShaderFuncNameFromInputSamplerNameAtOutCoords=function(e){return(0,r.assert)(void 0!==e&&0!==e.length,(()=>"empty string found for sampler name")),"get"+e.charAt(0).toUpperCase()+e.slice(1)+"AtOutCoords"},t.squeezeInputShape=function(e,t){let n=JSON.parse(JSON.stringify(e));return n=t,n},t.getSqueezedParams=function(e,t){return t.map((t=>e[t])).join(", ")},t.getCoordsDataType=function(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)},t.getGlChannels=function(e=6){return["x","y","z","w","u","v"].slice(0,e)}},3389:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createNewWebGLContext=t.createWebGLContext=void 0;const r=n(1315),o=n(3524),a={};function i(e,t){let n;const a={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!t||"webgl2"===t)&&(n=e.getContext("webgl2",a),n))try{return new o.WebGLContext(n,2)}catch(e){r.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${e}`)}if((!t||"webgl"===t)&&(n=e.getContext("webgl",a)||e.getContext("experimental-webgl",a),n))try{return new o.WebGLContext(n,1)}catch(e){r.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${e}`)}throw new Error("WebGL is not supported")}t.createWebGLContext=function e(t){let n;if(t&&"webgl2"!==t||!("webgl2"in a)?t&&"webgl"!==t||!("webgl"in a)||(n=a.webgl):n=a.webgl2,!n)try{n=i(function(){if("undefined"==typeof OffscreenCanvas)throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}(),t)}catch(e){n=i(function(){if("undefined"==typeof document)throw new TypeError("failed to create canvas: document is not supported");const e=document.createElement("canvas");return e.width=1,e.height=1,e}(),t)}t=t||1===n.version?"webgl":"webgl2";const r=n.gl;return a[t]=n,r.isContextLost()?(delete a[t],e(t)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),n)},t.createNewWebGLContext=i},3524:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLContext=t.linearSearchLastTrue=void 0;const i=n(2235),s=a(n(9622)),l=n(432);function u(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}t.linearSearchLastTrue=u,t.WebGLContext=class{constructor(e,t){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=e,this.version=t,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,t,n,r){const o=this.gl,a=o.createTexture();o.bindTexture(o.TEXTURE_2D,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE);const i=r?n.encode(r,e*t):null;return o.texImage2D(o.TEXTURE_2D,0,n.internalFormat,e,t,0,n.format,n.textureType,i),this.checkError(),a}updateTexture(e,t,n,r,o){const a=this.gl;a.bindTexture(a.TEXTURE_2D,e);const i=r.encode(o,t*n);a.texSubImage2D(a.TEXTURE_2D,0,0,0,t,n,r.format,r.textureType,i),this.checkError()}attachFramebuffer(e,t,n){const r=this.gl;r.bindTexture(r.TEXTURE_2D,e),r.bindFramebuffer(r.FRAMEBUFFER,this.framebuffer),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0),this.checkError(),r.viewport(0,0,t,n),r.scissor(0,0,t,n)}readTexture(e,t,n,r,o,a){const i=this.gl;a||(a=1),this.frameBufferBound||this.attachFramebuffer(e,t,n);const s=this.getEncoder(o,a),l=s.allocate(t*n);return i.bindTexture(i.TEXTURE_2D,e),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,e,0),i.readPixels(0,0,t,n,i.RGBA,s.textureType,l),this.checkError(),s.decode(l,r)}isFramebufferReady(){return!0}getActiveTexture(){const e=this.gl;return"TEXTURE"+(e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,t){const n=this.gl;n.vertexAttribPointer(e,3,n.FLOAT,!1,20,0),n.enableVertexAttribArray(e),-1!==t&&(n.vertexAttribPointer(t,2,n.FLOAT,!1,20,12),n.enableVertexAttribArray(t)),this.checkError()}createProgram(e,t){const n=this.gl,r=n.createProgram();return n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),r}compileShader(e,t){const n=this.gl,r=n.createShader(t);if(!r)throw new Error(`createShader() returned null with type ${t}`);if(n.shaderSource(r,e),n.compileShader(r),!1===n.getShaderParameter(r,n.COMPILE_STATUS))throw new Error(`Failed to compile shader: ${n.getShaderInfoLog(r)}\nShader source:\n${e}`);return r}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,t,n){const r=this.gl;r.activeTexture(r.TEXTURE0+t),this.checkError(),r.bindTexture(r.TEXTURE_2D,e),this.checkError(),r.uniform1i(n,t),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(i.env.debug){const e=this.gl,t=e.getError();let n="";switch(t){case e.NO_ERROR:return;case e.INVALID_ENUM:n="INVALID_ENUM";break;case e.INVALID_VALUE:n="INVALID_VALUE";break;case e.INVALID_OPERATION:n="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:n="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:n="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:n="CONTEXT_LOST_WEBGL";break;default:n=`Unknown WebGL Error: ${t.toString(16)}`}throw new Error(n)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,t,n=0){if(2===this.version)return new s.RedFloat32DataEncoder(this.gl,t);switch(e){case"float":return 1===n||this.isRenderFloat32Supported?new s.RGBAFloatDataEncoder(this.gl,t):new s.RGBAFloatDataEncoder(this.gl,t,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new s.Uint8DataEncoder(this.gl,t);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){const e=this.gl;for(let t=0;t<this.maxTextureImageUnits;++t)e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){const e=this.gl,t=e.createBuffer();if(!t)throw new Error("createBuffer() returned null");const n=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW),this.checkError(),t}createFramebuffer(){const e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){const e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),1===this.version&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){2===this.version?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){const e=this.gl,t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);const n=2===this.version?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,n,1,1,0,e.RGBA,e.FLOAT,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(t),e.deleteFramebuffer(r),o}checkRenderFloat32(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(2===this.version){if(!this.colorBufferFloatExtension)return!1}else{if(!this.textureFloatExtension)return!1;if(!this.gl.getExtension("WEBGL_color_buffer_float"))return!1}return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){const e=this.gl;let t,n,r,o,a;try{t=e.createTexture(),n=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,t);const i=2===this.version?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,i,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0),e.enable(e.BLEND),r=e.createShader(e.VERTEX_SHADER),!!r&&(e.shaderSource(r,"void main(){}"),e.compileShader(r),o=e.createShader(e.FRAGMENT_SHADER),!!o&&(e.shaderSource(o,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(o),a=e.createProgram(),!!a&&(e.attachShader(a,r),e.attachShader(a,o),e.linkProgram(a),e.useProgram(a),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)))}finally{e.disable(e.BLEND),a&&e.deleteProgram(a),r&&e.deleteShader(r),o&&e.deleteShader(o),n&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(n)),t&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(t))}}beginTimer(){if(2===this.version&&this.disjointTimerQueryWebgl2Extension){const e=this.gl,t=this.disjointTimerQueryWebgl2Extension,n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const e=this.gl,t=this.disjointTimerQueryWebgl2Extension;e.endQuery(t.TIME_ELAPSED_EXT)}}isTimerResultAvailable(e){let t=!1,n=!1;if(2!==this.version||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const r=this.gl,o=this.disjointTimerQueryWebgl2Extension;t=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE),n=r.getParameter(o.GPU_DISJOINT_EXT)}return t&&!n}getTimerResult(e){let t=0;if(2!==this.version)throw new Error("WebGL1 profiling currently not supported");{const n=this.gl;t=n.getQueryParameter(e,n.QUERY_RESULT),n.deleteQuery(e)}return t/1e6}async waitForQueryAndGetTime(e){return await(0,l.repeatedTry)((()=>this.isTimerResultAvailable(e))),this.getTimerResult(e)}async createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t;const n=e,r=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),t=null===r?()=>!0:()=>{const e=n.clientWaitSync(r,0,0);return e===n.ALREADY_SIGNALED||e===n.CONDITION_SATISFIED},{query:r,isFencePassed:t}}async pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=u(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||await(0,l.repeatedTry)((()=>(this.pollItems(),0===this.itemsToPoll.length)))}}},6496:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExecutionPlan=void 0;const r=n(1315);class o{constructor(e,t){this.op=e,this.node=t}}t.ExecutionPlan=class{constructor(e,t,n){this.graph=e,this.profiler=n,this.initialize(t)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",(()=>{const t=this.graph.getNodes();if(t.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map(((e,n)=>new o(e,t[n]))),this.reset(),this._starter=[],this._ops.forEach(((e,t)=>{let n=!0;for(const t of e.node.inputs)if(!this._values[t]&&-1===this.graph.getInputIndices().indexOf(t)){n=!1;break}n&&this._starter.push(t)}))}))}reset(){this._values=this.graph.getValues().map((e=>e.tensor))}async execute(e,t){return this.profiler.event("session","ExecutionPlan.execute",(async()=>{this.reset();const n=e.createInferenceHandler(),o=this.graph.getInputIndices();if(t.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${t.length} expected: ${o.length}`);t.forEach(((e,t)=>{const n=o[t];this._values[n]=e}));const a=this._starter.slice(0),i=this.graph.getValues(),s=this.graph.getNodes();let l=0;for(;l<a.length;){const e=a[l++],t=this._ops[e],o=t.node.inputs.map((e=>this._values[e]));if(-1!==o.indexOf(void 0))throw new Error(`unresolved input detected: op: ${t.node}`);const u=o;r.Logger.verbose("ExecPlan",`Runing op:${t.node.name} (${u.map(((e,n)=>`'${t.node.inputs[n]}': ${e.type}[${e.dims.join(",")}]`)).join(", ")})`);const c=await this.profiler.event("node",t.node.name,(async()=>t.op.impl(n,u,t.op.context)));if(c.length!==t.node.outputs.length)throw new Error("the size of output does not match model definition.");c.forEach(((e,n)=>{const r=t.node.outputs[n];if(this._values[r])throw new Error(`output [${r}] already has value: op:${t.node.name}`);this._values[r]=e}));const p=new Set;c.forEach(((e,n)=>{const r=t.node.outputs[n];for(const e of i[r].to){const t=s[e];let n=!0;for(const e of t.inputs)if(!this._values[e]){n=!1;break}n&&p.add(e)}})),a.push(...p)}const u=[];for(let e=0;e<this.graph.getOutputIndices().length;e++){const t=this.graph.getOutputIndices()[e],n=this._values[t];if(void 0===n)throw new Error(`required output [${t}] does not have value`);0===t?await n.getData():n.data,u.push(n)}return r.Logger.verbose("ExecPlan","disposing of inferenceHandler"),n.dispose(),u}))}}},4662:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Graph=void 0;const r=n(6874),o=n(5127),a=n(2446),i=n(9240),s=n(7273);var l=o.onnxruntime.experimental.fbs;t.Graph={from:(e,t)=>new p(e,t)};class u{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=s.ProtoUtil.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}}class c{constructor(e,t){e instanceof a.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new r.Attribute(e.attribute)):e instanceof l.Node&&(this.name=null!=t?t:e.name(),this.opType=e.opType(),this.attributes=new r.Attribute(s.ProtoUtil.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}}class p{constructor(e,t){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(t),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof a.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else{if(!(e instanceof l.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat(e)}}buildGraphFromOnnxFormat(e){const t=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const n=new Map;if(!e.input)throw new Error("missing information in graph: input");const r=[];for(const n of e.input){if(t.has(n.name))throw new Error(`duplicated input name: ${n.name}`);const e=this._allData.push(new u(n))-1;t.set(n.name,e),r.push(n.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(const n of e.initializer){let e=t.get(n.name);if(void 0===e){const r=new u;r.type={shape:{dims:s.ProtoUtil.tensorDimsFromProto(n.dims)},tensorType:s.ProtoUtil.tensorDataTypeFromProto(n.dataType)},e=this._allData.push(r)-1,t.set(n.name,e)}this._allData[e]._from=-1,this._allData[e].tensor=i.Tensor.fromProto(n)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(r[e]));if(!e.output)throw new Error("missing information in graph: output");for(const n of e.output){if(t.has(n.name))throw new Error(`duplicated output name: ${n.name}`);const e=this._allData.push(new u(n))-1;t.set(n.name,e),this._allOutputIndices.push(e),this._allOutputNames.push(n.name)}if(!e.node)throw new Error("missing information in graph: node");for(const t of e.node){if(!t.name)for(let e=0;;e++){const r=`unnamed_${t.opType}_${e}`;if(!n.has(r)){t.name=r;break}}if(n.has(t.name))throw new Error(`duplicated node name: ${t.name}`);const e=this._nodes.push(new c(t))-1;n.set(t.name,e)}for(let n=0;n<this._nodes.length;n++){const r=this._nodes[n],o=e.node[n];if(!o.output)throw new Error(`missing output for node: ${o.name}`);for(const e of o.output){let a=t.get(e);if(void 0===a&&(a=this._allData.push(new u)-1,t.set(e,a)),r.outputs.push(a),void 0!==this._allData[a]._from)throw new Error(`multiple nodes output to one data value: ${a}`);if(this._allData[a]._from=n,"Constant"===o.opType){if(!o.attribute||1!==o.attribute.length||!o.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!o.output||1!==o.output.length)throw new Error("missing output or incorrect number of outputs for this Constant operator");r.outputs.pop(),r.executeNode=!1,this._allData[a]._from=-1,this._allData[a].tensor=i.Tensor.fromProto(o.attribute[0].t)}}}for(let n=0;n<this._nodes.length;n++){const r=this._nodes[n],o=e.node[n];if(!o.input)throw new Error(`missing input for node: ${o.name}`);for(const e of o.input){const a=t.get(e);if(void 0===a){if(""===e&&(3===o.input.length||4===o.input.length)&&"Resize"===o.opType)continue;throw new Error(`unrecognized input '${e}' for node: ${o.name}`)}r.inputs.push(a),this._allData[a]._to.push(n)}}return!0}buildGraphFromOrtFormat(e){var t,n,r;const o=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const a=new Map,p=[];for(let a=0;a<e.inputsLength();a++){const i=e.inputs(a);if(o.has(i))throw new Error(`duplicated input name: ${i}`);for(let a=0;a<e.nodeArgsLength();a++)if((null===(t=e.nodeArgs(a))||void 0===t?void 0:t.name())===i){const t=new u;if((null===(r=null===(n=e.nodeArgs(a))||void 0===n?void 0:n.type())||void 0===r?void 0:r.valueType())!==l.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");const c=e.nodeArgs(a).type().value(new l.TensorTypeAndShape),d=s.ProtoUtil.tensorDataTypeFromProto(c.elemType()),h=c.shape(),f=[];for(let e=0;e<h.dimLength();e++)f.push(s.LongUtil.longToNumber(h.dim(e).value().dimValue()));t.type={shape:{dims:f},tensorType:d};const g=this._allData.push(t)-1;o.set(i,g),p.push(i)}}for(let t=0;t<e.initializersLength();t++){const n=e.initializers(t);let r=o.get(n.name());if(void 0===r){const e=new u,t=s.ProtoUtil.tensorDimsFromORTFormat(n),a=s.ProtoUtil.tensorDataTypeFromProto(n.dataType());e.type={shape:{dims:t},tensorType:a},r=this._allData.push(e)-1,o.set(n.name(),r)}this._allData[r]._from=-1,this._allData[r].tensor=i.Tensor.fromOrtTensor(n)}for(let e=0;e<this._allData.length;e++)this._allData[e].tensor||(this._allInputIndices.push(e),this._allInputNames.push(p[e]));for(let t=0;t<e.outputsLength();t++){const n=e.outputs(t);if(o.has(n))throw new Error(`duplicated output name: ${n}`);const r=this._allData.push(new u)-1;o.set(n,r),this._allOutputIndices.push(r),this._allOutputNames.push(n)}if(!e.nodes)throw new Error("missing information in graph: node");for(let t=0;t<e.nodesLength();t++){const n=e.nodes(t);let r=n.name();if(!r)for(let e=0;r=`unnamed_${n.opType()}_${e}`,a.has(r);e++);if(a.has(r))throw new Error(`duplicated node name: ${r}`);const o=this._nodes.push(new c(n,r))-1;a.set(r,o)}for(let t=0;t<this._nodes.length;t++){const n=this._nodes[t],r=e.nodes(t);if(null==r)throw new Error(`No node exists at index ${t}`);if(0===(null==r?void 0:r.outputsLength()))throw new Error(`missing output for node: ${r.name}`);for(let e=0;e<(null==r?void 0:r.outputsLength());e++){const a=null==r?void 0:r.outputs(e);let s=o.get(a);if(void 0===s&&(s=this._allData.push(new u)-1,o.set(a,s)),n.outputs.push(s),void 0!==this._allData[s]._from)throw new Error(`multiple nodes output to one data value: ${s}`);if(this._allData[s]._from=t,"Constant"===r.opType()){if(1!==r.attributesLength()||!r.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(1!==r.outputsLength())throw new Error("missing output or incorrect number of outputs for this Constant operator");n.outputs.pop(),n.executeNode=!1,this._allData[s]._from=-1,this._allData[s].tensor=i.Tensor.fromOrtTensor(r.attributes(0).t())}}}for(let t=0;t<this._nodes.length;t++){const n=this._nodes[t],r=e.nodes(t);if(0===r.inputsLength())throw new Error(`missing input for node: ${r.name}`);for(let e=0;e<r.inputsLength();e++){const a=r.inputs(e),i=o.get(a);if(void 0===i)throw new Error(`unrecognized input '${a}' for node: ${r.name()}`);n.inputs.push(i),this._allData[i]._to.push(t)}}}checkIsAcyclic(){const e=new Set;this._allInputIndices.forEach((t=>{this._allData[t]._to.forEach((t=>{e.add(t)}))}));const t=Array.from(e),n=new Array(this._nodes.length).fill("white");for(;t.length>0;){const e=t.pop();"gray"===n[e]?n[e]="black":(t.push(e),n[e]="gray",this._nodes[e].outputs.forEach((r=>{const o=this._allData[r];if(void 0!==o.tensor)throw new Error("node outputs should not be initialized");if(o._from!==e)throw new Error("from property of the Value object doesn't match index of Node being processed");o._to.forEach((e=>{if("gray"===n[e])throw new Error("model graph is cyclic");"white"===n[e]&&t.push(e)}))})))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0;const t=new Array(this._nodes.length,0);let n=0;for(let e=0;e<this._nodes.length;e++)t[e]=n,this._nodes[e].executeNode?(n!==e&&(this._nodes[n]=this._nodes[e]),n++):this._nodes[e].outputs.forEach((e=>{this._allData[e]._from=-2}));this._nodes.splice(n,this._nodes.length-n);for(let e=0;e<this._allData.length;e++){const n=this._allData[e];void 0!==n._from&&-1!==n._from&&-2!==n._from&&(n._from=t[n._from]);for(let e=0;e<n._to.length;e++){if(!(n._to[e]>=0))throw new Error("Trying to update a removed node");n._to[e]=t[n._to[e]]}}e=0;for(let t=0;t<this._allData.length;t++)if(-2!==this._allData[t].from||-1!==this._allOutputIndices.indexOf(t+e)){if(e>0){let n=-1;void 0!==this._allData[t].from&&-1!==this._allData[t].from?(n=this._nodes[this._allData[t].from].outputs.indexOf(t+e),-1!==n&&(this._nodes[this._allData[t].from].outputs[n]=t)):(n=this._allInputIndices.indexOf(t+e),-1!==n&&(this._allInputIndices[n]=t)),this._allData[t].to.forEach((r=>{n=this._nodes[r].inputs.indexOf(t+e),-1!==n&&(this._nodes[r].inputs[n]=t)})),0===this._allData[t].to.length&&(n=this._allOutputIndices.indexOf(t+e),-1!==n&&(this._allOutputIndices[n]=t))}}else e++,this._allData.splice(t,1),t--}deleteNode(e){const t=this._nodes[e];if(t.outputs.length>1)for(let e=1;e<t.outputs.length;e++)if(this._allData[t.outputs[e]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ");t.executeNode=!1;const n=t.inputs[0],r=t.outputs[0],o=this._allData[r].to;for(let n=0;n<t.inputs.length;n++){const r=this._allData[t.inputs[n]].to.indexOf(e);if(-1===r)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[t.inputs[n]].to.splice(r,1)}this._allData[r]._to=[];const a=this._allOutputIndices.indexOf(r);if(-1!==a&&(this._allOutputIndices[a]=n),o&&o.length>0)for(const e of o){const t=this._nodes[e].inputs.indexOf(r);if(-1===t)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[e].inputs[t]=n,this._allData[n].to.push(e)}}removeAllDropoutNodes(){let e=0;for(const t of this._nodes){if("Dropout"===t.opType){if(1!==t.inputs.length)throw new Error("Dropout nodes should only contain one input. ");if(1!==t.outputs.length&&2!==t.outputs.length)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(2===t.outputs.length&&0!==this._allData[t.outputs[1]]._to.length)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(const t of this._nodes)"Identity"===t.opType&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(const e of this._nodes)if("Conv"===e.opType){const t=this._allData[e.outputs[0]]._to;if(1===t.length&&this.isActivation(this._nodes[t[0]])){const n=this._nodes[t[0]];if("Clip"===n.opType)if(1===n.inputs.length)try{e.attributes.set("activation_params","floats",[n.attributes.getFloat("min"),n.attributes.getFloat("max")])}catch(t){e.attributes.set("activation_params","floats",[s.MIN_CLIP,s.MAX_CLIP])}else{if(!(n.inputs.length>=3&&void 0!==this._allData[n.inputs[1]].tensor&&void 0!==this._allData[n.inputs[2]].tensor))continue;e.attributes.set("activation_params","floats",[this._allData[n.inputs[1]].tensor.floatData[0],this._allData[n.inputs[2]].tensor.floatData[0]])}e.attributes.set("activation","string",n.opType),this.deleteNode(t[0])}}}}},1315:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.now=t.Profiler=t.Logger=void 0;const n={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},r={none:new class{log(e,t,n){}},console:new class{log(e,t,n){console.log(`${this.color(e)} ${n?"[35m"+n+"[0m ":""}${t}`)}color(e){switch(e){case"verbose":return"[34;40mv[0m";case"info":return"[32mi[0m";case"warning":return"[30;43mw[0m";case"error":return"[31;40me[0m";case"fatal":return"[101mf[0m";default:throw new Error(`unsupported severity: ${e}`)}}}},o={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1};let a={"":o};function i(e,t,n,r){if(void 0===t)return o=e,{verbose:i.verbose.bind(null,o),info:i.info.bind(null,o),warning:i.warning.bind(null,o),error:i.error.bind(null,o),fatal:i.fatal.bind(null,o)};if(void 0===n)s(e,t);else if("number"==typeof n&&void 0===r)s(e,t);else if("string"==typeof n&&void 0===r)s(e,n,0,t);else{if("string"!=typeof n||"number"!=typeof r)throw new TypeError("input is valid");s(e,n,0,t)}var o}function s(e,t,o,i){const s=a[i||""]||a[""];n[e]<n[s.minimalSeverity]||(s.logDateTime&&(t=`${(new Date).toISOString()}|${t}`),s.logSourceLocation,r[s.provider].log(e,t,i))}!function(e){function t(e){a={},n("",e||{})}function n(e,n){if("*"===e)t(n);else{const t=a[e]||o;a[e]={provider:n.provider||t.provider,minimalSeverity:n.minimalSeverity||t.minimalSeverity,logDateTime:void 0===n.logDateTime?t.logDateTime:n.logDateTime,logSourceLocation:void 0===n.logSourceLocation?t.logSourceLocation:n.logSourceLocation}}}e.verbose=function(t,n){e("verbose",t,n)},e.info=function(t,n){e("info",t,n)},e.warning=function(t,n){e("warning",t,n)},e.error=function(t,n){e("error",t,n)},e.fatal=function(t,n){e("fatal",t,n)},e.reset=t,e.set=n,e.setWithEnv=function(e){const t={};e.logLevel&&(t.minimalSeverity=e.logLevel),n("",t)}}(i||(i={})),t.Logger=i;class l{constructor(e,t,n,r,o,a){this.category=e,this.name=t,this.startTime=n,this.endCallback=r,this.timer=o,this.ctx=a}async end(){return this.endCallback(this)}async checkTimer(){if(void 0===this.ctx||void 0===this.timer)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}}class u{constructor(e,t,n,r){this.category=e,this.name=t,this.startTime=n,this.endTime=r}}t.Profiler=class{static create(e){return void 0===e?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}constructor(e,t,n){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=void 0===e?1e4:e,this._flushBatchSize=void 0===t?10:t,this._flushIntervalInMilliseconds=void 0===n?5e3:n}start(){this._started=!0,this._timingEvents=[],this._flushTime=(0,t.now)(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,t,n,r){const o=this._started?this.begin(e,t,r):void 0;let a=!1;const i=n();if(i&&"function"==typeof i.then)return a=!0,new Promise(((e,t)=>{i.then((async t=>{o&&await o.end(),e(t)}),(async e=>{o&&await o.end(),t(e)}))}));if(!a&&o){const e=o.end();if(e&&"function"==typeof e.then)return new Promise(((t,n)=>{e.then((()=>{t(i)}),(e=>{n(e)}))}))}return i}begin(e,n,r){if(!this._started)throw new Error("profiler is not started yet");if(void 0===r){const r=(0,t.now)();return this.flush(r),new l(e,n,r,(e=>this.endSync(e)))}{const t=r.beginTimer();return new l(e,n,0,(async e=>this.end(e)),t,r)}}async end(e){const t=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new u(e.category,e.name,e.startTime,t)),this.flush(t))}endSync(e){const n=(0,t.now)();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new u(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){t.Logger.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(const e=this._flushPointer;this._flushPointer<e+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=(0,t.now)()}}get started(){return this._started}},t.now="undefined"!=typeof performance&&performance.now?()=>performance.now():Date.now},1745:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Model=void 0;const r=n(5686),o=n(4662),a=n(5127),i=n(2446),s=n(7273);var l=a.onnxruntime.experimental.fbs;t.Model=class{constructor(){}load(e,t,n){if(!n)try{return void this.loadFromOnnxFormat(e,t)}catch(e){if(void 0!==n)throw e}this.loadFromOrtFormat(e,t)}loadFromOnnxFormat(e,t){const n=i.onnx.ModelProto.decode(e);if(s.LongUtil.longToNumber(n.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=n.opsetImport.map((e=>({domain:e.domain,version:s.LongUtil.longToNumber(e.version)}))),this._graph=o.Graph.from(n.graph,t)}loadFromOrtFormat(e,t){const n=new r.flatbuffers.ByteBuffer(e),a=l.InferenceSession.getRootAsInferenceSession(n).model();if(s.LongUtil.longToNumber(a.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let e=0;e<a.opsetImportLength();e++){const t=a.opsetImport(e);this._opsets.push({domain:null==t?void 0:t.domain(),version:s.LongUtil.longToNumber(t.version())})}this._graph=o.Graph.from(a.graph(),t)}get graph(){return this._graph}get opsets(){return this._opsets}}},6145:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FLOAT_TYPES=t.INT_TYPES=t.NUMBER_TYPES=void 0,t.NUMBER_TYPES=["float32","float64","int32","int16","int8","uint16","uint32","uint8"],t.INT_TYPES=["int32","int16","int8","uint16","uint32","uint8"],t.FLOAT_TYPES=["float32","float64"]},5881:(e,t)=>{function n(e,t){if(t.endsWith("+")){const n=Number.parseInt(t.substring(0,t.length-1),10);return!isNaN(n)&&n<=e}if(2===t.split("-").length){const n=t.split("-"),r=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(r)&&!isNaN(o)&&r<=e&&e<=o}return Number.parseInt(t,10)===e}Object.defineProperty(t,"__esModule",{value:!0}),t.resolveOperator=void 0,t.resolveOperator=function(e,t,r){for(const o of r){const r=o[0],a=o[1],i=o[2],s=o[3],l=o[4];if(e.opType===r)for(const e of t)if((e.domain===a||"ai.onnx"===e.domain&&""===a)&&n(e.version,i))return{opImpl:s,opInit:l}}throw new TypeError(`cannot resolve operator '${e.opType}' with opsets: ${t.map((e=>`${e.domain||"ai.onnx"} v${e.version}`)).join(", ")}`)}},5127:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.onnxruntime=void 0;const r=n(5686);var o,a;(function(e){let t;!function(e){e[e.UNDEFINED=0]="UNDEFINED",e[e.FLOAT=1]="FLOAT",e[e.INT=2]="INT",e[e.STRING=3]="STRING",e[e.TENSOR=4]="TENSOR",e[e.GRAPH=5]="GRAPH",e[e.FLOATS=6]="FLOATS",e[e.INTS=7]="INTS",e[e.STRINGS=8]="STRINGS",e[e.TENSORS=9]="TENSORS",e[e.GRAPHS=10]="GRAPHS",e[e.SPARSE_TENSOR=11]="SPARSE_TENSOR",e[e.SPARSE_TENSORS=12]="SPARSE_TENSORS"}(t=e.AttributeType||(e.AttributeType={}))})((a=(o=t.onnxruntime||(t.onnxruntime={})).experimental||(o.experimental={})).fbs||(a.fbs={})),function(e){!function(e){!function(e){let t;!function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.VALUE=1]="VALUE",e[e.PARAM=2]="PARAM"}(t=e.DimensionValueType||(e.DimensionValueType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.UNDEFINED=0]="UNDEFINED",e[e.FLOAT=1]="FLOAT",e[e.UINT8=2]="UINT8",e[e.INT8=3]="INT8",e[e.UINT16=4]="UINT16",e[e.INT16=5]="INT16",e[e.INT32=6]="INT32",e[e.INT64=7]="INT64",e[e.STRING=8]="STRING",e[e.BOOL=9]="BOOL",e[e.FLOAT16=10]="FLOAT16",e[e.DOUBLE=11]="DOUBLE",e[e.UINT32=12]="UINT32",e[e.UINT64=13]="UINT64",e[e.COMPLEX64=14]="COMPLEX64",e[e.COMPLEX128=15]="COMPLEX128",e[e.BFLOAT16=16]="BFLOAT16",e[e.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",e[e.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",e[e.FLOAT8E5M2=19]="FLOAT8E5M2",e[e.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"}(t=e.TensorDataType||(e.TensorDataType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.Primitive=0]="Primitive",e[e.Fused=1]="Fused"}(t=e.NodeType||(e.NodeType={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){let t;!function(e){e[e.NONE=0]="NONE",e[e.tensor_type=1]="tensor_type",e[e.sequence_type=2]="sequence_type",e[e.map_type=3]="map_type"}(t=e.TypeInfoValue||(e.TypeInfoValue={}))}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsShape(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}dim(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}dimLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}static startShape(e){e.startObject(1)}static addDim(e,t){e.addFieldOffset(0,t,0)}static createDimVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startDimVector(e,t){e.startVector(4,t,4)}static endShape(e){return e.endObject()}static createShape(e,t){return n.startShape(e),n.addDim(e,t),n.endShape(e)}}t.Shape=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimension(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimension(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}value(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}denotation(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimension(e){e.startObject(2)}static addValue(e,t){e.addFieldOffset(0,t,0)}static addDenotation(e,t){e.addFieldOffset(1,t,0)}static endDimension(e){return e.endObject()}static createDimension(e,t,r){return n.startDimension(e),n.addValue(e,t),n.addDenotation(e,r),n.endDimension(e)}}t.Dimension=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsDimensionValue(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsDimensionValue(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}dimType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt8(this.bb_pos+t):e.experimental.fbs.DimensionValueType.UNKNOWN}dimValue(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}dimParam(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}static startDimensionValue(e){e.startObject(3)}static addDimType(t,n){t.addFieldInt8(0,n,e.experimental.fbs.DimensionValueType.UNKNOWN)}static addDimValue(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static addDimParam(e,t){e.addFieldOffset(2,t,0)}static endDimensionValue(e){return e.endObject()}static createDimensionValue(e,t,r,o){return n.startDimensionValue(e),n.addDimType(e,t),n.addDimValue(e,r),n.addDimParam(e,o),n.endDimensionValue(e)}}t.DimensionValue=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensorTypeAndShape(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensorTypeAndShape(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}shape(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startTensorTypeAndShape(e){e.startObject(2)}static addElemType(t,n){t.addFieldInt32(0,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addShape(e,t){e.addFieldOffset(1,t,0)}static endTensorTypeAndShape(e){return e.endObject()}static createTensorTypeAndShape(e,t,r){return n.startTensorTypeAndShape(e),n.addElemType(e,t),n.addShape(e,r),n.endTensorTypeAndShape(e)}}t.TensorTypeAndShape=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsMapType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsMapType(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}keyType(){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}valueType(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startMapType(e){e.startObject(2)}static addKeyType(t,n){t.addFieldInt32(0,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addValueType(e,t){e.addFieldOffset(1,t,0)}static endMapType(e){return e.endObject()}static createMapType(e,t,r){return n.startMapType(e),n.addKeyType(e,t),n.addValueType(e,r),n.endMapType(e)}}t.MapType=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSequenceType(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSequenceType(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}elemType(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSequenceType(e){e.startObject(1)}static addElemType(e,t){e.addFieldOffset(0,t,0)}static endSequenceType(e){return e.endObject()}static createSequenceType(e,t){return n.startSequenceType(e),n.addElemType(e,t),n.endSequenceType(e)}}t.SequenceType=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){(e.fbs||(e.fbs={})).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(e,t,n,r){return e.prep(4,12),e.writeInt32(r),e.writeInt32(n),e.writeInt32(t),e.offset()}}}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNodeEdge(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNodeEdge(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}nodeIndex(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb_pos+e):0}inputEdges(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}inputEdgesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}outputEdges(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+r)+12*t,this.bb):null}outputEdgesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNodeEdge(e){e.startObject(3)}static addNodeIndex(e,t){e.addFieldInt32(0,t,0)}static addInputEdges(e,t){e.addFieldOffset(1,t,0)}static startInputEdgesVector(e,t){e.startVector(12,t,4)}static addOutputEdges(e,t){e.addFieldOffset(2,t,0)}static startOutputEdgesVector(e,t){e.startVector(12,t,4)}static endNodeEdge(e){return e.endObject()}static createNodeEdge(e,t,r,o){return n.startNodeEdge(e),n.addNodeIndex(e,t),n.addInputEdges(e,r),n.addOutputEdges(e,o),n.endNodeEdge(e)}}t.NodeEdge=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsNode(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsNode(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}sinceVersion(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt32(this.bb_pos+e):0}index(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readUint32(this.bb_pos+e):0}opType(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.NodeType.Primitive}executionProviderType(e){let t=this.bb.__offset(this.bb_pos,18);return t?this.bb.__string(this.bb_pos+t,e):null}inputs(e,t){let n=this.bb.__offset(this.bb_pos,20);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,22);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}attributes(t,n){let r=this.bb.__offset(this.bb_pos,24);return r?(n||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}attributesLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCounts(e){let t=this.bb.__offset(this.bb_pos,26);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0}inputArgCountsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}inputArgCountsArray(){let e=this.bb.__offset(this.bb_pos,26);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}implicitInputs(e,t){let n=this.bb.__offset(this.bb_pos,28);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}implicitInputsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startNode(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDomain(e,t){e.addFieldOffset(2,t,0)}static addSinceVersion(e,t){e.addFieldInt32(3,t,0)}static addIndex(e,t){e.addFieldInt32(4,t,0)}static addOpType(e,t){e.addFieldOffset(5,t,0)}static addType(t,n){t.addFieldInt32(6,n,e.experimental.fbs.NodeType.Primitive)}static addExecutionProviderType(e,t){e.addFieldOffset(7,t,0)}static addInputs(e,t){e.addFieldOffset(8,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(9,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addAttributes(e,t){e.addFieldOffset(10,t,0)}static createAttributesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startAttributesVector(e,t){e.startVector(4,t,4)}static addInputArgCounts(e,t){e.addFieldOffset(11,t,0)}static createInputArgCountsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startInputArgCountsVector(e,t){e.startVector(4,t,4)}static addImplicitInputs(e,t){e.addFieldOffset(12,t,0)}static createImplicitInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startImplicitInputsVector(e,t){e.startVector(4,t,4)}static endNode(e){return e.endObject()}static createNode(e,t,r,o,a,i,s,l,u,c,p,d,h,f){return n.startNode(e),n.addName(e,t),n.addDocString(e,r),n.addDomain(e,o),n.addSinceVersion(e,a),n.addIndex(e,i),n.addOpType(e,s),n.addType(e,l),n.addExecutionProviderType(e,u),n.addInputs(e,c),n.addOutputs(e,p),n.addAttributes(e,d),n.addInputArgCounts(e,h),n.addImplicitInputs(e,f),n.endNode(e)}}t.Node=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsValueInfo(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsValueInfo(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startValueInfo(e){e.startObject(3)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(e,t){e.addFieldOffset(2,t,0)}static endValueInfo(e){return e.endObject()}static createValueInfo(e,t,r,o){return n.startValueInfo(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,o),n.endValueInfo(e)}}t.ValueInfo=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTypeInfo(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTypeInfo(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}denotation(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}valueType(){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint8(this.bb_pos+t):e.experimental.fbs.TypeInfoValue.NONE}value(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__union(e,this.bb_pos+t):null}static startTypeInfo(e){e.startObject(3)}static addDenotation(e,t){e.addFieldOffset(0,t,0)}static addValueType(t,n){t.addFieldInt8(1,n,e.experimental.fbs.TypeInfoValue.NONE)}static addValue(e,t){e.addFieldOffset(2,t,0)}static endTypeInfo(e){return e.endObject()}static createTypeInfo(e,t,r,o){return n.startTypeInfo(e),n.addDenotation(e,t),n.addValueType(e,r),n.addValue(e,o),n.endTypeInfo(e)}}t.TypeInfo=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsOperatorSetId(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsOperatorSetId(e,n){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}domain(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}version(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}static startOperatorSetId(e){e.startObject(2)}static addDomain(e,t){e.addFieldOffset(0,t,0)}static addVersion(e,t){e.addFieldInt64(1,t,e.createLong(0,0))}static endOperatorSetId(e){return e.endObject()}static createOperatorSetId(e,n,r){return t.startOperatorSetId(e),t.addDomain(e,n),t.addVersion(e,r),t.endOperatorSetId(e)}}e.OperatorSetId=t}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsTensor(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsTensor(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}dataType(){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.TensorDataType.UNDEFINED}rawData(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint8(this.bb.__vector(this.bb_pos+t)+e):0}rawDataLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}rawDataArray(){let e=this.bb.__offset(this.bb_pos,12);return e?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}stringData(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringDataLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}static startTensor(e){e.startObject(6)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static addDataType(t,n){t.addFieldInt32(3,n,e.experimental.fbs.TensorDataType.UNDEFINED)}static addRawData(e,t){e.addFieldOffset(4,t,0)}static createRawDataVector(e,t){e.startVector(1,t.length,1);for(let n=t.length-1;n>=0;n--)e.addInt8(t[n]);return e.endVector()}static startRawDataVector(e,t){e.startVector(1,t,1)}static addStringData(e,t){e.addFieldOffset(5,t,0)}static createStringDataVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringDataVector(e,t){e.startVector(4,t,4)}static endTensor(e){return e.endObject()}static createTensor(e,t,r,o,a,i,s){return n.startTensor(e),n.addName(e,t),n.addDocString(e,r),n.addDims(e,o),n.addDataType(e,a),n.addRawData(e,i),n.addStringData(e,s),n.endTensor(e)}}t.Tensor=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSparseTensor(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSparseTensor(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}values(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}indices(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}dims(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}dimsLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSparseTensor(e){e.startObject(3)}static addValues(e,t){e.addFieldOffset(0,t,0)}static addIndices(e,t){e.addFieldOffset(1,t,0)}static addDims(e,t){e.addFieldOffset(2,t,0)}static createDimsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startDimsVector(e,t){e.startVector(8,t,8)}static endSparseTensor(e){return e.endObject()}static createSparseTensor(e,t,r,o){return n.startSparseTensor(e),n.addValues(e,t),n.addIndices(e,r),n.addDims(e,o),n.endSparseTensor(e)}}t.SparseTensor=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAttribute(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAttribute(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}name(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}docString(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}type(){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb_pos+t):e.experimental.fbs.AttributeType.UNDEFINED}f(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}i(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}s(e){let t=this.bb.__offset(this.bb_pos,14);return t?this.bb.__string(this.bb_pos+t,e):null}t(t){let n=this.bb.__offset(this.bb_pos,16);return n?(t||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}g(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}floats(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0}floatsLength(){let e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}floatsArray(){let e=this.bb.__offset(this.bb_pos,20);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ints(e){let t=this.bb.__offset(this.bb_pos,22);return t?this.bb.readInt64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}intsLength(){let e=this.bb.__offset(this.bb_pos,22);return e?this.bb.__vector_len(this.bb_pos+e):0}strings(e,t){let n=this.bb.__offset(this.bb_pos,24);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}stringsLength(){let e=this.bb.__offset(this.bb_pos,24);return e?this.bb.__vector_len(this.bb_pos+e):0}tensors(t,n){let r=this.bb.__offset(this.bb_pos,26);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}tensorsLength(){let e=this.bb.__offset(this.bb_pos,26);return e?this.bb.__vector_len(this.bb_pos+e):0}graphs(t,n){let r=this.bb.__offset(this.bb_pos,28);return r?(n||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}graphsLength(){let e=this.bb.__offset(this.bb_pos,28);return e?this.bb.__vector_len(this.bb_pos+e):0}static startAttribute(e){e.startObject(13)}static addName(e,t){e.addFieldOffset(0,t,0)}static addDocString(e,t){e.addFieldOffset(1,t,0)}static addType(t,n){t.addFieldInt32(2,n,e.experimental.fbs.AttributeType.UNDEFINED)}static addF(e,t){e.addFieldFloat32(3,t,0)}static addI(e,t){e.addFieldInt64(4,t,e.createLong(0,0))}static addS(e,t){e.addFieldOffset(5,t,0)}static addT(e,t){e.addFieldOffset(6,t,0)}static addG(e,t){e.addFieldOffset(7,t,0)}static addFloats(e,t){e.addFieldOffset(8,t,0)}static createFloatsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()}static startFloatsVector(e,t){e.startVector(4,t,4)}static addInts(e,t){e.addFieldOffset(9,t,0)}static createIntsVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startIntsVector(e,t){e.startVector(8,t,8)}static addStrings(e,t){e.addFieldOffset(10,t,0)}static createStringsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startStringsVector(e,t){e.startVector(4,t,4)}static addTensors(e,t){e.addFieldOffset(11,t,0)}static createTensorsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startTensorsVector(e,t){e.startVector(4,t,4)}static addGraphs(e,t){e.addFieldOffset(12,t,0)}static createGraphsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startGraphsVector(e,t){e.startVector(4,t,4)}static endAttribute(e){return e.endObject()}static createAttribute(e,t,r,o,a,i,s,l,u,c,p,d,h,f){return n.startAttribute(e),n.addName(e,t),n.addDocString(e,r),n.addType(e,o),n.addF(e,a),n.addI(e,i),n.addS(e,s),n.addT(e,l),n.addG(e,u),n.addFloats(e,c),n.addInts(e,p),n.addStrings(e,d),n.addTensors(e,h),n.addGraphs(e,f),n.endAttribute(e)}}t.Attribute=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsGraph(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsGraph(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}initializers(t,n){let r=this.bb.__offset(this.bb_pos,4);return r?(n||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}initializersLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeArgs(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeArgsLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}nodes(t,n){let r=this.bb.__offset(this.bb_pos,8);return r?(n||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodesLength(){let e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}maxNodeIndex(){let e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readUint32(this.bb_pos+e):0}nodeEdges(t,n){let r=this.bb.__offset(this.bb_pos,12);return r?(n||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}nodeEdgesLength(){let e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}inputs(e,t){let n=this.bb.__offset(this.bb_pos,14);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}inputsLength(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}outputs(e,t){let n=this.bb.__offset(this.bb_pos,16);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null}outputsLength(){let e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}sparseInitializers(t,n){let r=this.bb.__offset(this.bb_pos,18);return r?(n||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}sparseInitializersLength(){let e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}static startGraph(e){e.startObject(8)}static addInitializers(e,t){e.addFieldOffset(0,t,0)}static createInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInitializersVector(e,t){e.startVector(4,t,4)}static addNodeArgs(e,t){e.addFieldOffset(1,t,0)}static createNodeArgsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeArgsVector(e,t){e.startVector(4,t,4)}static addNodes(e,t){e.addFieldOffset(2,t,0)}static createNodesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodesVector(e,t){e.startVector(4,t,4)}static addMaxNodeIndex(e,t){e.addFieldInt32(3,t,0)}static addNodeEdges(e,t){e.addFieldOffset(4,t,0)}static createNodeEdgesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startNodeEdgesVector(e,t){e.startVector(4,t,4)}static addInputs(e,t){e.addFieldOffset(5,t,0)}static createInputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startInputsVector(e,t){e.startVector(4,t,4)}static addOutputs(e,t){e.addFieldOffset(6,t,0)}static createOutputsVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOutputsVector(e,t){e.startVector(4,t,4)}static addSparseInitializers(e,t){e.addFieldOffset(7,t,0)}static createSparseInitializersVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSparseInitializersVector(e,t){e.startVector(4,t,4)}static endGraph(e){return e.endObject()}static createGraph(e,t,r,o,a,i,s,l,u){return n.startGraph(e),n.addInitializers(e,t),n.addNodeArgs(e,r),n.addNodes(e,o),n.addMaxNodeIndex(e,a),n.addNodeEdges(e,i),n.addInputs(e,s),n.addOutputs(e,l),n.addSparseInitializers(e,u),n.endGraph(e)}}t.Graph=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsModel(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsModel(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}irVersion(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}opsetImport(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}opsetImportLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}producerName(e){let t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null}producerVersion(e){let t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__string(this.bb_pos+t,e):null}domain(e){let t=this.bb.__offset(this.bb_pos,12);return t?this.bb.__string(this.bb_pos+t,e):null}modelVersion(){let e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readInt64(this.bb_pos+e):this.bb.createLong(0,0)}docString(e){let t=this.bb.__offset(this.bb_pos,16);return t?this.bb.__string(this.bb_pos+t,e):null}graph(t){let n=this.bb.__offset(this.bb_pos,18);return n?(t||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}graphDocString(e){let t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}static startModel(e){e.startObject(9)}static addIrVersion(e,t){e.addFieldInt64(0,t,e.createLong(0,0))}static addOpsetImport(e,t){e.addFieldOffset(1,t,0)}static createOpsetImportVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startOpsetImportVector(e,t){e.startVector(4,t,4)}static addProducerName(e,t){e.addFieldOffset(2,t,0)}static addProducerVersion(e,t){e.addFieldOffset(3,t,0)}static addDomain(e,t){e.addFieldOffset(4,t,0)}static addModelVersion(e,t){e.addFieldInt64(5,t,e.createLong(0,0))}static addDocString(e,t){e.addFieldOffset(6,t,0)}static addGraph(e,t){e.addFieldOffset(7,t,0)}static addGraphDocString(e,t){e.addFieldOffset(8,t,0)}static endModel(e){return e.endObject()}static createModel(e,t,r,o,a,i,s,l,u,c){return n.startModel(e),n.addIrVersion(e,t),n.addOpsetImport(e,r),n.addProducerName(e,o),n.addProducerVersion(e,a),n.addDomain(e,i),n.addModelVersion(e,s),n.addDocString(e,l),n.addGraph(e,u),n.addGraphDocString(e,c),n.endModel(e)}}t.Model=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(e){!function(e){class t{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsKernelCreateInfos(e,n){return(n||new t).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsKernelCreateInfos(e,n){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(n||new t).__init(e.readInt32(e.position())+e.position(),e)}nodeIndices(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0}nodeIndicesLength(){let e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}nodeIndicesArray(){let e=this.bb.__offset(this.bb_pos,4);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}kernelDefHashes(e){let t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readUint64(this.bb.__vector(this.bb_pos+t)+8*e):this.bb.createLong(0,0)}kernelDefHashesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startKernelCreateInfos(e){e.startObject(2)}static addNodeIndices(e,t){e.addFieldOffset(0,t,0)}static createNodeIndicesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()}static startNodeIndicesVector(e,t){e.startVector(4,t,4)}static addKernelDefHashes(e,t){e.addFieldOffset(1,t,0)}static createKernelDefHashesVector(e,t){e.startVector(8,t.length,8);for(let n=t.length-1;n>=0;n--)e.addInt64(t[n]);return e.endVector()}static startKernelDefHashesVector(e,t){e.startVector(8,t,8)}static endKernelCreateInfos(e){return e.endObject()}static createKernelCreateInfos(e,n,r){return t.startKernelCreateInfos(e),t.addNodeIndices(e,n),t.addKernelDefHashes(e,r),t.endKernelCreateInfos(e)}}e.KernelCreateInfos=t}(e.fbs||(e.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSubGraphSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSubGraphSessionState(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}graphId(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startSubGraphSessionState(e){e.startObject(2)}static addGraphId(e,t){e.addFieldOffset(0,t,0)}static addSessionState(e,t){e.addFieldOffset(1,t,0)}static endSubGraphSessionState(e){let t=e.endObject();return e.requiredField(t,4),t}static createSubGraphSessionState(e,t,r){return n.startSubGraphSessionState(e),n.addGraphId(e,t),n.addSessionState(e,r),n.endSubGraphSessionState(e)}}t.SubGraphSessionState=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsSessionState(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsSessionState(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}kernels(t){let n=this.bb.__offset(this.bb_pos,4);return n?(t||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}subGraphSessionStates(t,n){let r=this.bb.__offset(this.bb_pos,6);return r?(n||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+r)+4*t),this.bb):null}subGraphSessionStatesLength(){let e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}static startSessionState(e){e.startObject(2)}static addKernels(e,t){e.addFieldOffset(0,t,0)}static addSubGraphSessionStates(e,t){e.addFieldOffset(1,t,0)}static createSubGraphSessionStatesVector(e,t){e.startVector(4,t.length,4);for(let n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()}static startSubGraphSessionStatesVector(e,t){e.startVector(4,t,4)}static endSessionState(e){return e.endObject()}static createSessionState(e,t,r){return n.startSessionState(e),n.addKernels(e,t),n.addSubGraphSessionStates(e,r),n.endSessionState(e)}}t.SessionState=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={})),function(e){!function(t){!function(t){class n{constructor(){this.bb=null,this.bb_pos=0}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsInferenceSession(e,t){return(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsInferenceSession(e,t){return e.setPosition(e.position()+r.flatbuffers.SIZE_PREFIX_LENGTH),(t||new n).__init(e.readInt32(e.position())+e.position(),e)}static bufferHasIdentifier(e){return e.__has_identifier("ORTM")}ortVersion(e){let t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null}model(t){let n=this.bb.__offset(this.bb_pos,6);return n?(t||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}sessionState(t){let n=this.bb.__offset(this.bb_pos,8);return n?(t||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+n),this.bb):null}static startInferenceSession(e){e.startObject(3)}static addOrtVersion(e,t){e.addFieldOffset(0,t,0)}static addModel(e,t){e.addFieldOffset(1,t,0)}static addSessionState(e,t){e.addFieldOffset(2,t,0)}static endInferenceSession(e){return e.endObject()}static finishInferenceSessionBuffer(e,t){e.finish(t,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(e,t){e.finish(t,"ORTM",!0)}static createInferenceSession(e,t,r,o){return n.startInferenceSession(e),n.addOrtVersion(e,t),n.addModel(e,r),n.addSessionState(e,o),n.endInferenceSession(e)}}t.InferenceSession=n}(t.fbs||(t.fbs={}))}(e.experimental||(e.experimental={}))}(t.onnxruntime||(t.onnxruntime={}))},1723:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OnnxjsSessionHandler=void 0;const r=n(2235),o=n(9240);t.OnnxjsSessionHandler=class{constructor(e){this.session=e,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,t,n){const a=new Map;for(const t in e)if(Object.hasOwnProperty.call(e,t)){const n=e[t];a.set(t,new o.Tensor(n.dims,n.type,void 0,void 0,n.data))}const i=await this.session.run(a),s={};return i.forEach(((e,t)=>{s[t]=new r.Tensor(e.type,e.data,e.dims)})),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}},6027:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Session=void 0;const r=n(7067),o=n(1296),a=n(1975),i=n(6496),s=n(1315),l=n(1745);t.Session=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=s.Profiler.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,t,n){await this.profiler.event("session","Session.loadModel",(async()=>{const i=await(0,a.resolveBackend)(this.backendHint);if(this.sessionHandler=i.createSessionHandler(this.context),this._model=new l.Model,"string"==typeof e){const t=e.endsWith(".ort");if("undefined"!=typeof process&&process.versions&&process.versions.node){const n=await(0,o.promisify)(r.readFile)(e);this.initialize(n,t)}else{const n=await fetch(e),r=await n.arrayBuffer();this.initialize(new Uint8Array(r),t)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{const r=new Uint8Array(e,t||0,n||e.byteLength);this.initialize(r)}}))}initialize(e,t){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",(()=>{const n=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,n,t),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new i.ExecutionPlan(this._model.graph,this._ops,this.profiler)})),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",(async()=>{const t=this.normalizeAndValidateInputs(e),n=await this._executionPlan.execute(this.sessionHandler,t);return this.createOutput(n)}))}normalizeAndValidateInputs(e){const t=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==t.length)throw new Error(`incorrect input array length: expected ${t.length} but got ${e.length}`)}else{if(e.size!==t.length)throw new Error(`incorrect input map size: expected ${t.length} but got ${e.size}`);const n=new Array(e.size);let r=0;for(let o=0;o<t.length;++o){const a=e.get(t[o]);if(!a)throw new Error(`missing input tensor for: '${name}'`);n[r++]=a}e=n}if(this.context.graphInputTypes&&0!==this.context.graphInputTypes.length&&this.context.graphInputDims&&0!==this.context.graphInputDims.length)this.validateInputTensorDims(this.context.graphInputDims,e,!1);else{const t=this._model.graph.getInputIndices(),n=this._model.graph.getValues(),r=new Array(t.length);for(let o=0;o<t.length;++o){const a=n[t[o]];r[o]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[o].dims)}this.validateInputTensorDims(r,e,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,t){for(let n=0;n<t.length;n++){const r=e[n],o=t[n].type;if(r!==o)throw new Error(`input tensor[${n}] check failed: expected type '${r}' but got ${o}`)}}validateInputTensorDims(e,t,n){for(let r=0;r<t.length;r++){const o=e[r],a=t[r].dims;if(!this.compareTensorDims(o,a,n))throw new Error(`input tensor[${r}] check failed: expected shape '[${o.join(",")}]' but got [${a.join(",")}]`)}}compareTensorDims(e,t,n){if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r]&&(!n||0!==e[r]))return!1;return!0}createOutput(e){const t=this._model.graph.getOutputNames();if(e.length!==t.length)throw new Error("expected number of outputs do not match number of generated outputs");const n=new Map;for(let r=0;r<t.length;++r)n.set(t[r],e[r]);return n}initializeOps(e){const t=e.getNodes();this._ops=new Array(t.length);for(let n=0;n<t.length;n++)this._ops[n]=this.sessionHandler.resolve(t[n],this._model.opsets,e)}}},9240:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const o=n(3442),a=r(n(1583)),i=n(5127),s=n(2446),l=n(7273);var u=i.onnxruntime.experimental.fbs;class c{get data(){if(void 0===this.cache){const e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if("string"!==this.type)throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if("string"!==this.type)return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[l.ShapeUtil.indicesToOffset(e,this.strides)]}set(e,t){this.data[l.ShapeUtil.indicesToOffset(e,this.strides)]=t}async getData(){return void 0===this.cache&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=l.ShapeUtil.computeStrides(this.dims)),this._strides}constructor(e,t,n,r,a,i=o.Guid.create()){this.dims=e,this.type=t,this.dataProvider=n,this.asyncDataProvider=r,this.cache=a,this.dataId=i,this.size=l.ShapeUtil.validateDimsAndCalcSize(e);const s=this.size,u=void 0===n&&void 0===r&&void 0===a;if(void 0!==a&&a.length!==s)throw new RangeError("Input dims doesn't match data length.");if("string"===t){if(!(void 0===a||Array.isArray(a)&&a.every((e=>"string"==typeof e))))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(s))}else{if(void 0!==a){const e=d(t);if(!(a instanceof e))throw new TypeError(`cache should be type ${e.name}`)}if(u){const e=new ArrayBuffer(s*function(e){switch(e){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${e}`)}}(t));this.cache=function(e,t){return new(d(t))(e)}(e,t)}}}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");const t=l.ProtoUtil.tensorDataTypeFromProto(e.dataType),n=l.ProtoUtil.tensorDimsFromProto(e.dims),r=new c(n,t);if("string"===t)e.stringData.forEach(((e,t)=>{r.data[t]=(0,l.decodeUtf8String)(e)}));else if(e.rawData&&"number"==typeof e.rawData.byteLength&&e.rawData.byteLength>0){const t=r.data,n=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),o=p(e.dataType),a=e.rawData.byteLength/o;if(e.rawData.byteLength%o!=0)throw new Error("invalid buffer length");if(t.length!==a)throw new Error("buffer length mismatch");for(let r=0;r<a;r++){const a=f(n,e.dataType,r*o);t[r]=a}}else{let t;switch(e.dataType){case s.onnx.TensorProto.DataType.FLOAT:t=e.floatData;break;case s.onnx.TensorProto.DataType.INT32:case s.onnx.TensorProto.DataType.INT16:case s.onnx.TensorProto.DataType.UINT16:case s.onnx.TensorProto.DataType.INT8:case s.onnx.TensorProto.DataType.UINT8:case s.onnx.TensorProto.DataType.BOOL:t=e.int32Data;break;case s.onnx.TensorProto.DataType.INT64:t=e.int64Data;break;case s.onnx.TensorProto.DataType.DOUBLE:t=e.doubleData;break;case s.onnx.TensorProto.DataType.UINT32:case s.onnx.TensorProto.DataType.UINT64:t=e.uint64Data;break;default:throw new Error("unspecific error")}if(null==t)throw new Error("failed to populate data from a tensorproto value");const n=r.data;if(n.length!==t.length)throw new Error("array length mismatch");for(let r=0;r<t.length;r++){const o=t[r];a.default.isLong(o)?n[r]=h(o,e.dataType):n[r]=o}}return r}static fromData(e,t,n){return new c(t,n,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");const t=l.ProtoUtil.tensorDimsFromORTFormat(e),n=l.ProtoUtil.tensorDataTypeFromProto(e.dataType()),r=new c(t,n);if("string"===n)for(let t=0;t<e.stringDataLength();t++)r.data[t]=e.stringData(t);else if(e.rawDataArray()&&"number"==typeof e.rawDataLength()&&e.rawDataLength()>0){const t=r.data,n=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),o=p(e.dataType()),a=e.rawDataLength()/o;if(e.rawDataLength()%o!=0)throw new Error("invalid buffer length");if(t.length!==a)throw new Error("buffer length mismatch");for(let r=0;r<a;r++){const a=f(n,e.dataType(),r*o);t[r]=a}}return r}}function p(e){switch(e){case s.onnx.TensorProto.DataType.UINT8:case s.onnx.TensorProto.DataType.INT8:case s.onnx.TensorProto.DataType.BOOL:return 1;case s.onnx.TensorProto.DataType.UINT16:case s.onnx.TensorProto.DataType.INT16:return 2;case s.onnx.TensorProto.DataType.FLOAT:case s.onnx.TensorProto.DataType.INT32:case s.onnx.TensorProto.DataType.UINT32:return 4;case s.onnx.TensorProto.DataType.INT64:case s.onnx.TensorProto.DataType.DOUBLE:case s.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${s.onnx.TensorProto.DataType[e]}`)}}function d(e){switch(e){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function h(e,t){if(t===s.onnx.TensorProto.DataType.INT64||t===u.TensorDataType.INT64){if(e.greaterThanOrEqual(2147483648)||e.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(t!==s.onnx.TensorProto.DataType.UINT32&&t!==u.TensorDataType.UINT32&&t!==s.onnx.TensorProto.DataType.UINT64&&t!==u.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${s.onnx.TensorProto.DataType[t]}`);if(e.greaterThanOrEqual(4294967296)||e.lessThan(0))throw new TypeError("uint64 is not supported")}return e.toNumber()}function f(e,t,n){switch(t){case s.onnx.TensorProto.DataType.BOOL:case s.onnx.TensorProto.DataType.UINT8:return e.getUint8(n);case s.onnx.TensorProto.DataType.INT8:return e.getInt8(n);case s.onnx.TensorProto.DataType.UINT16:return e.getUint16(n,!0);case s.onnx.TensorProto.DataType.INT16:return e.getInt16(n,!0);case s.onnx.TensorProto.DataType.FLOAT:return e.getFloat32(n,!0);case s.onnx.TensorProto.DataType.INT32:return e.getInt32(n,!0);case s.onnx.TensorProto.DataType.UINT32:return e.getUint32(n,!0);case s.onnx.TensorProto.DataType.INT64:return h(a.default.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!1),t);case s.onnx.TensorProto.DataType.DOUBLE:return e.getFloat64(n,!0);case s.onnx.TensorProto.DataType.UINT64:return h(a.default.fromBits(e.getUint32(n,!0),e.getUint32(n+4,!0),!0),t);default:throw new Error(`cannot read from DataView for type ${s.onnx.TensorProto.DataType[t]}`)}}t.Tensor=c},7273:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decodeUtf8String=t.MAX_CLIP=t.MIN_CLIP=t.PoolConvUtil=t.ReduceUtil=t.SplitUtil=t.MathUtil=t.ShapeUtil=t.LongUtil=t.ProtoUtil=t.GemmUtil=t.arrayCopyHelper=t.BroadcastUtil=t.MatMulUtil=t.ArrayUtil=t.assert=t.checkInputsShape=void 0;const o=n(5686),a=r(n(1583)),i=n(2446),s=n(9240);t.checkInputsShape=function(e,...t){if(!e||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!e[n].dims||e[n].dims.length!==t[n])return!1;return!0},t.assert=function(e,t){if(!e)throw new Error("string"==typeof t?t:t())},t.ArrayUtil=class{static arraysEqual(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}};class l{static preprocessInputShapes(e,t){return[1===e.length?[1,e[0]]:e,1===t.length?[t[0],1]:t]}static postprocessOutputShape(e,t,n){1===t&&e.splice(e.length-2,1),1===n&&e.pop()}static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=l;class u{static calcShape(e,t,n=!1){const r=e.length,o=t.length;if(0===r)return t;if(0===o)return e;const a=Math.max(e.length,t.length),i=new Array(a);if(n){if(r<2||o<2)return;const n=l.calcMatMulShape([e[r-2],e[r-1]],[t[o-2],t[o-1]]);if(void 0===n)return;[i[a-2],i[a-1]]=n}for(let s=n?3:1;s<=a;s++){const n=r-s<0?1:e[r-s],l=o-s<0?1:t[o-s];if(n!==l&&n>1&&l>1)return;i[a-s]=Math.max(n,l)}return i}static index(e,t){const n=new Array(t.length);return u.fillIndex(e,t,n),n}static fillIndex(e,t,n){const r=e.length-t.length;for(let o=0;o<t.length;o++)n[o]=e[r+o]%t[o]}static calc(e,t,n,r,o){const a=u.calcShape(e.dims,t.dims);if(a){if(r&&!d.areEqual(a,e.dims))return;const i=d.size(a),l=r?e:new s.Tensor(a,o||e.type);if(0===a.length)l.set([],n(e.get([]),t.get([])));else{const r=new Array(a.length),o=new Array(e.dims.length),s=new Array(t.dims.length);let c,p=0,d=0,h=!1,f=!1;0===e.dims.length&&(p=e.get([]),h=!0),0===t.dims.length&&(d=t.get([]),f=!0);for(let g=0;g<i;g++){c=g;for(let e=a.length-1;e>=0;e--)r[e]=c%a[e],c=Math.floor(c/a[e]);h||(u.fillIndex(r,e.dims,o),p=e.get(o)),f||(u.fillIndex(r,t.dims,s),d=t.get(s)),l.set(r,n(p,d))}}return l}}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let o=1;o<=n;o++)if(1!==e[n-o]&&e[n-o]!==t[r-o])return!1;return!0}static getBroadcastDims(e,t){const n=e.length,r=[];for(let o=0;o<n;o++){const a=n-1-o,i=e[a]||1;(t[t.length-1-o]||1)>1&&1===i&&r.unshift(a)}return r}}t.BroadcastUtil=u,t.arrayCopyHelper=function(e,t,n,r,o){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+o>t.length)throw new Error("source indices to be copied are outside bounds");if(n+o>e.length)throw new Error("target array is too small to hold result");for(let a=0;a<o;a++)e[n+a]=t[r+a]},t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,r,o){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let a,i,s;t?(a=e[1],i=e[0]):(a=e[0],i=e[1]);let l=-1;if(r?(s=n[0],l=1):(s=n[1],l=0),n[l]!==i)throw new Error("dimension mismatch");if(a<=0||s<=0||i<=0)throw new Error("invalid shape specified");if(o&&!u.isValidBroadcast(o,[a,s]))throw new Error("gemm: invalid bias shape for broadcast");return[a,s,i]}};class c{static tensorDataTypeFromProto(e){switch(e){case i.onnx.TensorProto.DataType.INT8:return"int8";case i.onnx.TensorProto.DataType.UINT8:return"uint8";case i.onnx.TensorProto.DataType.BOOL:return"bool";case i.onnx.TensorProto.DataType.INT16:return"int16";case i.onnx.TensorProto.DataType.UINT16:return"uint16";case i.onnx.TensorProto.DataType.INT32:return"int32";case i.onnx.TensorProto.DataType.UINT32:return"uint32";case i.onnx.TensorProto.DataType.FLOAT:return"float32";case i.onnx.TensorProto.DataType.DOUBLE:return"float64";case i.onnx.TensorProto.DataType.STRING:return"string";case i.onnx.TensorProto.DataType.INT64:return"int32";case i.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${i.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return i.onnx.TensorProto.DataType.INT8;case"uint8":return i.onnx.TensorProto.DataType.UINT8;case"bool":return i.onnx.TensorProto.DataType.BOOL;case"int16":return i.onnx.TensorProto.DataType.INT16;case"uint16":return i.onnx.TensorProto.DataType.UINT16;case"int32":return i.onnx.TensorProto.DataType.INT32;case"uint32":return i.onnx.TensorProto.DataType.UINT32;case"float32":return i.onnx.TensorProto.DataType.FLOAT;case"float64":return i.onnx.TensorProto.DataType.DOUBLE;case"string":return i.onnx.TensorProto.DataType.STRING;case"int64":return i.onnx.TensorProto.DataType.INT64;case"uint64":return i.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map((e=>a.default.isLong(e)?e.toNumber():e))}static tensorValueTypeFromProto(e){return{tensorType:c.tensorDataTypeFromProto(e.elemType),shape:{dims:c.tensorDimsFromProto(e.shape.dim.map((e=>e.dimValue)))}}}static tensorDimsFromORTFormat(e){const t=[];for(let n=0;n<e.dimsLength();n++)t.push(p.longToNumber(e.dims(n)));return t}static tensorAttributesFromORTFormat(e){const t=[];for(let n=0;n<e.attributesLength();n++)t.push(e.attributes(n));return t}}t.ProtoUtil=c;class p{static longToNumber(e,t){return a.default.isLong(e)?e.toNumber():e instanceof o.flatbuffers.Long?a.default.fromValue({low:e.low,high:e.high,unsigned:null!=t&&t}).toNumber():e}static isLong(e){return a.default.isLong(e)||e instanceof o.flatbuffers.Long}}t.LongUtil=p;class d{static size(e){return d.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return d.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return d.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let o=t;o<n;o++){if(e[o]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");r*=e[o]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,t,n){void 0===n&&(n=e.length);let r=0;for(let o=0;o<n;++o)r+=t[o]*e[o];return r}static offsetToIndices(e,t){const n=t.length;if(0===n)return[];if(1===n)return[e*t[0]];const r=new Array(t.length);for(let n=0;n<r.length-1;++n)r[n]=Math.floor(e/t[n]),e-=r[n]*t[n];return r[r.length-1]=e,r}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((e=>this.normalizeAxis(e,t)))}static incrementIndex(e,t,n){if(0===t.length||0===e.length)throw new Error("Index incrementing unsupported for scalar Tensor");if(void 0===n)n=t.length;else if(n<=0||n>t.length)throw new Error("Incorrect axis to increment on");for(let r=n-1;r>=0&&(e[r]++,!(e[r]<t[r]));--r)e[r]=0}static calculateReshapedDims(e,t){if(0===t.length){if(0===e.length||1===d.size(e))return[];throw new Error("cannot reshape to a scalar Tensor")}const n=t.length,r=new Array(n);let o=-1,a=1;for(let i=0;i<n;i++){if(t[i]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(-1===t[i]){if(-1!==o)throw new Error("at most one dimension in shape hints can be -1");o=i}else{if(0===t[i]){if(i>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");r[i]=e[i]}else r[i]=t[i];a*=r[i]}}const i=d.size(e);if(-1!==o){if(i%a!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${t}]`);r[o]=i/a}else if(a!==i)throw new Error("reshapedDims and originalDims don't have matching sizes");return r}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let t=1;for(const n of e){if(!Number.isInteger(n))throw new TypeError(`Invalid shape: ${n} is not an integer`);if(n<0||n>2147483647)throw new TypeError(`Invalid shape: length ${n} is not allowed`);t*=n}return t}static flattenShape(e,t){t<0&&(t+=e.length);const n=e.reduce(((e,t)=>e*t),1),r=e.slice(t).reduce(((e,t)=>e*t),1);return[n/r,r]}static squeezeShape(e,t){const n=new Array;t=d.normalizeAxes(t,e.length);for(let r=0;r<e.length;r++){const o=t.indexOf(r)>=0;if(o&&1!==e[r])throw new Error("squeeze an axis of size different than 1");(0===t.length&&e[r]>1||t.length>0&&!o)&&n.push(e[r])}return n}static unsqueezeShape(e,t){const n=new Array(e.length+t.length);n.fill(0);for(let e=0;e<t.length;e++){const r=d.normalizeAxis(t[e],n.length);if(r>=n.length)throw new Error("'axes' has an out of range axis");if(0!==n[r])throw new Error("'axes' has a duplicate axis");n[r]=1}let r=0;for(let t=0;t<n.length;t++)0===n[t]&&(n[t]=e[r++]);if(r!==e.length)throw new Error("the unsqueezed dimension could not be established");return n}}t.ShapeUtil=d,t.MathUtil=class{static sqr(e,t,n,r,o){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+o>t.length)throw new Error("source indices to be copied are outside bounds");if(n+o>e.length)throw new Error("target array is too small to hold result");for(let a=0;a<o;a++)e[n+a]+=Math.pow(t[r+a],2)}static axpy(e,t,n,r,o,a){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+o>t.length)throw new Error("source indices to be copied are outside bounds");if(n+o>e.length)throw new Error("target array is too small to hold result");for(let i=0;i<o;i++)e[n+i]+=a*t[r+i]}static powx(e,t,n,r,o,a){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+o>t.length)throw new Error("source indices to be copied are outside bounds");if(n+o>e.length)throw new Error("target array is too small to hold result");for(let i=0;i<o;i++)e[n+i]=Math.pow(t[r+i],a)}static mul(e,t,n,r,o){if(r<0||r>=t.length)throw new Error("sourceIndex out of bounds");if(n<0||n>=e.length)throw new Error("targetIndex out of bounds");if(r+o>t.length)throw new Error("source indices to be copied are outside bounds");if(n+o>e.length)throw new Error("target array is too small to hold result");for(let a=0;a<o;a++)e[n+a]=t[r+a]*e[n+a]}};class h{static splitShape(e,t,n,r){if(0===n.length){if(!r)throw new Error("need to know number of outputs when the 'split' attribute is not specified");h.determineSplit(e[t],r,n)}const o=[],a=[0];for(let r=0;r<n.length;++r){0!==r&&a.push(a[r-1]+n[r-1]);const i=e.slice();i[t]=n[r],o.push(i)}return[o,a]}static determineSplit(e,t,n){if(e%t!=0)throw new Error("cannot split tensor to equal sized parts");for(let r=0;r<t;++r)n.push(e/t)}}t.SplitUtil=h;class f{static calcReduce(e,t,n,r,o){const a=e.dims.slice(0);0===t.length&&a.forEach(((e,n)=>t.push(n)));const i=f.calcReduceShape(a,t,!0),l=d.size(i),c=new s.Tensor(i,e.type),p=d.computeStrides(i),h=d.computeStrides(a),g=new Array(a.length);for(let n=0;n<l;n++){const i=d.offsetToIndices(n,p);u.fillIndex(i,a,g),c.set(i,f.calcReduceByAxis(e.numberData,t,a,0,d.indicesToOffset(g,h),r,o))}return n?c:new s.Tensor(f.calcReduceShape(a,t,n),c.type,void 0,void 0,c.data,c.dataId)}static calcReduceByAxis(e,t,n,r,o,a,i){let s=0;if(r>=t.length)return a(e[o]);const l=t[r],u=l>=n.length?1:d.size(n.slice(l+1));for(let c=0;c<n[l];c++)s=0===c?f.calcReduceByAxis(e,t,n,r+1,o,a,i):i(s,f.calcReduceByAxis(e,t,n,r+1,o,a,i)),o+=u;return s}static calcReduceShape(e,t,n){const r=e.slice();for(let e=0;e<t.length;e++)r[t[e]]=n?1:0;return r.filter((e=>0!==e))}}t.ReduceUtil=f;class g{static adjustPoolAttributes(e,t,n,r,o,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,o,a){if(a){if(o.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let i=0;i<e.length-2;i++)g.adjustPadAndReturnShape(e[i+2],t[i],n[i],r[i],o,i,i+e.length-2,a)}}static computePoolOutputShape(e,t,n,r,o,a,i){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const s=[t[0],t[1]];return g.computeShapeHelper(e,t,s,n,r,o,a,i),s}static computeConvOutputShape(e,t,n,r,o,a,i){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const s=[e[0],t[0]];return g.computeShapeHelper(!1,e,s,n,r,o,a,i),s}static computeShapeHelper(e,t,n,r,o,a,i,s){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(g.adjustPadAndReturnShape(t[e+2],r[e],o[e],a[e],i,e,e+t.length-2,s))}static adjustPadAndReturnShape(e,t,n,r,o,a,i,s){const l=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+o[a]+o[i]-l)/t+1);switch(s){case"VALID":return o[a]=0,o[i]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return o[a]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),o[i]=n-o[a],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=g,t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22,t.decodeUtf8String=function(e){return(new TextDecoder).decode(e)}},8408:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="1.16.0-dev.20230910-24f0893d3c"},3838:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WebGpuBackend=void 0;const r=n(4955),o=n(7771),a=n(8510),i=n(8305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.supportTimestampQuery=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ}};t.features.has("timestamp-query-inside-passes")&&(this.supportTimestampQuery=!0,n.requiredFeatures=["timestamp-query-inside-passes"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,o.createGpuDataManager)(this),this.programManager=new i.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,r.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.supportTimestampQuery&&(this.profilingQuerySet=this.device.createQuerySet({type:"timestamp",count:2})),Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,o,a){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const i=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);i[e]=n}const s=((e,t)=>{const n=t.map((e=>`${e.dataType};${e.dims.join(",")}`)).join("|");let r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r})(e,t);let l=this.programManager.getArtifact(s);const u=l?l.programInfo:"function"==typeof e.get?e.get():e,c=0===n.length?u.outputs.map(((e,t)=>t)):n;if(c.length!==u.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${u.outputs.length}.`);const p=[],d=[];for(let e=0;e<u.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-3||c[e]>=u.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);if(-3===c[e])continue;const t=-1===c[e],n=-2===c[e],r=t||n?a(u.outputs[e].dataType,u.outputs[e].dims):o(c[e],u.outputs[e].dataType,u.outputs[e].dims),i=this.gpuDataManager.get(r.data);if(!i)throw new Error(`no GPU data for output: ${r.data}`);if(t&&this.temporaryData.push(i),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(i)}p.push(r),d.push(i)}const h=this.programManager.normalizeDispatchGroupSize(u.dispatchGroup(t));return l||(l=this.programManager.build(u,h),this.programManager.setArtifact(s,l)),(0,r.LOG_DEBUG)("info",(()=>`[ProgramManager] run "${u.name}" (key=${s}) with ${h[0]}x${h[1]}x${h[2]}`)),this.programManager.run(l,t,i,d,h),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),r=t();r.set(new Uint8Array(n,0,r.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){const o=a.WEBGPU_OP_RESOLVE_RULES.get(e);if(!o)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r,o[0],[o[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){const o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);const[a,i,s,l]=o;if(null!==this.currentKernelId)throw new Error(`kernel "[${a}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,l[0]&&(l[1]=l[0](l[1]),l[0]=void 0),(0,r.LOG_DEBUG)("info",(()=>`[WebGPU] Start to run kernel "[${a}] ${i}"...`));const u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),s(t,l[1]),0}catch(e){return(0,r.LOG_DEBUG)("warning",`[WebGPU] Kernel "[${a}] ${i}" failed. Error: ${e}`),1}finally{u&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${a}] ${i}": ${e.message}`:null)));for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},7675:(e,t,n)=>{t.S=void 0;const r=n(7917),o=n(3838),a=n(4955),i=n(6952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");const e=i.ShapeUtil.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");const e=i.ShapeUtil.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");const e=i.ShapeUtil.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(i.ShapeUtil.size(e)!==i.ShapeUtil.size(this.dims))throw new Error("Invalid new shape");return new s(this.module,this.dataType,this.data,e)}}class l{get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;const r=e.HEAPU32;let o=n>>2;this.opKernelContext=r[o++];const a=r[o++];this.outputCount=r[o++],this.customDataOffset=r[o++],this.customDataSize=r[o++];const i=[];for(let t=0;t<a;t++){const t=r[o++],n=r[o++],a=r[o++],l=[];for(let e=0;e<a;e++)l.push(r[o++]);i.push(new s(e,t,n,l))}this.inputs=i}compute(e,t){var n,o,a;const l=null!==(o=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>"number"==typeof e?this.inputs[e]:e)))&&void 0!==o?o:this.inputs,u=null!==(a=null==t?void 0:t.outputs)&&void 0!==a?a:[];return this.backend.run(e,l,u,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const o=n*i.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(o).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.S=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");const r=new o.WebGpuBackend;await r.initialize(t),n({backend:r},(e=>r.alloc(e)),(e=>r.free(e)),((t,n,o,i=!1)=>{if(i)(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${o}`)),r.memcpy(t,n);else{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${o}`));const i=e.HEAPU8.subarray(t,t+o);r.upload(n,i)}}),(async(t,n,o)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${o}`)),await r.download(t,(()=>e.HEAPU8.subarray(n,n+o)))}),((n,o,a)=>r.createKernel(n,o,a,t.debug||"default"===t.webgpu.profilingMode?e.UTF8ToString(e._JsepGetNodeName(o)):`${o}`)),(e=>r.releaseKernel(e)),((t,n,o)=>{(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepRun: sessionId=${o.sessionId}, kernel=${t}, contextDataOffset=${n}`));const i=new l(e,r,n);return r.computeKernel(t,i,o.errors)}))}}},4955:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const r=n(7917),o=["V","I","W","E","F"];let a,i;t.configureLogger=(e,t)=>{a=e,i=t},t.LOG=(e,t)=>{const n=(0,r.logLevelStringToEnum)(e);var i,s;n>=(0,r.logLevelStringToEnum)(a)&&(i=n,s="function"==typeof t?t():t,console.log(`[${o[i]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{i&&(0,t.LOG)(...e)}},6952:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const o=e.length,a=t.length;if(0===o)return t;if(0===a)return e;const i=Math.max(e.length,t.length),s=new Array(i);if(r){if(o<2||a<2)return;const r=n.calcMatMulShape([e[o-2],e[o-1]],[t[a-2],t[a-1]]);if(void 0===r)return;[s[i-2],s[i-1]]=r}for(let n=r?3:1;n<=i;n++){const r=o-n<0?1:e[o-n],l=a-n<0?1:t[a-n];if(r!==l&&r>1&&l>1)return;s[i-n]=Math.max(r,l)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let o=1;o<=n;o++)if(1!==e[n-o]&&e[n-o]!==t[r-o])return!1;return!0}}t.BroadcastUtil=r;class o{static size(e){return o.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return o.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return o.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let o=t;o<n;o++){if(e[o]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[o]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=o;class a{static adjustPoolAttributes(e,t,n,r,o,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,o,i,s){if(s){if(o.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<e.length-2;l++)a.adjustPadAndReturnShape(e[l+(i?1:2)],t[l],n[l],r[l],o,l,l+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,o,i,s){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const l=[t[0],t[1]];return a.computeShapeHelper(e,t,l,n,r,o,i,s),l}static computeConvOutputShape(e,t,n,r,o,i,s){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const l=[e[0],t[0]];return a.computeShapeHelper(!1,e,l,n,r,o,i,s),l}static computeShapeHelper(e,t,n,r,o,i,s,l){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(a.adjustPadAndReturnShape(t[e+2],r[e],o[e],i[e],s,e,e+t.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,o,a,i,s){const l=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+o[a]+o[i]-l)/t+1);switch(s){case"VALID":return o[a]=0,o[i]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return o[a]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),o[i]=n-o[a],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=a,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,o,a){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let i,s,l;t?(i=e[1],s=e[0]):(i=e[0],s=e[1]);let u=-1;if(o?(l=n[0],u=1):(l=n[1],u=0),n[u]!==s)throw new Error("dimension mismatch");if(i<=0||l<=0||s<=0)throw new Error("invalid shape specified");if(a&&!r.isValidBroadcast(a,[i,l]))throw new Error("gemm: invalid bias shape for broadcast");return[i,l,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},7771:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createGpuDataManager=void 0;const r=n(4955),o=n(1163),a=e=>16*Math.ceil(e/16);let i=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,o=t.byteOffset,i=t.byteLength,s=a(i),l=this.storageCache.get(e);if(!l)throw new Error("gpu data for uploading does not exist");if(l.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${l.originalSize}, data size=${i}`);const u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=u.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,o,i)),u.unmap();const p=this.backend.getCommandEncoder();this.backend.endComputePass(),p.copyBufferToBuffer(u,0,l.gpuData.buffer,0,s),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(u)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");const r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");const o=a(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,o)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=a(e);let s;if((t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let e=this.freeBuffers.get(n);e||(e=[],this.freeBuffers.set(n,e)),s=e.length>0?e.pop():this.backend.device.createBuffer({size:n,usage:t})}else s=this.backend.device.createBuffer({size:n,usage:t});const l={id:i++,type:o.GpuDataType.default,buffer:s};return this.storageCache.set(l.id,{gpuData:l,originalSize:e}),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${l.id}`)),l}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e){const t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");const n=this.backend.getCommandEncoder();this.backend.endComputePass();const r=a(t.originalSize),o=this.backend.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});return n.copyBufferToBuffer(t.gpuData.buffer,0,o,0,r),this.backend.flush(),new Promise((e=>{o.mapAsync(GPUMapMode.READ).then((()=>{const t=o.getMappedRange().slice(0);o.destroy(),e(t)}))}))}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(const e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map,this.freeBuffers=new Map}}t.createGpuDataManager=(...e)=>new s(...e)},8510:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const i=n(1868),s=a(n(504)),l=n(513),u=n(9770),c=n(7640),p=n(8856),d=n(8405),h=n(9218),f=n(4271),g=n(1798),_=n(2915),m=n(1522),b=a(n(5262)),y=n(6031),w=n(4566),x=n(8906),v=n(5101),T=n(6198),k=n(2067),S=n(8699),$=n(2625),P=a(n(9302));t.WEBGPU_OP_RESOLVE_RULES=new Map([["Abs",[P.abs]],["Acos",[P.acos]],["Acosh",[P.acosh]],["Add",[s.add]],["ArgMax",[i.argMax,i.parseArgMinMaxAttributes]],["ArgMin",[i.argMin,i.parseArgMinMaxAttributes]],["Asin",[P.asin]],["Asinh",[P.asinh]],["Atan",[P.atan]],["Atanh",[P.atanh]],["AveragePool",[b.averagePool,b.parseAveragePoolAttributes]],["Cast",[P.cast,P.parseCastAttributes]],["Ceil",[P.ceil]],["ClipV10",[P.clipV10]],["Clip",[P.clip]],["Concat",[l.concat,l.parseConcatAttributes]],["Conv",[u.conv,u.parseConvAttributes]],["ConvTranspose",[c.convTranspose,c.parseConvTransposeAttributes]],["Cos",[P.cos]],["Cosh",[P.cosh]],["Div",[s.div]],["Elu",[P.elu,P.parseAlphaAttributes]],["Equal",[s.equal]],["Erf",[P.erf]],["Exp",[P.exp]],["Expand",[p.expand]],["Floor",[P.floor]],["Gather",[d.gather,d.parseGatherAttributes]],["GatherElements",[h.gatherElements,h.parseGatherElementsAttributes]],["Gelu",[P.gelu]],["Gemm",[f.gemm,f.parseGemmAttributes]],["GlobalAveragePool",[b.globalAveragePool,b.parseGlobalAveragePoolAttributes]],["GlobalMaxPool",[b.globalMaxPool,b.parseGlobalMaxPoolAttributes]],["Greater",[s.greater]],["GreaterOrEqual",[s.greaterOrEqual]],["InstanceNormalization",[g.instanceNorm,g.parseInstanceNormAttributes]],["LayerNormalization",[_.layerNorm,_.parseLayerNormAttributes]],["LeakyRelu",[P.leakyRelu,P.parseAlphaAttributes]],["Less",[s.less]],["LessOrEqual",[s.lessOrEqual]],["Log",[P.log]],["MatMul",[m.matMul]],["MaxPool",[b.maxPool,b.parseMaxPoolAttributes]],["Mul",[s.mul]],["Neg",[P.neg]],["Not",[P.not]],["Pow",[s.pow]],["Reciprocal",[P.reciprocal]],["ReduceMin",[y.reduceMin,y.parseReduceAttributes]],["ReduceMean",[y.reduceMean,y.parseReduceAttributes]],["ReduceMax",[y.reduceMax,y.parseReduceAttributes]],["ReduceSum",[y.reduceSum,y.parseReduceAttributes]],["ReduceProd",[y.reduceProd,y.parseReduceAttributes]],["ReduceL1",[y.reduceL1,y.parseReduceAttributes]],["ReduceL2",[y.reduceL2,y.parseReduceAttributes]],["ReduceLogSum",[y.reduceLogSum,y.parseReduceAttributes]],["ReduceLogSumExp",[y.reduceLogSumExp,y.parseReduceAttributes]],["ReduceSumSquare",[y.reduceSumSquare,y.parseReduceAttributes]],["Relu",[P.relu]],["Resize",[w.resize,w.parseResizeAttributes]],["Sigmoid",[P.sigmoid]],["Sin",[P.sin]],["Sinh",[P.sinh]],["Slice",[v.slice,v.parseSliceAttributes]],["SkipLayerNormalization",[x.skipLayerNorm,x.parseSkipLayerNormAttributes]],["Split",[k.split,k.parseSplitAttributes]],["Sqrt",[P.sqrt]],["Softmax",[T.softmax,T.parseSoftmaxAttributes]],["Sub",[s.sub]],["Tan",[P.tan]],["Tanh",[P.tanh]],["ThresholdedRelu",[P.thresholdedRelu,P.parseAlphaAttributes]],["Tile",[S.tile]],["Transpose",[$.transpose,$.parseTransposeAttributes]]])},1427:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>"",t.biasActivationSnippet=(e,t)=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `},9456:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(4955),o=n(6952),a=n(1163),i=n(1427),s=n(4085),l=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,u,c,p,d,h,f)=>{const g="NHWC"===n.format,_=g?e[0].dims[3]:e[0].dims[1],m=u[0],b=g?u[2]:u[3],y=g?u[1]:u[2],w=g?u[3]:u[1],x=((_%4==0||_%3==0)&&g||b%4==0&&!g)&&w%4==0,v=g?w:b*y,T=g?b*y:w,k=x?[8,8,1]:[v<=4?4:16,v>4&&T<=4?4:16,1],S=x?[4,4,1]:[v<=4?1:2,v>4&&T<=4?1:2,1],$=[Math.ceil(v/k[0]/S[0]),Math.ceil(T/k[1]/S[1]),Math.ceil(m/k[2]/S[2])];(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${$}`));const P=x?g&&_%4!=0?3:4:S[0],A=k[1]*S[1],O=k[0]*S[0],M=Math.max(k[0]*P,k[1]),I=c%A==0,C=p%O==0,E=d%M==0,D=x?[P,4,4]:[1,1,1],F=[`@group(0) @binding(0) var<storage, read> x: array<${x&&4===P?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${x?"vec4<f32>":"f32"}>;`];let R=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${x?"vec4<f32>":"f32"}) {\n        result[flatIndex] = ${x?"vec4<f32>":"f32"}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${x?"vec4<f32>":"f32"}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${x?"/ 4":""}, value);\n      }`;return h&&(F.push(`@group(0) @binding(2) var<storage, read> bias: array<${x?"vec4<f32>":"f32"}>;`),R+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${x?"vec4<f32>":"f32"} {\n          return bias[coords.${g?"w":"y"}${x?"/ 4":""}];\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:u,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:$[0],y:$[1],z:$[2]}),getShaderSource:()=>`\n        ${s.utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${F.join("")}\n        @group(0) @binding(${F.length}) var<storage, read_write> result: array<${x?"vec4<f32>":"f32"}>;\n        //@group(0) @binding(${F.length+1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\n        const outShape : vec4<i32> = vec4<i32>(${u.join(",")});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${o.ShapeUtil.computeStrides(u).slice(0,3).join(",")});\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\n        const dimAOuter : i32 = ${c};\n        const dimBOuter : i32 = ${p};\n        const dimInner : i32 = ${d};\n        ${R}\n        ${((e,t,n,r,o=!1,a,s=!1,l=4,u=4,c=4)=>{const p=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",d=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",h=e?"xShape[1]":"xShape[2]",f=e?"xShape[2]":"xShape[3]",g=e?"row":"col",_=e?"col":"row",m=`\n    let inChannels = wShape[2];\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\n    let outRow = ${g} / outWidth;\n    let outCol = ${g} % outWidth;\n\n    let WRow = ${_} / (filterDims[1] * inChannels);\n    let WCol = ${_} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${_} % inChannels;\n    var resData = ${(0,i.typeSnippet)(l)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${f}) {\n      ${p}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}\n    }\n    return resData;`,b=e?t&&r?`\n    let col = colIn * ${l};\n    ${m}`:`\n    let col = colIn * ${l};\n    if (row < dimAOuter && col < dimInner) {\n      ${m}\n    }\n    return ${(0,i.typeSnippet)(l)}(0.0);`:r&&n?`\n    let col = colIn * ${l};\n    ${m}`:`\n    let col = colIn * ${l};\n    if (row < dimInner && col < dimBOuter) {\n      ${m}\n    }\n    return ${(0,i.typeSnippet)(l)}(0.0);`,y=`${(e=>{switch(e){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}`,w=(0,i.typeSnippet)(c),x=e?(0,i.typeSnippet)(l):(0,i.typeSnippet)(u),v=e?(0,i.typeSnippet)(u):(0,i.typeSnippet)(l);return`\n    ${(0,i.activationFnSnippet)(a,s,4===c,4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${x} {\n      ${e?b:y}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?y:b}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n      let col = colIn * ${c};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\n      ${d}\n      ${(0,i.biasActivationSnippet)(o,a)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`})(g,I,C,E,h,void 0,!1,D[0],D[1],D[2])}\n            ${x?(0,l.makeMatMulPackedVec4Source)(S,k,void 0,!g,M):(0,l.makeMatMulPackedSource)(S,k,void 0,!g,M,!1,void 0,f)}`})}},6514:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createConvTranspose2DProgramInfo=void 0;const r=n(4955),o=n(6952),a=n(1163),i=n(2075);t.createConvTranspose2DProgramInfo=(e,t,n,s)=>{const l=e.length>2,u=n.outputShape,c=o.ShapeUtil.size(u),p=[Math.ceil(c/64),1,1];return(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${p}`)),Object.assign(Object.assign({},t),{outputs:[{dims:s?s(u):u,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:p[0],y:p[1],z:p[2]}),getShaderSource:t=>((e,t,n,r,a,s,l=!1)=>{const u="NHWC"===n.format,c=u?1:2,p=u?2:3,d=u?3:1,h=o.ShapeUtil.size(r),f=l?2:1,g=n.group,_=t[1].dims,m=_[0]/g,b=_[1];let y=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${l?"vec4<f32>":"f32"}) {\n    result[flatIndex] = ${l?"vec4<f32>":"f32"}(value);\n  }`;a&&(y+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${l?"vec4<f32>":"f32"} {\n      return bias[coords.${u?"w":"y"}${l?"/ 4":""}];\n    }`);const w=l?4:1,x=(0,i.inputVariable)("W",t[1].dataType,t[1].dims,w),v=(0,i.inputVariable)("Dy",t[0].dataType,t[0].dims,w),T=[v,x];a&&T.push((0,i.inputVariable)("bias",t[2].dataType,[r[d]],w));const k=(0,i.outputVariable)("result",t[0].dataType,r,w),S=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${f};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<f32>, ${f}>;\n        for (var i = 0; i < ${f}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\n          var dyR = (f32(dyCorner.x) + f32(wR)) / f32(strides.x);\n          let wRPerm = filterDims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(outBackprop[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\n            let dyC = (f32(dyCorner.y) + f32(wC)) / f32(strides.y);\n            let dyC2 = (f32(dyCorner.y) + 1.0 + f32(wC)) / f32(strides.y);\n            let wCPerm = filterDims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= f32(outBackprop[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${v.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${v.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = outBackprop[${d}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${v.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = outBackprop[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${x.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${v.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${f}; i = i + 1) {\n          let value = dotProd[i] + ${a?"bias[c+i]":"0.0"};\n          ${k.set("batch","r","c + i","d1","value")};\n        }\n      }`,$=`\n          let outputIndices = ${k.offsetToIndices("global_idx")};\n          let batch = ${k.indicesGet("outputIndices",0)};\n          let d1 = ${k.indicesGet("outputIndices",d)};\n          let r = ${k.indicesGet("outputIndices",c)};\n          let c = ${k.indicesGet("outputIndices",p)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / ${b};\n          let wOutChannel = d1 - groupId * ${b};\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = 0.0;\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\n            if (wR % dilations.x != 0) {\n              continue;\n            }\n            let dyR = (f32(dyRCorner) + f32(wR)) / f32(strides[0]);\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\n            if (dyR < 0.0 || dyR >= f32(outBackprop[${c}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\n              if (wC % dilations.y != 0) {\n                continue;\n              }\n              let dyC = (f32(dyCCorner) + f32(wC)) / f32(strides.y);\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\n              if (dyC < 0.0 || dyC >= f32(outBackprop[${p}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n\n              for (var d2: u32 = 0; d2 < ${m}; d2 = d2 + 1) {\n                let inputChannel = groupId * ${m} + d2;\n                let xValue = ${u?v.get("batch","idyR","idyC","inputChannel"):v.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${x.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n              }\n            }\n          }\n          let value = dotProd + ${a?"bias[d1]":"0.0"};\n          ${k.setByOffset("global_idx","value")};\n        `;return`\n  ${e.declareVariables(...T,k)}\n  ${y}\n  const outShape : vec4<u32> = vec4<u32>(${r.join(",")});\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\n  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});\n  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[u?1:2]}, ${n.kernelShape[u?2:3]});\n  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\n          ${n.dilations[0]<=1?0:(n.kernelShape[u?1:2]-1)*(n.dilations[0]-1)},\n          ${n.dilations[1]<=1?0:(n.kernelShape[u?2:3]-1)*(n.dilations[1]-1)});\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,\n                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)};\n  ${l?S:$}}`})(t,e,n,u,l,1===p[1]&&1===p[2])})}},4085:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.utilFunctions=void 0,t.utilFunctions="\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n"},158:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createMatmulProgramInfo=t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0;const r=n(6952),o=n(1163),a=n(2075),i=n(3997),s=n(1427);t.makeMatMulPackedVec4Source=(e,t,n,r=!1,o=32,a=!1,i=32)=>{const s=t[1]*e[1],l=t[0]*e[0],u=r?s:o,c=r?o:s,p=u/t[0],d=o/t[1];if((!r||4!==p||4!==e[1])&&(r||3!==p&&4!==p)||u%t[0]!=0||o%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${r} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${c}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${o}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${s};\n\n  let numTiles = ${a?`${Math.ceil(i/o)}`:"(dimInner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${d};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `)(r,n)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${((e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`)(r,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`};const l=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `;t.makeMatMulPackedSource=(e,t,n,r=!1,o=32,a=!1,i=32,s=!1)=>{const u=e[1]*t[1],c=e[0]*t[0],p=r?u:o,d=r?o:u;if(d%t[1]!=0||p%t[0]!=0||o%t[1]!=0)throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);const h=d/t[1],f=p/t[0],g=o/t[1],_=s?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${c};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${t[0]}) {\n          ${l(r,n)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${n?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${g};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${l(r,n)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${n?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(r)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<f32, ${p}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${c}>, ${o}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}\n    let numTiles = ${a?`${Math.ceil(i/o)}`:"(dimInner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${_}\n  }\n`},t.createMatmulProgramInfo=(e,n,l,u,c)=>{const p=n[0].dims,d=n[1].dims,h=p.slice(0,-2),f=d.slice(0,-2),g=c?c.slice(0,-2):u.slice(0,-2),_=(0,a.inputVariable)("batchDims",n[0].dataType,g),m=[(0,a.inputVariable)("batchADims",n[0].dataType,h),(0,a.inputVariable)("batchBDims",n[0].dataType,f),_],b=r.ShapeUtil.size(g),y=p[p.length-2],w=p[p.length-1],x=d[d.length-1],v=w%4==0&&x%4==0,{activationFunction:T,applyActivation:k}=(0,i.getActicationSnippet)(l),S=y<=8?[4,1,1]:[4,4,1],$=[8,8,1],P=[Math.ceil(x/$[0]/S[0]),Math.ceil(y/$[1]/S[1]),Math.ceil(b/$[2]/S[2])],A=v?4:1,O=(0,a.inputVariable)("a",n[0].dataType,[...h,y,w/A],A),M=(0,a.inputVariable)("b",n[1].dataType,[...f,w,x/A],A),I=(0,a.outputVariable)("result",n[0].dataType,[b,y,x/A],A);m.push(O),m.push(M),m.push(I);const C=[O,M],E=n.length>2,D=((e,t,n,r)=>{const o=r[0],i=r[1],l=r[2],u=r[3],c=r[4],p=r[5],d=(0,a.getBroadcastDims)(o.shape,l.shape),h=(0,a.getBroadcastDims)(i.shape,l.shape);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${(0,s.typeSnippet)(e)} {\n      var value = ${(0,s.typeSnippet)(e)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimAOuter && col < dimInner)\n      {\n        ${(()=>{const e=u.shape.length,t=l.shape.length;let n=`var aIndices: ${u.type.indices};`;for(let r=e-2-1,o=t-1;r>=0;r--,o--)n+=`\naIndices[${r}] = ${t>1?`batchIndices[${o}]`:"batchIndices"};`;return d.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${u.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${(0,s.typeSnippet)(e)} {\n      var value = ${(0,s.typeSnippet)(e)}(0.0);\n      let col = colIn * ${e};\n      if(row < dimInner && col < dimBOuter)\n      {\n        ${(()=>{const e=c.shape.length,t=l.shape.length;let n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,o=t-1;r>=0;r--,o--)n+=`\nbIndices[${r}] = ${t>1?`batchIndices[${o}]`:"batchIndices"};`;return h.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${(0,s.typeSnippet)(e)}) {\n      let col = colIn * ${e};\n      if (row < dimAOuter && col < dimBOuter) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?"value = value + bias[colIn];":""}\n        ${n}\n        ${p.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `})(A,E,k,m);return E&&C.push((0,a.inputVariable)("bias",n[2].dataType,[x/A],A)),Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:n[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const dimAOuter: i32 = ${y};\n  const dimBOuter: i32 = ${x};\n  const dimInner: i32 = ${w};\n  ${e.declareVariables(...C,I)}\n  ${D}\n  ${T}\n  ${v?(0,t.makeMatMulPackedVec4Source)(S,$,_):(0,t.makeMatMulPackedSource)(S,$,_)}\n                   ${_.impl()}`,dispatchGroup:()=>({x:P[0],y:P[1],z:P[2]})})}},1868:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseArgMinMaxAttributes=t.argMax=t.argMin=void 0;const r=n(387),o=n(1163),a=n(6031),i=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},s=(e,t,n,i)=>{const s=1===e.length?n:((e,t)=>(0,r.createAttributeWithCacheKey)({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}))(0,n),l=s.cacheKey+e.map((e=>e.dims.toString())).join("_"),u={name:t,inputTypes:[o.GpuDataType.default],cacheHint:l};return Object.assign(Object.assign({},u),{get:()=>(0,a.createReduceProgramInfo)(u,[e[0]],i,[s.axis],7,s.keepDims)})};t.argMin=(e,t)=>{i(e.inputs),e.compute(s(e.inputs,"ArgMin",t,((e,n,r)=>{const o=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&o.push(`inputIndices[${t}] = 0;`);return[`${o.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.argMax=(e,t)=>{i(e.inputs),e.compute(s(e.inputs,"argMax",t,((e,n,r)=>{const o=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&o.push(`inputIndices[${t}] = 0;`);return[`${o.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByOffset("inputOffset")};\n         bestIndex = i32(lastIndex);\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.parseArgMinMaxAttributes=e=>(0,r.createAttributeWithCacheKey)(e)},504:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.lessOrEqual=t.greaterOrEqual=t.less=t.greater=t.sub=t.pow=t.mul=t.equal=t.div=t.add=void 0;const r=n(6952),o=n(1163),a=n(2075),i=(e,t,n,i,s,l)=>{const u={name:t,inputTypes:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,i,s,l=t.dataType)=>{var u,c;const p=!r.ShapeUtil.areEqual(t.dims,n.dims);let d=t.dims,h=r.ShapeUtil.size(t.dims),f=!1;if(p){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");d=e,h=r.ShapeUtil.size(d);let o=1;for(let e=1;e<d.length;e++){const r=null!==(u=t.dims[t.dims.length-e])&&void 0!==u?u:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;o*=r}o%4==0&&(f=!0)}else f=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,o,i,s,l,u,c,p,d)=>{const h=r.ShapeUtil.size(o),f=Math.ceil(h/4);let g,_;"string"==typeof l?g=_=(e,t)=>`${l}((${e}),(${t}))`:"function"==typeof l?g=_=l:(g=l.scalar,_=l.vector);let m="";const b=(0,a.outputVariable)("outputData",p,o,4),y=(0,a.inputVariable)("aData",u,t,4),w=(0,a.inputVariable)("bData",c,n,4);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const a=b.indicesGet("outputIndices",r+o.length-e.length);n.push(`${t[r]}u * (${a} % ${e[r]}u)`)}return n.length>0?n.join("+"):"0u"};m=`\n          fn calcOffsetA(outputIndices: ${b.type.indices}) -> u32 {\n            return ${e(t)};\n          }\n\n          fn calcOffsetB(outputIndices: ${b.type.indices}) -> u32 {\n            return ${e(n)};\n          }\n        `}let x;if(i)x=s?`\n            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};\n            let offsetA = calcOffsetA(outputIndices);\n            let offsetB = calcOffsetB(outputIndices);\n            ${b.setByOffset("global_idx",_(y.getByOffset("offsetA / 4u"),w.getByOffset("offsetB / 4u")))}\n          `:b.setByOffset("global_idx",_(y.getByOffset("global_idx"),w.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");const e=(e,t,n="")=>{const r=`aData[indexA${t}][componentA${t}]`,o=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${b.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = calcOffsetA(outputIndices${t});\n            let offsetB${t} = calcOffsetB(outputIndices${t});\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${g(r,o)});\n          `};x=9===p?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.declareVariables(y,w,b)}\n\n        ${null!=d?d:""}\n        ${m}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n        ${x}\n      }`})(e,t.dims,n.dims,d,f,p,i,t.dataType,n.dataType,l,s),outputs:[{dims:d,dataType:l,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(h/64/(f?4:1))})})})(u,e[0],e[1],n,i,l)})};t.add=e=>{e.compute(i(e.inputs,"Add",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(i(e.inputs,"Div",((e,t)=>`${e}/${t}`)))},t.equal=e=>{e.compute(i(e.inputs,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9))},t.mul=e=>{e.compute(i(e.inputs,"Mul",((e,t)=>`${e}*${t}`)))},t.pow=e=>{const t=(0,a.inputVariable)("input",e.inputs[0].dataType,e.inputs[0].dims).type.value,n="i32"===t?"round":"";e.compute(i(e.inputs,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${n}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `))},t.sub=e=>{e.compute(i(e.inputs,"Sub",((e,t)=>`${e}-${t}`)))},t.greater=e=>{e.compute(i(e.inputs,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9))},t.less=e=>{e.compute(i(e.inputs,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9))},t.greaterOrEqual=e=>{e.compute(i(e.inputs,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9))},t.lessOrEqual=e=>{e.compute(i(e.inputs,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9))}},2075:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getBroadcastDims=t.createShaderHelper=t.outputVariable=t.inputVariable=t.tensorTypeToWsglValueType=t.tensorTypeToWsglStorageType=t.WORKGROUP_SIZE=void 0;const r=n(6952);t.WORKGROUP_SIZE=64;const o=(e,t)=>{switch(e){case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}};t.tensorTypeToWsglStorageType=(e,t=1)=>{const n=o(e,t);return"string"==typeof n?n:n[0]},t.tensorTypeToWsglValueType=(e,t=1)=>{const n=o(e,t);return"string"==typeof n?n:n[1]};const a=(e,t,n,a,i)=>{const s=n.length,l=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,u=o(t,i),c="string"==typeof u?u:u[1],p="string"==typeof u?u:u[0],d={indices:l,value:c,storage:p,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,f={offsetToIndices:!1,indicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},g=r.ShapeUtil.computeStrides(n);let _="";for(let e=0;e<s-1;e++)_+=`\n    let dim${e} = current / ${g[e]}u;\n    let rest${e} = current % ${g[e]}u;\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;_+=`indices[${s-1}] = current;`;const m=s<2?"":`\n  fn o2i_${e}(offset: u32) -> ${d.indices} {\n    var indices: ${d.indices};\n    var current = offset;\n    ${_}\n    return indices;\n  }`,b=[];if(s>=2)for(let e=s-1;e>=0;e--)b.push(`${g[e]}u * (indices[${e}])`);const y=s<2?"":`\n  fn i2o_${e}(indices: ${d.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,w=(...e)=>0===s?"0u":`${d.indices}(${e.map(h).join(",")})`,x=(t,n)=>(()=>{if(d.storage===d.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===d.storage&&"i32"===d.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===d.storage&&"u32"===d.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===d.storage&&"vec4<bool>"===d.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),v=t=>(()=>{if(d.storage===d.value)return`${e}[${t}]`;if("vec2<u32>"===d.storage&&"i32"===d.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===d.storage&&"u32"===d.value)return`u32(${e}[${t}].x)`;if("u32"===d.storage&&"vec4<bool>"===d.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),T=s<2?"":`\n  fn get_${e}ByIndices(indices: ${d.indices}) -> ${c} {\n    return ${e}[i2o_${e}(indices)];\n  }`,k=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${c} {\n    return get_${e}ByIndices(${w(r)});\n  }`})(),S=s<2?"":`\n  fn set_${e}ByIndices(indices: ${d.indices}, value: ${c}) {\n    ${x(`i2o_${e}(indices)`,"value")}\n  }`,$=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${c}) {\n    set_${e}ByIndices(${w(r)}, value);\n  }`})();return{impl:()=>{const e=[];return f.offsetToIndices&&e.push(m),f.indicesToOffset&&e.push(y),f.set&&e.push($),f.setByIndices&&e.push(S),f.get&&e.push(k),f.getByIndices&&e.push(T),e.join("\n")},type:d,offsetToIndices:t=>(f.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(f.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),indices:w,indicesGet:(e,t)=>s<2?`${e}`:`${e}[${t}]`,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${e}[${t}]=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);const n=t[s];if("string"!=typeof n)throw new Error("value must be string");const r=t.slice(0,s).map(h).join(",");return 0===s?x("0u",n):1===s?x(r[0],n):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:x,setByIndices:(t,n)=>s<2?x(t,n):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);const n=t.map(h).join(",");return 0===s?v("0u"):1===s?v(n[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:v,getByIndices:t=>s<2?v(t):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:a?"input":"output",name:e,shape:n}};t.inputVariable=(e,t,n,r=1)=>a(e,t,n,!0,r),t.outputVariable=(e,t,n,r=1)=>a(e,t,n,!1,r);class i{constructor(e){this.normalizedDispatchGroup=e,this.indicesHelpers=[]}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n="number"==typeof e?e:e[0],r="number"==typeof e?1:e[1],o="number"==typeof e?1:e[2],a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${o})\n  fn main(${a?"@builtin(global_invocation_id) global_id : vec3<u32>":"@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>"}) {\n    ${a?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*o}u + local_index;`}\n  `}declareVariable(e,t){this.indicesHelpers.push(e);const n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){let t=0;return e.filter((e=>r.ShapeUtil.size(e.shape)>0)).map((e=>this.declareVariable(e,t++))).join("\n")}get additionalImplementations(){return this.indicesHelpers.map((e=>e.impl())).join("\n")}}t.createShaderHelper=e=>new i(e),t.getBroadcastDims=(e,t)=>{const n=e.length,r=[];for(let o=0;o<n;o++){const a=n-1-o,i=e[a]||1;(t[t.length-1-o]||1)>1&&1===i&&r.unshift(a)}return r}},513:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.concat=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].dataType,n=e[0].dims.length;for(const r of e){if(r.dataType!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}})(e.inputs),e.compute(((e,t)=>{const n=(o=e.length,s=t.cacheKey,{name:"Concat",inputTypes:Array(o).fill(a.GpuDataType.default),cacheHint:s});var o,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const o=t[0].dims.slice();if(n>=o.length||n<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");const s=n<0?o.length+n:n,l=o.slice(0);for(let e=1;e<t.length;e++){const n=t[e].dims.slice();for(let e=0;e<o.length;e++)if(e===s)l[s]+=n[e];else if(o[e]!==n[e])throw new Error("non concat dimensions must match")}const u=r.ShapeUtil.size(l),c=new Array(t.length),p=new Array(t.length),d=t[0].dataType;let h=0;for(let e=0;e<t.length;++e)h+=t[e].dims[s],c[e]=h,p[e]=(0,i.inputVariable)(`input${e}`,d,t[e].dims);const f=(0,i.outputVariable)("output",d,l),g=f.indicesGet("indices",s);return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>{return`\n  ${e.declareVariables(...p,f)}\n\n  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map((e=>`${e}u`)).join(",")});\n  ${t=c.length,`\n  fn calculateInputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${t}u;\n  }`}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n\n    var indices = ${f.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${g});\n    if (inputIndex != 0u) {\n      ${g} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${((e,t)=>{const n=e.length,r=[];for(let o=0;o<n;++o){const a=t.setByOffset("global_idx",e[o].getByIndices("indices"));1===n?r.push(a):0===o?r.push(`if (inputIndex == ${o}u) { ${a} }`):o===n-1?r.push(`else { ${a} }`):r.push(`else if (inputIndex == ${o}) { ${a} }`)}return r.join("\n")})(p,f)}\n  }`;var t},dispatchGroup:()=>({x:Math.ceil(u/64)})})})(n,e,t.axis)})})(e.inputs,t))},t.parseConcatAttributes=e=>(0,o.createAttributeWithCacheKey)({axis:e.axis})},9192:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(6952),o=n(1163),a=n(2075),i=n(9770),s=n(3997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const l=(u=e.length>2,c=t.cacheKey,{name:"GroupedConv",inputTypes:u?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:c});var u,c;return Object.assign(Object.assign({},l),{get:()=>((e,t,n,l)=>{const u=e.length>2,c=u?"value += b[output_channel];":"",p=e[0].dims,d=e[1].dims,h=d[0]/n.group,{activationFunction:f,applyActivation:g}=(0,s.getActicationSnippet)(n),_="NHWC"===n.format,m=(0,i.calculateOutputShape)(p,d,n.dilations,n.pads,n.strides,_),b=r.ShapeUtil.size(m),y=(0,a.outputVariable)("output",e[0].dataType,m),w=(0,a.inputVariable)("x",e[0].dataType,p),x=(0,a.inputVariable)("w",e[1].dataType,d),v=[w,x];return u&&v.push((0,a.inputVariable)("b",e[2].dataType,e[2].dims)),Object.assign(Object.assign({},t),{outputs:[{dims:l?l(m):m,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\n\n  ${e.declareVariables(...v,y)}\n\n  ${f}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\n\n    let outputIndices = ${y.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${_?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${_?1:2}], outputIndices[${_?2:3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${h}u;\n\n    var value: ${y.type.value} = ${y.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${d[1]}u; wInChannel++) {\n      let input_channel = group_id * ${d[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${d[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${p[_?1:2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${d[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${p[_?2:3]}u) {\n            continue;\n          }\n\n          let xVal = ${_?w.get("batch","xHeight","xWidth","input_channel"):w.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${x.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${c}\n    ${g}\n    ${y.setByOffset("global_idx","value")}\n  }`,dispatchGroup:()=>({x:Math.ceil(b/64)})})})(e,l,t,n)})}},7640:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.convTranspose=t.parseConvTransposeAttributes=void 0;const r=n(387),o=n(1163),a=n(6514),i=n(3997),s=(e,t,n,r,o,a)=>(e-1)*t+n+(r-1)*o+1-a,l=(e,t,n,r,o)=>{const a=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=a,n[o]=e-a):"SAME_LOWER"===t&&(n[r]=e-a,n[o]=a)},u=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),0)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}const r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);const o=e.pads.slice(),a=e.outputShape.slice(),i=e.outputPadding.slice(),u=t[0].dims;let c=e.dilations.slice();if(0===c.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;c=new Array(e).fill(1)}let p=e.strides.slice();if(0===p.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;p=new Array(e).fill(1)}((e,t,n,r,o,a,i,u,c,p)=>{const d=e.length-2,h=0===p.length;if(0===c.length)for(let e=0;e<d;++e)c.push(0);const f=e[0],g=t[u?3:1]*o;for(let o=0,f=e.length-d-(u?1:0);o<d;++o,++f){const u=e[f],g=h?u*i[o]:p[o],_=s(u,i[o],a[o],t[f],n[o],g);l(_,r,a,o,o+d),h&&p.push(i[o]*(u-1)+c[o]+(t[f]-1)*n[o]+1-a[o]-a[o+d])}p.splice(0,0,f),p.splice(u?3:1,0,g)})(u,n,c,e.autoPad,e.group,o,p,r,i,a);const d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:i,outputShape:a,dilations:c,strides:p,cacheKey:e.cacheKey}),d};t.parseConvTransposeAttributes=e=>{const t=(0,i.parseInternalActivationAttributes)(e),n=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][void 0===e.autoPad?0:e.autoPad],a=e.dilations,s=e.group,l=e.kernelShape,u=e.pads,c=e.strides,p=e.wIsConst(),d=e.outputPadding,h=e.outputShape;return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:o,format:n,dilations:a,group:s,kernelShape:l,outputPadding:d,outputShape:h,pads:u,strides:c,wIsConst:p},t))};const c=(e,t,n)=>{const r=(i=3===e.length,s=t.cacheKey,{name:"ConvTranspose2D",inputTypes:i?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:s});var i,s;return Object.assign(Object.assign({},r),{get:()=>(0,a.createConvTranspose2DProgramInfo)(e,r,t,n)})};t.convTranspose=(e,t)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("ConvTranspose input(bias) should be float tensor")})(e.inputs,t),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===r.length&&r.push(e.inputs[2]);let o=t.kernelShape;0!==o.length&&0!==o[0]||(o=[e.inputs[1].dims[2]]);let a=t.dilations;0!==a.length&&0!==a[0]||(a=[1]);let i=t.strides;0!==i.length&&0!==i[0]||(i=[1]);let s=t.pads;0===s.length&&(s=[0,0]),s=[0,s[0],0,s[1]],i=[1].concat(i),a=[1].concat(a),o=[1].concat(o);const l=u(Object.assign(Object.assign({},t),{pads:s,strides:i,dilations:a,kernelShape:o}),r);e.compute(c(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))})(e,t):((e,t,n)=>{const r=u(n,t);e.compute(c(t,r))})(e,e.inputs,t)}},9770:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(6952),o=n(387),a=n(9192),i=n(3822),s=n(3997),l=n(1522),u=n(2625);t.calculateOutputShape=(e,t,n,r,o,a)=>{const i=e[0],s=e.slice(a?1:2,a?3:4),l=s.length,u=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),p=s.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-c[t]+o[t])/o[t])));return p.splice(0,0,i),p.splice(a?3:1,0,u),p};const c=(0,o.createAttributeWithCacheKey)({perm:[2,3,1,0]}),p=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const o=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,o,"NHWC"===e.format,e.autoPad);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:o,cacheKey:e.cacheKey}),a};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],a=e.dilations,i=e.group,l=e.kernel_shape,u=e.pads,c=e.strides,p=e.w_is_const();return(0,o.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:a,group:i,kernelShape:l,pads:u,strides:c,wIsConst:p},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("Conv input(bias) should be float tensor")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const o=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),s=[1].concat(t.dilations),l=[1].concat(t.kernelShape),u=p(Object.assign(Object.assign({},t),{pads:o,strides:i,dilations:s,kernelShape:l}),r);e.compute((0,a.createGroupedConvProgramInfoLoader)(r,u,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var o,s;const d=p(r,n),h=3===n.length,f="NHWC"===r.format;if(!f||1!==r.group)return void e.compute((0,a.createGroupedConvProgramInfoLoader)(n,d));const g=n[0].dims[f?1:2],_=n[0].dims[f?2:3],m=n[0].dims[f?3:1],b=n[1].dims[2],y=n[1].dims[3],w=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,d.pads,r.strides,f),x=w[f?1:2],v=w[f?2:3],T=w[f?3:1],k=w[0];if(f&&b===g&&y===_&&"VALID"===r.autoPad||1===b&&1===y&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&0===r.pads[0]&&0===r.pads[1]){const t=null!==(o=e.kernelCustomData.wT)&&void 0!==o?o:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:c.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],c.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=t);const a=[];a.push(n[0].reshape([k,g*_,m])),a.push(t.reshape([1,m,T])),h&&a.push(n[2]);const i=[k,x*v,T];return void e.compute((0,l.createMatmulProgramInfoLoader)(a,d,w,i),{inputs:a})}const S=f?x*v:T,$=f?T:x*v,P=b*y*m,A=null!==(s=e.kernelCustomData.wT)&&void 0!==s?s:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:c.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],c.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);const O=[n[0],A];h&&(f||1!==n[2].dims.length?O.push(n[2]):O.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,i.createConv2DMatMulProgramInfoLoader)(O,d,w,S,$,P,h,!0),{inputs:O})})(e,e.inputs,n)}},3822:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(1163),o=n(9456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,a,i,s,l,u)=>{const c=((e,t)=>({name:"Conv2DMatMul",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(l,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,o.createConv2DMatMulProgramInfo)(e,c,t,n,a,i,s,l,u)})}},8856:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.expand=t.expandProgramMetadata=void 0;const r=n(6952),o=n(1163),a=n(2075);t.expandProgramMetadata={name:"Expand",inputTypes:[o.GpuDataType.default]};const i=(e,t)=>{const n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let o=0;o<t.length;++o)r.push(1===t[o]?e[o+n]:t[o]);return r};t.expand=e=>{(e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");const t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number);let r=n.length<t.length?0:n.length-t.length,o=t.length<n.length?0:t.length-n.length;for(;r<n.length&&o<t.length;++r,++o)if(n[r]!==t[o]&&1!==n[r]&&1!==t[o])throw new Error("Expand requires shape to be broadcastable to input")})(e.inputs);const n=Array.from(e.inputs[1].getBigInt64Array(),Number).toString();e.compute(Object.assign(Object.assign({},t.expandProgramMetadata),{cacheHint:n,get:()=>((e,t)=>{const n=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),l=((e,t)=>e.length>t.length?i(e,t):i(t,e))(n,s),u=r.ShapeUtil.size(l),c=t[0].dataType,p=(0,a.inputVariable)("input",c,n),d=(0,a.outputVariable)("output",c,l);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n  const inputShape = ${p.indices(...n)};\n  ${e.declareVariables(p,d)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    var inputIndices: ${p.type.indices};\n    for (var i = 0; i < ${n.length}; i++) {\n      if (${p.indicesGet("inputShape","i")} == 1) {\n        ${p.indicesSet("inputIndices","i",0)}\n      } else {\n        ${p.indicesSet("inputIndices","i",d.indicesGet("outputIndices","i + "+(l.length-n.length)))}\n      }\n    }\n    ${d.setByOffset("global_idx",p.getByIndices("inputIndices"))}\n  }`,outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(u/64)})})})(t.expandProgramMetadata,e.inputs)}),{inputs:[0]})}},3997:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(6952);t.getActicationSnippet=e=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||"";if("Clip"===t){const[n,o]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:o,clipMin:n,activationCacheKey:`${t}:${n},${o}`}}return{activation:t,activationCacheKey:t}}},9218:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.gatherElements=t.parseGatherElementsAttributes=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.parseGatherElementsAttributes=e=>(0,o.createAttributeWithCacheKey)({axis:e.axis}),t.gatherElements=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")})(e.inputs);const n={name:"GatherElements",inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const o=t[0].dims,s=t[0].dataType,l=o.length,u=r.ShapeUtil.computeStrides(o),c=r.ShapeUtil.size(o),p=t[1].dims,d=t[1].dataType,h=r.ShapeUtil.size(p),f=r.ShapeUtil.normalizeAxis(n.axis,l),g=o[f],_=p.slice(0),m=r.ShapeUtil.size(_),b=(0,i.inputVariable)("input",s,o),y=(0,i.inputVariable)("indices",d,[h]),w=(0,i.outputVariable)("output",s,_);return Object.assign(Object.assign({},e),{outputs:[{dims:_,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n      const inputStrides = array<u32, ${u.length}>(${u.map((e=>`${e}u`)).join(",")});\n      ${e.declareVariables(b,y,w)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(m)}\n\n      let outputIndices = ${w.offsetToIndices("global_idx")};\n\n      var idx = ${y.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + ${g};\n      }\n\n      var srcOffset = u32(0);\n\n      for (var i = 0; i < ${o.length}; i++) {\n        if (i == ${f}) {\n          srcOffset +=  u32(idx) * inputStrides[i];\n        } else {\n          srcOffset += ${w.indicesGet("outputIndices","i")} * inputStrides[i];\n        }\n      }\n\n      // Should never hit this with valid values in indices\n      // This is a guard against malicious data in the indices input\n      if (srcOffset < 0 || srcOffset >= ${c}) {\n        return;\n      }\n\n      output[global_idx] = input[srcOffset];\n  }`,dispatchGroup:()=>({x:Math.ceil(m/64)})})})(n,e.inputs,t))}},8405:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.gather=t.parseGatherAttributes=void 0;const r=n(6952),o=n(387),a=n(1163);t.parseGatherAttributes=e=>(0,o.createAttributeWithCacheKey)({axis:e.axis}),t.gather=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")})(e.inputs);const n={name:"Gather",inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const o=t[0].dims,i=t[1].dims,s=o.length,l=r.ShapeUtil.normalizeAxis(n.axis,s),u=o.slice(0);u.splice(l,1,...i);const c=t[0].dataType,p=r.ShapeUtil.sizeFromDimension(o,l+1),d=[7,13,11].includes(c)?2:1,h=7===t[1].dataType?2:1,f=d*p,g=r.ShapeUtil.sizeToDimension(o,l),_=r.ShapeUtil.size(i),m=r.ShapeUtil.sizeFromDimension(o,l)*d,b=_*p*d,y=o[l],w=r.ShapeUtil.size(o)*d,x=r.ShapeUtil.size(u)*d,v=g*_;return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  const N: u32 = ${_};\n  const elementSize: u32 = ${d};\n  const indicesElementSize: u32 = ${h};\n\n  @group(0) @binding(0) var<storage, read> input : array<u32>;\n  @group(0) @binding(1) var<storage, read> inputIndices : array<i32>;\n  @group(0) @binding(2) var<storage, read_write> output: array<u32>;\n\n  ${e.mainStart()}\n    let batch: u32 = global_idx / N;\n    let i: u32 = global_idx % N;\n\n    let srcOffsetBatch: u32 = batch * ${m};\n    let dstOffsetBatch: u32 = batch * ${b};\n    var idx = inputIndices[i * indicesElementSize];\n    if (idx < 0) {\n        idx = idx + ${y};\n    }\n\n    let srcOffset = srcOffsetBatch + u32(idx) * ${f};\n    let dstOffset = dstOffsetBatch + i * ${f};\n    if (srcOffset >= ${w}) {\n        return;\n    }\n    if (dstOffset >= ${x}) {\n        return;\n    }\n    for (var j: u32 = 0; j < ${f}; j++) {\n        output[dstOffset + j] = input[srcOffset + j];\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(v/64)})})})(n,e.inputs,t))}},4271:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(6952),o=n(387),a=n(1163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error("Invalid input type.");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")})(e.inputs),e.compute(((e,t)=>{const n={name:"Gemm",inputTypes:3===e.length?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const o=t[0].dims.slice(),i=t[1].dims.slice(),[s,l,u]=r.GemmUtil.getShapeOfGemmResult(o,n.transA,i,n.transB,3===t.length?t[2].dims:void 0),c=[s,l];if(!c)throw new Error("Can't use gemm on the given tensors");const p=r.ShapeUtil.size(c);let d="";n.transA&&n.transB?d="value += a[k * M + m] * b[n * K + k];":n.transA&&!n.transB?d="value += a[k * M + m] * b[k * N + n];":!n.transA&&n.transB?d="value += a[m * K + k] * b[n * K + k];":n.transA||n.transB||(d="value += a[m * K + k] * b[k * N + n];");const h="f32",f=1===n.alpha?"":"value *= alpha;",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return"0u";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,o=n[n.length-1]!==t;let a="0u";return r||(a+=`+ m * ${n[n.length-1]}u`),o||(a+="+n"),a})(s,l,t[2].dims)}];`:"",_=[`@group(0) @binding(0) var<storage, read> a : array<${h}>;`,`@group(0) @binding(1) var<storage, read> b : array<${h}>;`];return 3===t.length&&_.push(`@group(0) @binding(2) var<storage, read> c : array<${h}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  const M: u32 = ${s}u;\n  const N: u32 = ${l}u;\n  const K: u32 = ${u}u;\n  const alpha = ${h}(${n.alpha});\n  const beta = ${h}(${n.beta});\n\n  ${_.join("\n")}\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${h}>;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${h}(0);\n    for (var k: u32 = 0u; k<${u}u; k++) {\n      ${d}\n    }\n\n    ${f}\n    ${g}\n    output[global_id.x] = value;\n\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,o.createAttributeWithCacheKey)(e)},1798:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.instanceNorm=t.parseInstanceNormAttributes=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.parseInstanceNormAttributes=e=>(0,o.createAttributeWithCacheKey)({epsilon:e.epsilon,format:e.format}),t.instanceNorm=(e,t)=>{(e=>{if(!e||3!==e.length)throw new Error("instanceNorm requires 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"InstanceNormalization",inputTypes:[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey};"NHWC"===t.format?e.compute(((e,t,n)=>{const o=t[0].dims,s=o,l=r.ShapeUtil.size(s),u=o[0],c=o[o.length-1],p=r.ShapeUtil.sizeFromDimension(o,1)/c,d=(0,i.tensorTypeToWsglStorageType)(t[0].dataType),h=c*u;return Object.assign(Object.assign({},e),{outputs:[{dims:s,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  const N: u32 = ${u};\n  const H: u32 = ${p};\n  const C: u32 = ${c};\n  const normSizeTyped: ${d} = ${p};\n  const imageSize: u32 = ${p*c};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(0) var<storage, read> x : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${d}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${d}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n\n  ${e.mainStart()}\n    let currentImageNumber = global_idx / C;\n    let currentChannelNumber = global_idx % C;\n    \n    // offset is channel num * N\n    let offset = currentImageNumber * imageSize;\n    if (offset >= ${l}) { return; }\n    var mean: ${d} = 0;\n\n    for (var i: u32 = 0u; i < H; i++) {\n        mean = mean + x[offset + i * C + currentChannelNumber];\n    }\n    mean = mean / normSizeTyped;\n\n    var squaredNorm: ${d} = 0;\n    for (var i: u32 = 0u; i < H; i++) {\n        let deviation: f32 = x[offset + i * C + currentChannelNumber] - mean;\n        squaredNorm = squaredNorm + deviation * deviation;\n    }\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\n    let channelScale = invStdDev * scale[currentChannelNumber];\n    let channelShift = bias[currentChannelNumber] - mean * channelScale;\n    for (var i: u32 = 0u; i < H; i++) {\n        let currentOffset = offset + i * C + currentChannelNumber;\n        output[currentOffset] = x[currentOffset] * channelScale + channelShift;\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(h/64)})})})(n,e.inputs,t)):e.compute(((e,t,n)=>{const o=t[0].dims,s=t[1],l=t[2],u=o,c=r.ShapeUtil.size(u),p=r.ShapeUtil.sizeToDimension(o,2),d=r.ShapeUtil.sizeFromDimension(o,2),h=o[1],f=r.ShapeUtil.size(s.dims),g=l?r.ShapeUtil.size(l.dims):0;if(f!==d||l&&g!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n             Size of scale and bias (if provided) must match this. \n             Got scale size of ${f} and bias size of ${g}`);const _=(0,i.tensorTypeToWsglStorageType)(t[0].dataType);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  const C: u32 = ${h};\n  const normSize: u32 = ${d};\n  const normSizeTyped: ${_} = ${d};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(0) var<storage, read> x : array<${_}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${_}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${_}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${_}>;\n\n  ${e.mainStart()}\n    let offset = global_idx * normSize;\n    if (offset + normSize >= ${c}) { return; }\n    var mean: ${_} = 0;\n\n    for (var h: u32 = 0u; h < normSize; h++) {\n        mean = mean + x[h + offset];\n    }\n    mean = mean / normSizeTyped;\n\n    var squaredNorm: ${_} = 0;\n    for (var h: u32 = 0u; h < normSize; h++) {\n        let deviation: f32 = x[h + offset] - mean;\n        squaredNorm = squaredNorm + deviation * deviation;\n    }\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\n    let channelScale = invStdDev * scale[global_idx % C];\n    let channelShift = bias[global_idx % C] - mean * channelScale;\n    for (var j: u32 = 0; j < normSize; j++) {\n        output[j + offset] = x[j + offset] * channelScale + channelShift;\n    }\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})})(n,e.inputs,t))}},2915:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.layerNorm=t.parseLayerNormAttributes=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.parseLayerNormAttributes=e=>(0,o.createAttributeWithCacheKey)({axis:e.axis,epsilon:e.epsilon}),t.layerNorm=(e,t)=>{(e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"LayerNormalization",inputTypes:2===e.inputs.length?[a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default],cacheHint:t.cacheKey+e.outputCount.toString(10)+e.inputs.length.toString(10)};e.compute(((e,t,n,o)=>{const s=t[0].dims,l=t[1],u=t[2],c=s,p=r.ShapeUtil.size(c),d=r.ShapeUtil.normalizeAxis(n.axis,s.length),h=r.ShapeUtil.sizeToDimension(s,d),f=r.ShapeUtil.sizeFromDimension(s,d),g=r.ShapeUtil.size(l.dims),_=u?r.ShapeUtil.size(u.dims):0;if(g!==f||u&&_!==f)throw new Error(`Size of X.shape()[axis:] == ${f}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${_}`);const m=[];for(let e=0;e<s.length;++e)e<d?m.push(s[e]):m.push(1);const b=(0,i.tensorTypeToWsglStorageType)(t[0].dataType),y=o>1,w=o>2;let x=0;const v=[{dims:c,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}];return y&&v.push({dims:m,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),w&&v.push({dims:m,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),Object.assign(Object.assign({},e),{outputs:v,getShaderSource:e=>`\n  const normSize: u32 = ${f};\n  const normSizeTyped: ${b} = ${f};\n  const epsilon: f32 = ${n.epsilon};\n\n  @group(0) @binding(${x++}) var<storage, read> x : array<${b}>;\n  @group(0) @binding(${x++}) var<storage, read> scale : array<${b}>;\n  ${u?`@group(0) @binding(${x++}) var<storage, read> bias : array<${b}>;`:""}\n  @group(0) @binding(${x++}) var<storage, read_write> output : array<${b}>;\n  ${y?`@group(0) @binding(${x++}) var<storage, read_write> meanDataOutput : array<${b}>`:""};\n  ${w?`@group(0) @binding(${x++}) var<storage, read_write> invStdOutput : array<${b}>`:""};\n\n  ${e.mainStart()}\n    let offset = global_idx * normSize;\n    if (offset >= ${p}) { return; }\n    var mean: ${b} = 0;\n    var meanSquare: ${b} = 0;\n\n    for (var h: u32 = 0u; h < normSize; h++) {\n      mean = mean + x[h + offset];\n      meanSquare = meanSquare + x[h + offset] * x[h + offset];\n    }\n    mean = mean / normSizeTyped;\n    meanSquare = sqrt(meanSquare / normSizeTyped - mean * mean + epsilon);\n\n    for (var j: u32 = 0; j < normSize; j++) {\n      output[j + offset] = (x[j + offset] - mean) / meanSquare * scale[j] ${u?"+ bias[j]":""};\n    }\n\n    ${y?"meanDataOutput[global_idx] = mean":""};\n    ${w?"invStdOutput[global_idx] = 1 / meanSquare":""};\n  }`,dispatchGroup:()=>({x:Math.ceil(h/64)})})})(n,e.inputs,t,e.outputCount))}},1522:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(6952),o=n(1163),a=n(158);t.createMatmulProgramInfoLoader=(e,t,n,r)=>{const i=(s=e.length>2,l=t.activationCacheKey,{name:"MatMul",inputTypes:s?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:l});var s,l;return Object.assign(Object.assign({},i),{get:()=>(0,a.createMatmulProgramInfo)(i,e,t,n,r)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n=r.BroadcastUtil.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!n)throw new Error("Can't use matmul on the given tensors");e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:"",activationCacheKey:""},n))}},5262:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075),s=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if(4!==e[0].dims.length)throw new Error("Pool ops supports 2-D inputs only for now.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},l=(e,t,n)=>{const o="NHWC"===t.format,a=o?[e.dims[0],e.dims[3],e.dims[1],e.dims[2]]:e.dims.slice(),i=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),l=t.strides.slice(),u=i?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,a,s,l,u,c);const p=r.PoolConvUtil.computePoolOutputShape(n,a,l,u,s,c,t.autoPad),d=Object.assign({},t);return i?Object.assign(d,{kernelShape:s,strides:l,pads:c,dilations:u,cacheKey:t.cacheKey}):Object.assign(d,{kernelShape:s,strides:l,pads:c,cacheKey:t.cacheKey}),[d,o?[p[0],p[2],p[3],p[1]]:p]},u=(e,t,n,o,a,s,l)=>{const u="NHWC"===o.format,c=t.shape,p=t.type.value,d=c.length,h=r.ShapeUtil.size(n),f=(0,i.outputVariable)("output",t.type.tensor,n);if(o.kernelShape.length<=2){const n=o.kernelShape[o.kernelShape.length-1],r=o.strides[o.strides.length-1],i=o.pads[o.pads.length/2-1],g=d-(u?2:1);let _="",m="",b="";if(_=i+o.pads[o.pads.length-1]!==0?`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${c[g]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${a}\n              }`:`\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${a}\n              }`,2===o.kernelShape.length){const e=o.kernelShape[o.kernelShape.length-2],t=o.strides[o.strides.length-2],r=o.pads[o.pads.length/2-2],a=o.pads[o.pads.length-2],i=d-(u?3:2),s=c[i];m=r+a!==0?`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${i}] = indices[${i}] * ${t} - ${r} + j;\n                  if (xIndices[${i}] < 0 || xIndices[${i}] >= ${s}) {\n                    pad+= ${n};\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < ${e}u; j++) {\n                  xIndices[${i}] = indices[${i}] * ${t} - ${r} + j;\n                `,b="\n              }\n            "}return`\n            ${e.declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var value: ${p} = ${p}(${l});\n              var pad = 0;\n              ${m}\n              ${_}\n              ${b}\n              ${s}\n\n              output[global_idx] = value;\n            }`}{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");const n=r.ShapeUtil.size(o.kernelShape),i=r.ShapeUtil.computeStrides(o.kernelShape),p=i.length,g=o.pads.length;let _="";return _=o.pads.reduce(((e,t)=>e+t))?`\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${a}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${a}\n            `,`\n            ${e.declareVariables(t,f)}\n\n            const pads = array<u32, ${g}>(${o.pads.map((e=>`${e}u`)).join(",")});\n            const inputDims = array<u32, ${d}>(${c.map((e=>`${e}u`)).join(",")});\n            const kernelStrides = array<u32, ${p}>(${i.map((e=>`${e}u`)).join(",")});\n            const strides = array<u32, ${p}>(${o.strides.map((e=>`${e}u`)).join(",")});\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\n\n              let indices = ${f.offsetToIndices("global_idx")};\n              let xIndices = ${f.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${p}>;\n\n              var value = ${f.type.value}(${l});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${n}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${p-1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${p-1}] = offset;\n\n                isPad = false;\n                for (var j = ${d-p}u; j < ${d}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${d-p}u]\n                    + offsets[j - ${d-p}u] - pads[j - 2u];\n                  ${_}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),p=(e,t,n,o)=>{const[s,c]=l(e,o,n),p=r.ShapeUtil.size(s.kernelShape),d=(0,i.inputVariable)("x",e.dataType,e.dims);let h="";return s.countIncludePad?h+=`value /= f32(${p});`:h+=`value /= f32(${p} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>u(e,d,c,s,"value += x_val;",h,"0.0"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,o.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:"AveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs[0],n,!1,t)}))};const d={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:"GlobalAveragePool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs[0],n,!0,t)}))};const h=(e,t,n,o)=>{const[s,c]=l(e,o,n),p=(0,i.inputVariable)("x",e.dataType,e.dims);return Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>u(e,p,c,s,"\n      value = max(x_val, value);\n    ","","-1e5"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:"MaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>h(e.inputs[0],n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,o.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:"GlobalMaxPool",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>h(e.inputs[0],n,!0,t)}))}},6031:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseReduceAttributes=t.reduceSumSquare=t.reduceSum=t.reduceProd=t.reduceMin=t.reduceMean=t.reduceMax=t.reduceLogSumExp=t.reduceL2=t.reduceL1=t.reduceLogSum=t.createReduceProgramInfo=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075),s=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},l=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""];t.createReduceProgramInfo=(e,t,n,o,s,l=!1,u=!1)=>{const c=[],p=t[0].dims,d=r.ShapeUtil.normalizeAxes(o,t[0].dims.length),h=!u&&0===d.length;p.forEach(((e,t)=>{h||d.indexOf(t)>=0?l&&c.push(1):c.push(e)}));const f=[],g=(0,i.inputVariable)("_A",t[0].dataType,p),_=(0,i.outputVariable)("output",s,c),m=n(g,_,d),b=`inputOffset = ${g.indicesToOffset("inputIndices")};`,y=`let ${b};`,w=`var ${b};`,x=""===m[1]?"":w;let v=(""===m[1]?y:b)+"\n"+m[2];for(let e=0,n=0;e<t[0].dims.length;e++)h||d.indexOf(e)>=0?(l&&n++,v=`for(var j${e}: u32 = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\n                ${m[2].includes("lastIndex")?`let lastIndex = j${e};`:""}\n                ${g.indicesSet("inputIndices",e,`j${e}`)}\n                ${v}\n              }`):(f.push(`${g.indicesSet("inputIndices",e,_.indicesGet("outputIndices",n))};`),n++);const T=r.ShapeUtil.size(c);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n        ${e.declareVariables(g,_)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(T)}\n          var inputIndices: ${g.type.indices};\n          let outputIndices = ${_.offsetToIndices("global_idx")};\n\n          ${f.join("\n")}\n          ${m[0]}       // init ops for reduce max/min\n          ${x}\n          ${m[1]}\n          ${v}\n          ${m[3]}\n          ${4===m.length?_.setByOffset("global_idx","value"):m.slice(4).join("\n")}\n        }`,outputs:[{dims:c,dataType:s,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(T/64)})})};const u=(e,n,r,i)=>{const s=1===e.length?r:((e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),(0,o.createAttributeWithCacheKey)({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})})(e,r),u={name:n,inputTypes:[a.GpuDataType.default],cacheHint:s.cacheKey+"_"+e[0].dims.map((e=>e.toString())).join(",")};return Object.assign(Object.assign({},u),{get:()=>(0,t.createReduceProgramInfo)(u,[e[0]],s.noopWithEmptyAxes&&0===s.axes.length?l:i,s.axes,e[0].dataType,s.keepDims,s.noopWithEmptyAxes)})};t.reduceLogSum=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,"value = log(value);"])),{inputs:[0]})},t.reduceL1=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByOffset("inputOffset")});`,""])),{inputs:[0]})},t.reduceL2=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceL2",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])),{inputs:[0]})},t.reduceLogSumExp=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByOffset("inputOffset")});`,"value = log(value);"])),{inputs:[0]})},t.reduceMax=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceMax",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("inputIndices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = max(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceMean=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceMean",t,((e,t,n)=>{let r=1;for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&(r*=e.shape[t]);return[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,`value = value / ${r}.;`]})),{inputs:[0]})},t.reduceMin=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceMin",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`inputIndices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = min(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceProd=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSum=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSumSquare=(e,t)=>{s(e.inputs),e.compute(u(e.inputs,"ReduceSumSquare",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += t * t;`,""])),{inputs:[0]})},t.parseReduceAttributes=e=>(0,o.createAttributeWithCacheKey)(e)},4566:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributes=t.resize=t.createResizeProgramInfoLoader=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.createResizeProgramInfoLoader=(e,t,n,o,s,l)=>{const u={name:"Resize",inputTypes:[a.GpuDataType.default],cacheHint:t.cacheKey+n.toString()+(o.length>0?"_scales_"+o.toString():"")+(s.length>0?"_sizes_"+s.toString():"")};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,o,s,l,u)=>{const c=t.dims,p=((e,t,n)=>{const r=new Array(n).fill(0).concat(new Array(n).fill(1)),o=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,a)=>{r[e]=o[a],r[a+n]=o[t.length+a]})),r):o})(u,n.axes,c.length);let d=((e,t,n,r)=>{let o=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>o.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>o[e]=n[t]))}else n.forEach((e=>o.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");o=e.map(((e,n)=>Math.round(e*t[n])))}return o})(c,s,l,n.axes),h=s.slice();0===s.length&&(h=c.map(((e,t)=>0===e?1:d[t]/e)),"stretch"!==n.keepAspectRatioPolicy&&(d=((e,t,n,r)=>{const o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map((e=>n[e])),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map((e=>n[e])),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);const a=e.slice();return r.axes.length>0?(r.axes.forEach((e=>n[e]=o)),r.axes.forEach((t=>a[t]=Math.round(e[t]*n[t])))):(n.fill(o,0,n.length),a.forEach(((e,t)=>a[t]=Math.round(e*n[t])))),a})(c,0,h,n)));const f=(0,i.outputVariable)("output",t.dataType,d),g=(0,i.inputVariable)("input",t.dataType,c),_=r.ShapeUtil.size(d),m=c.length===d.length&&c.every(((e,t)=>e===d[t])),b="tf_crop_and_resize"===n.coordinateTransformMode;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\n      ${t=n.coordinateTransformMode,"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(t){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join("\n");case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}"};\n      ${(()=>{switch(n.mode){case"nearest":return`\n              ${((e,t)=>`\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var inputIndex = ${1===t.length?"inputIndices":"inputIndices[i]"};\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\n          return false;\n        }\n      }\n      return true;\n    }`)(g,c)};\n              ${((e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}")(n.nearestMode,o)};\n              ${((e,t,n,r,o,a,i)=>`\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n        const inputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\n        const outputShape = array<u32, ${r.length}>(${r.map((e=>`${e}u`)).join(",")});\n        const scales = array<f32, ${o.length}>(${o.map((e=>`${e}f`)).join(",")});\n        const roi = array<f32, ${a.length}>(${a.map((e=>`${e}f`)).join(",")});\n        var inputIndices: ${e.type.indices};\n        for (var i:u32 = 0; i < ${r.length}; i++) {\n          var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\n          var inputIndex: u32;\n          if (scales[i] == 1.0) {\n            inputIndex = outputIndex;\n          } else {\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);\n            if (!${i} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\n              if (original_idx < 0) {\n                inputIndex = 0;\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\n                inputIndex = inputShape[i] - 1;\n              } else {\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\n              }\n            } else {\n              inputIndex = u32(original_idx);\n            }\n          }\n          ${e.indicesSet("inputIndices","i","inputIndex")}\n        }\n        return inputIndices;\n    }`)(g,f,c,d,h,p,b)};\n              `;case"linear":return`\n              ${((e,t,n,r,o)=>`\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${n.length}> {\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\n      const outputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\n      const scales = array<f32, ${r.length}>(${r.map((e=>`${e}f`)).join(",")});\n      const roi = array<f32, ${o.length}>(${o.map((e=>`${e}f`)).join(",")});\n      var originalIndices: array<f32, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var outputIndex = ${1===n.length?"outputIndices":"outputIndices[i]"};\n        if (scales[i] == 1.0) {\n          originalIndices[i] = f32(outputIndex);\n        } else {\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\n        }\n      }\n      return originalIndices;\n    }`)(f,c,d,h,p)};\n              ${((e,t,n,r,o,a,i)=>{const[s,l,u,c]=2===n.length?[-1,0,1,-1]:1===o[1]?[0,2,3,1]:[0,1,2,3];return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\n      var inputIndices: ${e.type.indices};\n      inputIndices[${l}] = max(0, min(row, ${n[l]} - 1));\n      inputIndices[${u}] = max(0, min(col, ${n[u]} - 1));\n      if (${n.length} > 2) {\n        inputIndices[${c}] = channel;\n        inputIndices[${s}] = batch;\n      };\n      return input[${e.indicesToOffset("inputIndices")}];\n    }\n\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\n      var row:f32 = originalIndices[${l}];\n      var col:f32 = originalIndices[${u}];\n      if (${a} && (row < 0 || row > (${n[l]} - 1) || col < 0 || col > ${n[u]} - 1)) {\n        return ${i};\n      }\n      row = max(0, min(row, ${n[l]} - 1));\n      col = max(0, min(col, ${n[u]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = 0;\n      var batch: u32 = 0;\n      if (${n.length>2}) {\n        channel = u32(originalIndices[${c}]);\n        batch = u32(originalIndices[${s}]);\n      }\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\n      var dx1: f32 = row - f32(row1);\n      var dx2: f32 = f32(row2 ) - row;\n      var dy1 = col - f32(col1);\n      var dy2 = f32(col2) - col;\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`})(g,f,c,0,h,b,n.extrapolationValue)};\n              `;case"cubic":return`\n            ${((e,t,n,r,o,a,i,s,l,u)=>{const[c,p]=2===n.length?[0,1]:1===o[1]?[2,3]:[1,2],d=i=>{const p=i===c?"row":"col";return`\n      fn ${p}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\n        var outputIndex = ${1===r.length?"outputIndices":`outputIndices[${i}]`};\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${o[i]},\n        f32(${r[i]}), f32(${n[i]}), ${a[i]}, ${a[i]} + ${n.length});\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${s} && (originalIdx < 0 || originalIdx > (${n[i]} - 1))) {\n          return ${l};\n        }\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${p}: f32 = originalIdx + f32(i);\n          if (${p} < 0 || ${p} >= ${n[i]}) {\n            if (${u}) {\n              coefs[i + 1] = 0.0;\n              continue;\n            } else if (${s}) {\n              return ${l};\n            } else {\n              ${p} = max(0, min(${p}, ${n[i]} - 1));\n            }\n          }\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\n          inputIndicesCopy[${i}] = u32(${p});\n          data[i + 1] = ${i===c?`input[${e.indicesToOffset("inputIndicesCopy")}];`:"\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);"}\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${d(c)};\n    ${d(p)};\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\n    var absS = abs(s);\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: f32 = 1.0 - absS;\n    var twoMinusAbsS: f32 = 2.0 - absS;\n    var onePlusAbsS: f32 = 1.0 + absS;\n    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};\n    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\n    var inputIndices: ${e.type.indices} = outputIndices;\n    return colCubicInterpolation(inputIndices, outputIndices);\n  }\n    `})(g,f,c,d,h,p,n.cubicCoeffA,b,n.extrapolationValue,n.excludeOutside)};\n            `;default:throw Error("Invalid resize mode")}})()};\n      ${e.declareVariables(g,f)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(_)}\n        if (${m}) {\n          output[global_idx] = input[global_idx];\n        } else {\n          let outputIndices = ${f.offsetToIndices("global_idx")};\n          var inputIndices: ${g.type.indices};\n          ${(()=>{switch(n.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\n                  if (checkInputIndices(inputIndices)) {\n                    output[global_idx] = input[${g.indicesToOffset("inputIndices")}];\n                  } else {\n                    output[global_idx] = ${n.extrapolationValue};\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${n.mode}`)}})()};\n        }\n      }`;var t},outputs:[{dims:d,dataType:t.dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(_/64)})})})(u,e,t,n,o,s,l)})},t.resize=(e,n)=>{const r=[],o=[],a=[],i=(e=>{const t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]})(e);((e,t,n,r,o,a)=>{const[i,s,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach((e=>a.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(s>0&&e.length>s&&e[s].dims.length>0){if(e[s].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");((e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")})(r,t),t.axes.length>0&&((e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));const r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r})(r,t.axes,u).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&(e[l].getBigInt64Array().forEach((e=>o.push(Number(e)))),o.length!==u||n>=18&&o.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(void 0!==r&&void 0!==o&&r.length>0&&o.length>u)throw new Error("Resize requires only of scales or sizes to be specified")})(e.inputs,n,i,r,o,a),e.compute((0,t.createResizeProgramInfoLoader)(e.inputs[0],n,i,r,o,a),{inputs:[0]})},t.parseResizeAttributes=e=>{const t=e.antialias,n=e.axes,r=e.coordinateTransformMode,a=e.cubicCoeffA,i=0!==e.excludeOutside,s=e.extrapolationValue,l=e.keepAspectRatioPolicy,u=e.mode,c=""===e.nearestMode?"simple":e.nearestMode;return(0,o.createAttributeWithCacheKey)({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:a,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:l,mode:u,nearestMode:c})}},8906:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSkipLayerNormAttributes=t.skipLayerNorm=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.skipLayerNorm=(e,t)=>{(e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type");const t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");const o=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){const t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){const t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}})(e.inputs);const n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(((e,t,n,o)=>{const s={name:"SkipLayerNormalization",inputTypes:new Array(e.length).fill(a.GpuDataType.default),cacheHint:t.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,o,s)=>{const l=t[0].dims,u=l,c=r.ShapeUtil.size(l),p=l.slice(-1)[0],d=[],h=t.length>3,f=t.length>4,g=(0,i.tensorTypeToWsglStorageType)(t[0].dataType),_=o>3;let m=0;const b=[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}];return o>1&&b.push({dims:d,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),o>2&&b.push({dims:d,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),o>3&&b.push({dims:l,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}),Object.assign(Object.assign({},e),{getShaderSource:e=>`\n      const hiddenSize: u32 = ${p};\n      const epsilon: f32 = ${n.epsilon};\n\n      @group(0) @binding(${m++}) var<storage, read> x : array<${g}>;\n      @group(0) @binding(${m++}) var<storage, read> skip : array<${g}>;\n      @group(0) @binding(${m++}) var<storage, read> gamma : array<${g}>;\n      ${h?`@group(0) @binding(${m++}) var<storage, read> beta : array<${g}>;`:""}\n      ${f?`@group(0) @binding(${m++}) var<storage, read> bias : array<${g}>;`:""}\n      @group(0) @binding(${m++}) var<storage, read_write> output : array<${g}>;\n      \n      \n      ${_?`@group(0) @binding(${m++}) var<storage, read_write> inputSkipBiasSum : array<${g}>;`:""}\n\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(c/p)}\n        let offset = global_idx * hiddenSize;\n        var sum: f32 = 0.0;\n        var squareSum: f32 = 0.0;\n        for (var i: u32 = 0; i < hiddenSize; i++) {\n          let skipValue = skip[offset + i];\n          let biasValue = ${f?"bias[i]":"0.0"};\n          let inputValue = x[offset + i];\n          let value = inputValue + skipValue + biasValue;\n          ${_?"inputSkipBiasSum[offset + i] = value;":""}\n          output[offset + i] = value;\n          sum += value;\n          squareSum += value * value;\n        }\n        let mean: f32 = sum / f32(hiddenSize);\n        let variance: f32 = sqrt(squareSum / f32(hiddenSize) - mean * mean + epsilon);\n        \n        \n        for (var i: u32 = 0; i < hiddenSize; i++) {\n          output[offset + i] = (output[offset + i] - mean) / variance * gamma[i] + ${h?"beta[i]":"0.0"};\n        }\n      }`,outputs:b,dispatchGroup:()=>({x:Math.ceil(c/p/64)})})})(s,e,t,n)})})(e.inputs,t,e.outputCount),{outputs:n})},t.parseSkipLayerNormAttributes=e=>{const t=e.epsilon;return(0,o.createAttributeWithCacheKey)({epsilon:t})}},5101:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSliceAttributes=t.slice=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075),s=(e,t)=>{const n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},l=(e,t,n,r,o)=>{let a=e;return e<0&&(a+=n[r[t]]),o[t]<0?Math.max(0,Math.min(a,n[r[t]]-1)):Math.max(0,Math.min(a,n[r[t]]))};t.slice=(e,t)=>{((e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))})(e.inputs,t);const n=((e,t)=>{const n=((e,t)=>{if(e.length>1){const t=s(e,1),n=s(e,2);let r=s(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),(0,o.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}return t})(e,t),u={name:"Slice",inputTypes:[a.GpuDataType.default],cacheHint:n.cacheKey+(e.length>4?"steps_"+e[4].dims.toString():"")};return Object.assign(Object.assign({},u),{get:()=>((e,t,n)=>{const o=t[0].dims,u=r.ShapeUtil.size(o),c=n.axes.length>0?r.ShapeUtil.normalizeAxes(n.axes,o.length):[...Array(o.length).keys()];let p=s(t,4);p.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===p.length&&(p=Array(c.length).fill(1));const d=n.starts.map(((e,t)=>l(e,t,o,c,p))),h=n.ends.map(((e,t)=>l(e,t,o,c,p)));if(c.length!==o.length)for(let e=0;e<o.length;++e)c.includes(e)||(d.splice(e,0,0),h.splice(e,0,o[e]),p.splice(e,0,1));const f=p.map((e=>Math.sign(e)));p.forEach(((e,t,n)=>{if(e<0){const r=(h[t]-d[t])/e,o=d[t],a=o+r*p[t];d[t]=a,h[t]=o,n[t]=-e}}));const g=o.slice(0);c.forEach(((e,t)=>{g[e]=Math.ceil((h[e]-d[e])/p[e])}));const _={dims:g,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default},m=(0,i.outputVariable)("output",t[0].dataType,g),b=(0,i.inputVariable)("input",t[0].dataType,o),y=r.ShapeUtil.size(g);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\n      ${e.declareVariables(b,m)}\n        const signs = array<i32, ${f.length}>(${f.map((e=>`${e}i`)).join(",")});\n        const starts = array<u32, ${d.length}>(${d.map((e=>`${e}u`)).join(",")});\n        const ends = array<u32, ${h.length}>(${h.map((e=>`${e}u`)).join(",")});\n        const steps = array<u32, ${p.length}>(${p.map((e=>`${e}u`)).join(",")});\n        const inputShape = array<u32, ${o.length}>(${o.map((e=>`${e}u`)).join(",")});\n\n        ${((e,t,n,r)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\n          var inputIndices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\n            carry = inputIndex / inputShape[i];\n            inputIndex = inputIndex % inputShape[i];\n            if (signs[i] < 0) {\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\n            }\n            ${1===n.length?"inputIndices":"inputIndices[i]"} = inputIndex;\n          }\n          return inputIndices;\n      }`)(b,m,o,g)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(y)}\n          let outputIndices = ${m.offsetToIndices("global_idx")};\n          let inputIndices = calculateInputIndices(outputIndices);\n          ${m.setByOffset("global_idx",b.getByIndices("inputIndices"))}\n      }`,outputs:[_],dispatchGroup:()=>({x:Math.ceil(u/64)})})})(u,e,n)})})(e.inputs,t),u=n.get();if(!(r.ShapeUtil.size(u.outputs[0].dims)>0))throw new Error("slice: output size is 0");e.compute(n,{inputs:[0]})},t.parseSliceAttributes=e=>{const t=e.starts,n=e.ends,r=e.axes;return(0,o.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}},6198:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSoftmaxAttributes=t.softmax=t.softmaxProgramMetadata=void 0;const r=n(6952),o=n(387),a=n(1163);t.softmaxProgramMetadata={name:"Softmax",inputTypes:[a.GpuDataType.default]},t.softmax=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.");if(1!==e[0].dataType)throw new Error("Softmax input needs to be float.")})(e.inputs),e.compute(Object.assign(Object.assign({},t.softmaxProgramMetadata),{cacheHint:n.cacheKey,get:()=>((e,n)=>{const o="f32",i=e.dims,s=r.ShapeUtil.size(i);let l=n.axis;if(l<0&&(l=i.length+l),l<i.length-1)throw new Error("softmax only supports last axis for now.");const u=i[l],c=s/u;return Object.assign(Object.assign({},t.softmaxProgramMetadata),{outputs:[{dims:i,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${o};\n      var<workgroup> rowSumShared : ${o};\n      var<workgroup> threadShared : array<${o}, 64>;\n\n      @group(0) @binding(0) var<storage, read> x : array<${o}>;\n      @group(0) @binding(1) var<storage, read_write> result : array<${o}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${o} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${o}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n\n      @compute @workgroup_size(64, 1, 1)\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\n        let gindex = i32(global_id.x);\n        let lindex = i32(local_id.x);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = ${u};\n        let row_stride : i32 = ${u};\n\n        // find the rows max\n        var threadMax = -3.402823e+38f; // 6.2.4 in wgsl spec\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = 0.0;\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = threadShared[0];\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`,dispatchGroup:()=>({x:c})})})(e.inputs[0],n)}))},t.parseSoftmaxAttributes=e=>(0,o.createAttributeWithCacheKey)({axis:e.axis})},2067:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.split=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs")})(e.inputs),e.compute(((e,t)=>{const n=1===e.length?t:((e,t)=>{const n=[];let r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),(0,o.createAttributeWithCacheKey)({numOutputs:r,axis:t.axis,splitSizes:n})})(e,t),s={name:"Split",inputTypes:[a.GpuDataType.default],cacheHint:n.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n)=>{const o=t[0].dims,s=r.ShapeUtil.size(o),l=t[0].dataType,u=o.length,c=n.axis,p=c<0?o.length+c:c,d=new Array(n.numOutputs),h=(0,i.inputVariable)("input",l,o),f=new Array(n.numOutputs),g=[],_=[];let m=0;for(let e=0;e<n.numOutputs;e++){m+=n.splitSizes[e],f[e]=m;const r=o.slice();r[n.axis]=n.splitSizes[e],_.push(r),d[e]=(0,i.outputVariable)(`output${e}`,l,_[e]),g.push({dims:_[e],dataType:t[0].dataType,gpuDataType:a.GpuDataType.default})}const b=u<2?"indices":`indices[${p}]`;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\n  ${e.declareVariables(h,...d)}\n  const sizeInConcatAxis = array<u32, ${f.length}>(${f.map((e=>`${e}u`)).join(",")});\n  ${t=f.length,`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\n    if (index < sizeInConcatAxis[i]) {\n        return i;\n    }\n    }\n    return ${t}u;\n}`}\n  ${(e=>{const t=e.length,n=[];for(let r=0;r<t;++r){const o=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(o):0===r?n.push(`if (outputNumber == ${r}u) { ${o} }`):r===t-1?n.push(`else { ${o} }`):n.push(`else if (outputNumber == ${r}) { ${o} }`)}return`\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`})(d)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    var indices = ${h.offsetToIndices("global_idx")};\n    let outputNumber = calculateOutputIndex(${b});\n    if (outputNumber != 0) {\n        ${b} -= sizeInConcatAxis[outputNumber - 1u];\n    }\n    writeBufferData(outputNumber, indices, global_idx);\n  }`;var t},outputs:g,dispatchGroup:()=>({x:Math.ceil(s/64)})})})(s,[e[0]],n)})})(e.inputs,t),{inputs:[0]})},t.parseSplitAttributes=e=>{const t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return(0,o.createAttributeWithCacheKey)({axis:t,numOutputs:r,splitSizes:n})}},8699:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tile=t.createTileProgramInfo=t.tileProgramMetadata=void 0;const r=n(6952),o=n(1163),a=n(2075);t.tileProgramMetadata={name:"Tile",inputTypes:[o.GpuDataType.default]};const i=e=>Array.from(e.getBigInt64Array(),Number);t.createTileProgramInfo=(e,t)=>{const n=t[0].dims,s=i(t[1]),l=((e,t)=>{const n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n})(n,s),u=r.ShapeUtil.size(l),c=t[0].dataType,p=(0,a.inputVariable)("input",c,n),d=(0,a.outputVariable)("output",c,l);return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\n      const inputShape = ${p.indices(...n)};\n      ${e.declareVariables(p,d)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      var inputIndices: ${p.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let inputDimValue = ${d.indicesGet("outputIndices","i")}  % ${p.indicesGet("inputShape","i")};\n\n        ${p.indicesSet("inputIndices","i","inputDimValue")}\n      }\n      ${d.setByOffset("global_idx",p.getByIndices("inputIndices"))}\n    }`,dispatchGroup:()=>({x:Math.ceil(u/64)})})},t.tile=e=>{(e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(i(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")})(e.inputs);const n=i(e.inputs[1]).toString();e.compute(Object.assign(Object.assign({},t.tileProgramMetadata),{cacheHint:n,get:()=>(0,t.createTileProgramInfo)(t.tileProgramMetadata,e.inputs)}),{inputs:[0]})}},2625:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075);t.transposeProgramMetadata={name:"Transpose",inputTypes:[a.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const o=e.dataType,l=e.dims,u=s(l,n),c=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(l,u),p=l.length,d=r.ShapeUtil.size(c),h=(0,i.outputVariable)("output",o,c),f=(0,i.inputVariable)("a",o,l);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\n  ${e.declareVariables(f,h)}\n\n  ${((e,t,n,r)=>{const o=[];o.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)o.push(n.indicesSet("a",e[r],`i[${r}]`));return o.push("return a;}"),o.join("\n")})(u,p,f,h)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\n\n    let indices = ${h.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${h.setByOffset("global_idx",f.getByIndices("aIndices"))}\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Transpose only support float, int32, and uint32 data types")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,o.createAttributeWithCacheKey)({perm:e.perm})},9302:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.log=t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.not=t.leakyRelu=t.gelu=t.floor=t.exp=t.erf=t.erfImpl=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.cast=t.parseCastAttributes=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(6952),o=n(387),a=n(1163),i=n(2075),s=(e,t,n,o,s,l=e.dataType)=>{const u={name:t,inputTypes:[a.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,o,s)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r,o,a)=>{const s=Math.ceil(t/4);let l="";l="string"==typeof o?`${o}(a)`:o("a");const u=(0,i.inputVariable)("inputData",n,[s],4),c=(0,i.outputVariable)("outputData",r,[s],4);return`\n  ${e.declareVariables(u,c)}\n\n  ${null!=a?a:""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n\n    let a = ${u.getByOffset("global_idx")};\n    ${c.setByOffset("global_idx",l)}\n  }`})(e,r.ShapeUtil.size(t.dims),t.dataType,n,o,s),outputs:[{dims:t.dims,dataType:n,gpuDataType:a.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(u,e,l,n,o)})};t.abs=e=>{e.compute(s(e.inputs[0],"Abs","abs"))},t.acos=e=>{e.compute(s(e.inputs[0],"Acos","acos"))},t.acosh=e=>{e.compute(s(e.inputs[0],"Acosh","acosh"))},t.asin=e=>{e.compute(s(e.inputs[0],"Asin","asin"))},t.asinh=e=>{e.compute(s(e.inputs[0],"Asinh","asinh"))},t.atan=e=>{e.compute(s(e.inputs[0],"Atan","atan"))},t.atanh=e=>{e.compute(s(e.inputs[0],"Atanh","atanh"))},t.parseCastAttributes=e=>(0,o.createAttributeWithCacheKey)(e),t.cast=(e,t)=>{let n;switch(t.to){case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(s(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},t.clipV10=(e,t)=>{e.compute(s(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,o.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(s(e.inputs[0],"Ceil","ceil"))},t.cos=e=>{e.compute(s(e.inputs[0],"Cos","cos"))},t.cosh=e=>{e.compute(s(e.inputs[0],"Cosh","cosh"))},t.parseAlphaAttributes=e=>(0,o.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(s(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_: f32 = f32(${t.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},t.erfImpl=e=>`\nconst r0: f32 = 0.3275911;\nconst r1: f32 = 0.254829592;\nconst r2: f32 = -0.284496736;\nconst r3: f32 = 1.421413741;\nconst r4: f32 = -1.453152027;\nconst r5: f32 = 1.061405429;\n\nfn erf_vf32(v: ${e}) -> ${e} {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,t.erf=e=>{e.compute(s(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),(0,t.erfImpl)("vec4<f32>")))},t.exp=e=>{e.compute(s(e.inputs[0],"Exp","exp"))},t.floor=e=>{e.compute(s(e.inputs[0],"Floor","floor"))},t.gelu=e=>{e.compute(s(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),(0,t.erfImpl)("vec4<f32>")))},t.leakyRelu=(e,t)=>{e.compute(s(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.not=e=>{e.compute(s(e.inputs[0],"Not",(e=>`!${e}`)))},t.neg=e=>{e.compute(s(e.inputs[0],"Neg",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(s(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(s(e.inputs[0],"Relu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(s(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(s(e.inputs[0],"Sin","sin"))},t.sinh=e=>{e.compute(s(e.inputs[0],"Sinh","sinh"))},t.sqrt=e=>{e.compute(s(e.inputs[0],"Sqrt","sqrt"))},t.tan=e=>{e.compute(s(e.inputs[0],"Tan","tan"))},t.tanh=e=>{e.compute(s(e.inputs[0],"Tanh","tanh"))},t.thresholdedRelu=(e,t)=>(e.compute(s(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),t.log=e=>{e.compute(s(e.inputs[0],"Log","log"))}},8305:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(7917),o=n(4955),a=n(2075);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,o,a){const i=this.backend.device,s=this.backend.getComputePassEncoder(),l=this.backend.supportTimestampQuery&&"default"===this.backend.env.webgpu.profilingMode;l&&s.writeTimestamp(this.backend.profilingQuerySet,0),s.setPipeline(e.computePipeline);const u=[];for(const e of n)u.push({binding:u.length,resource:{buffer:e.buffer}});for(const e of o)u.push({binding:u.length,resource:{buffer:e.buffer}});const c=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(s.setBindGroup(0,c),s.dispatchWorkgroups(...a),this.backend.pendingDispatchNumber++,l){s.writeTimestamp(this.backend.profilingQuerySet,1),null==this.backend.profilingQueryData&&(this.backend.profilingQueryData=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));const n=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,this.backend.profilingQueryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.profilingQueryData.buffer,0,n.buffer,0,16),this.backend.flush();const o=this.backend.currentKernelId,a=this.backend.kernels.get(o),i=`[${a[0]}] ${a[1]}`;n.buffer.mapAsync(GPUMapMode.READ).then((()=>{const a=new BigUint64Array(n.buffer.getMappedRange()),s=a[0],l=a[1];n.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=s);const u=Number(s-this.backend.profilingTimeBase),c=Number(l-this.backend.profilingTimeBase);if(!Number.isSafeInteger(u)||!Number.isSafeInteger(c))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(n.id);let p="";t.forEach(((e,t)=>{p+=`input[${t}]: [${e.dims}] | ${(0,r.tensorDataTypeEnumToString)(e.dataType)}, `}));let d="";e.programInfo.outputs.forEach(((e,t)=>{d+=`output[${t}]: [${e.dims}] | ${(0,r.tensorDataTypeEnumToString)(e.dataType)}, `})),console.log(`[profiling] kernel "${o}|${i}" ${p}${d}execution time: ${c-u} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,r=(0,a.createShaderHelper)(t),i=e.getShaderSource(r),s=`${r.additionalImplementations}\n${i}`,l=n.createShaderModule({code:s,label:e.name});return(0,o.LOG_DEBUG)("verbose",(()=>`[WebGPU] shader code: ${s}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:l,entryPoint:"main"},layout:"auto",label:e.name})}}normalizeDispatchGroupSize(e){const t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,o=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=o&&n<=o&&r<=o)return[t,n,r];const a=t*n*r;let i=Math.ceil(Math.sqrt(a));if(i>o){if(i=Math.ceil(Math.cbrt(a)),i>o)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}return[i,i,1]}}},1163:(e,t)=>{var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]="default",n[n.upload=1]="upload",n[n.profile=2]="profile"},9544:function(e,t,n){var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initializeRuntime=t.initializeWebAssemblyInstance=void 0;const s=n(2235),l=i(n(1259)),u=n(263),c=()=>!!s.env.wasm.proxy&&"undefined"!=typeof document;let p,d,h,f=!1,g=!1,_=!1;const m=[],b=[],y=[],w=[],x=[],v=[],T=()=>{if(f||!g||_||!p)throw new Error("worker not ready")},k=e=>{switch(e.data.type){case"init-wasm":f=!1,e.data.err?(_=!0,d[1](e.data.err)):(g=!0,d[0]());break;case"init-ort":e.data.err?h[1](e.data.err):h[0]();break;case"create_allocate":e.data.err?m.shift()[1](e.data.err):m.shift()[0](e.data.out);break;case"create_finalize":e.data.err?b.shift()[1](e.data.err):b.shift()[0](e.data.out);break;case"create":e.data.err?y.shift()[1](e.data.err):y.shift()[0](e.data.out);break;case"release":e.data.err?w.shift()[1](e.data.err):w.shift()[0]();break;case"run":e.data.err?x.shift()[1](e.data.err):x.shift()[0](e.data.out);break;case"end-profiling":e.data.err?v.shift()[1](e.data.err):v.shift()[0]()}},S="undefined"!=typeof document?null===(r=null===document||void 0===document?void 0:document.currentScript)||void 0===r?void 0:r.src:void 0;t.initializeWebAssemblyInstance=async()=>{if(c()){if(g)return;if(f)throw new Error("multiple calls to 'initWasm()' detected.");if(_)throw new Error("previous call to 'initWasm()' failed.");return f=!0,void 0===s.env.wasm.wasmPaths&&S&&0!==S.indexOf("blob:")&&(s.env.wasm.wasmPaths=S.substr(0,+S.lastIndexOf("/")+1)),new Promise(((e,t)=>{null==p||p.terminate(),p=n(8050).Z(),p.onmessage=k,d=[e,t];const r={type:"init-wasm",in:s.env.wasm};p.postMessage(r)}))}return(0,u.initializeWebAssembly)(s.env.wasm)},t.initializeRuntime=async e=>{if(c())return T(),new Promise(((t,n)=>{h=[t,n];const r={type:"init-ort",in:e};p.postMessage(r)}));await l.initRuntime(e)},t.createSessionAllocate=async e=>c()?(T(),new Promise(((t,n)=>{m.push([t,n]);const r={type:"create_allocate",in:{model:e}};p.postMessage(r,[e.buffer])}))):l.createSessionAllocate(e),t.createSessionFinalize=async(e,t)=>c()?(T(),new Promise(((n,r)=>{b.push([n,r]);const o={type:"create_finalize",in:{modeldata:e,options:t}};p.postMessage(o)}))):l.createSessionFinalize(e,t),t.createSession=async(e,t)=>c()?(T(),new Promise(((n,r)=>{y.push([n,r]);const o={type:"create",in:{model:e,options:t}};p.postMessage(o,[e.buffer])}))):l.createSession(e,t),t.releaseSession=async e=>{if(c())return T(),new Promise(((t,n)=>{w.push([t,n]);const r={type:"release",in:e};p.postMessage(r)}));l.releaseSession(e)},t.run=async(e,t,n,r,o)=>c()?(T(),new Promise(((a,i)=>{x.push([a,i]);const s={type:"run",in:{sessionId:e,inputIndices:t,inputs:n,outputIndices:r,options:o}};p.postMessage(s,l.extractTransferableBuffers(n))}))):l.run(e,t,n,r,o),t.endProfiling=async e=>{if(c())return T(),new Promise(((t,n)=>{v.push([t,n]);const r={type:"end-profiling",in:e};p.postMessage(r)}));l.endProfiling(e)}},7918:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const r=n(263),o=n(1497);t.setRunOptions=e=>{const t=(0,r.getInstance)();let n=0;const a=[],i=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))i.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))i.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(i.terminate=!1);let r=0;return void 0!==(null==e?void 0:e.tag)&&(r=(0,o.allocWasmString)(e.tag,a)),n=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,r),0===n&&(0,o.checkLastError)("Can't create run options."),void 0!==(null==e?void 0:e.extra)&&(0,o.iterateExtraOptions)(e.extra,"",new WeakSet,((e,r)=>{const i=(0,o.allocWasmString)(e,a),s=(0,o.allocWasmString)(r,a);0!==t._OrtAddRunConfigEntry(n,i,s)&&(0,o.checkLastError)(`Can't set a run config entry: ${e} - ${r}.`)})),[n,a]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),a.forEach((e=>t._free(e))),e}}},6640:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OnnxruntimeWebAssemblySessionHandler=void 0;const r=n(2806),o=n(2235),a=n(2850),i=n(9544);let s;t.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(e){const t=await fetch(e);if(200!==t.status)throw new Error(`failed to load model: ${e}`);const n=await t.arrayBuffer();return(0,i.createSessionAllocate)(new Uint8Array(n))}async loadModel(e,t){if(s||(await(0,i.initializeRuntime)(o.env),s=!0),"string"==typeof e)if("undefined"!=typeof process&&process.versions&&process.versions.node){const n=await(0,a.promisify)(r.readFile)(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,i.createSession)(n,t)}else{const n=await this.createSessionAllocate(e);[this.sessionId,this.inputNames,this.outputNames]=await(0,i.createSessionFinalize)(n,t)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,i.createSession)(e,t)}async dispose(){return(0,i.releaseSession)(this.sessionId)}async run(e,t,n){const r=[],a=[];Object.entries(e).forEach((e=>{const t=e[0],n=e[1],o=this.inputNames.indexOf(t);if(-1===o)throw new Error(`invalid input '${t}'`);r.push(n),a.push(o)}));const s=[];Object.entries(t).forEach((e=>{const t=e[0],n=this.outputNames.indexOf(t);if(-1===n)throw new Error(`invalid output '${t}'`);s.push(n)}));const l=await(0,i.run)(this.sessionId,a,r.map((e=>[e.type,e.dims,e.data])),s,n),u={};for(let e=0;e<l.length;e++)u[this.outputNames[s[e]]]=new o.Tensor(l[e][0],l[e][2],l[e][1]);return u}startProfiling(){}endProfiling(){(0,i.endProfiling)(this.sessionId)}}},7622:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const r=n(263),o=n(1497);t.setSessionOptions=e=>{var t,n,a,i;const s=(0,r.getInstance)();let l=0;const u=[],c=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(c);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=c.graphOptimizationLevel)&&void 0!==t?t:"all"),p=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=c.executionMode)&&void 0!==n?n:"sequential"),d="string"==typeof c.logId?(0,o.allocWasmString)(c.logId,u):0,h=null!==(a=c.logSeverityLevel)&&void 0!==a?a:2;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log serverity level is not valid: ${h}`);const f=null!==(i=c.logVerbosityLevel)&&void 0!==i?i:0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);const g="string"==typeof c.optimizedModelFilePath?(0,o.allocWasmString)(c.optimizedModelFilePath,u):0;return l=s._OrtCreateSessionOptions(e,!!c.enableCpuMemArena,!!c.enableMemPattern,p,!!c.enableProfiling,0,d,h,f,g),0===l&&(0,o.checkLastError)("Can't create session options."),c.executionProviders&&((e,t,n)=>{for(const a of t){let t="string"==typeof a?a:a.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof a){const t=a;if(null==t?void 0:t.deviceType){const a=(0,o.allocWasmString)("deviceType",n),i=(0,o.allocWasmString)(t.deviceType,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,a,i)&&(0,o.checkLastError)(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const a=(0,o.allocWasmString)("powerPreference",n),i=(0,o.allocWasmString)(t.powerPreference,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,a,i)&&(0,o.checkLastError)(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const i=(0,o.allocWasmString)(t,n);0!==(0,r.getInstance)()._OrtAppendExecutionProvider(e,i)&&(0,o.checkLastError)(`Can't append execution provider: ${t}.`)}})(l,c.executionProviders,u),void 0!==c.extra&&(0,o.iterateExtraOptions)(c.extra,"",new WeakSet,((e,t)=>{const n=(0,o.allocWasmString)(e,u),r=(0,o.allocWasmString)(t,u);0!==s._OrtAddSessionConfigEntry(l,n,r)&&(0,o.checkLastError)(`Can't set a session config entry: ${e} - ${t}.`)})),[l,u]}catch(e){throw 0!==l&&s._OrtReleaseSessionOptions(l),u.forEach((e=>s._free(e))),e}}},7917:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},1259:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const r=n(7918),o=n(7622),a=n(7917),i=n(263),s=n(1497);t.initRuntime=async e=>{var t,r;t=e.wasm.numThreads,r=(0,a.logLevelStringToEnum)(e.logLevel),0!==(0,i.getInstance)()._OrtInit(t,r)&&(0,s.checkLastError)("Can't initialize onnxruntime.");{const t=n(7675).S;await t((0,i.getInstance)(),e)}};const l=new Map;t.createSessionAllocate=e=>{const t=(0,i.getInstance)(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,i.getInstance)();let r=0,a=0,u=[];const c=[],p=[];try{[a,u]=(0,o.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],a),0===r&&(0,s.checkLastError)("Can't create a session.");const[d,h]=(e=>{const t=(0,i.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&(0,s.checkLastError)("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}})(r),f=[],g=[];for(let e=0;e<d;e++){const t=n._OrtGetInputName(r,e);0===t&&(0,s.checkLastError)("Can't get an input name."),c.push(t),f.push(n.UTF8ToString(t))}for(let e=0;e<h;e++){const t=n._OrtGetOutputName(r,e);0===t&&(0,s.checkLastError)("Can't get an output name."),p.push(t),g.push(n.UTF8ToString(t))}return l.set(r,[r,c,p]),[r,f,g]}catch(e){throw c.forEach((e=>n._OrtFree(e))),p.forEach((e=>n._OrtFree(e))),0!==r&&n._OrtReleaseSession(r),e}finally{n._free(e[0]),0!==a&&n._OrtReleaseSessionOptions(a),u.forEach((e=>n._free(e)))}},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,i.getInstance)(),n=l.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[r,o,a]=n;o.forEach((e=>t._OrtFree(e))),a.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),l.delete(e)},t.run=async(e,t,n,o,u)=>{var c;const p=(0,i.getInstance)(),d=l.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);const[h,f,g]=d,_=t.length,m=o.length;let b=0,y=[];const w=[],x=[];try{[b,y]=(0,r.setRunOptions)(u);for(let e=0;e<_;e++){const t=n[e][0],r=n[e][1],o=n[e][2];let i,l;if(Array.isArray(o)){l=4*o.length,i=p._malloc(l),x.push(i);let e=i/4;for(let t=0;t<o.length;t++){if("string"!=typeof o[t])throw new TypeError(`tensor data at index ${t} is not a string`);p.HEAPU32[e++]=(0,s.allocWasmString)(o[t],x)}}else l=o.byteLength,i=p._malloc(l),x.push(i),p.HEAPU8.set(new Uint8Array(o.buffer,o.byteOffset,l),i);const u=p.stackSave(),c=p.stackAlloc(4*r.length);try{let n=c/4;r.forEach((e=>p.HEAP32[n++]=e));const o=p._OrtCreateTensor((0,a.tensorDataTypeStringToEnum)(t),i,l,c,r.length);0===o&&(0,s.checkLastError)(`Can't create tensor for input[${e}].`),w.push(o)}finally{p.stackRestore(u)}}const i=p.stackSave(),l=p.stackAlloc(4*_),d=p.stackAlloc(4*_),v=p.stackAlloc(4*m),T=p.stackAlloc(4*m);try{let n=l/4,r=d/4,i=v/4,u=T/4;for(let e=0;e<_;e++)p.HEAPU32[n++]=w[e],p.HEAPU32[r++]=f[t[e]];for(let e=0;e<m;e++)p.HEAPU32[i++]=0,p.HEAPU32[u++]=g[o[e]];null===(c=p.jsepOnRunStart)||void 0===c||c.call(p,e);let y=p._OrtRun(h,d,l,_,T,m,v,b);const x=p.jsepRunPromise;x&&(y=await x);const k=p.jsepOnRunEnd;k&&await k(e);const S=[];0!==y&&(0,s.checkLastError)("failed to call OrtRun().");for(let e=0;e<m;e++){const t=p.HEAPU32[v/4+e],n=p.stackSave(),r=p.stackAlloc(16);let o,i=0;try{y=p._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==y&&(0,s.checkLastError)(`Can't access output tensor data on index ${e}.`);let n=r/4;const l=p.HEAPU32[n++];i=p.HEAPU32[n++];const u=p.HEAPU32[n++],c=p.HEAPU32[n++],d=[];for(let e=0;e<c;e++)d.push(p.HEAPU32[u/4+e]);p._OrtFree(u);const h=0===d.length?1:d.reduce(((e,t)=>e*t));if(o=(0,a.tensorDataTypeEnumToString)(l),"string"===o){const e=[];let t=i/4;for(let n=0;n<h;n++){const r=p.HEAPU32[t++],o=n===h-1?void 0:p.HEAPU32[t]-r;e.push(p.UTF8ToString(r,o))}S.push([o,d,e])}else{const e=new((0,a.tensorTypeToTypedArrayConstructor)(o))(h);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(p.HEAPU8.subarray(i,i+e.byteLength)),S.push([o,d,e])}}finally{p.stackRestore(n),"string"===o&&i&&p._free(i),p._OrtReleaseTensor(t)}}return S}finally{p.stackRestore(i)}}finally{w.forEach((e=>p._OrtReleaseTensor(e))),x.forEach((e=>p._free(e))),0!==b&&p._OrtReleaseRunOptions(b),y.forEach((e=>p._free(e)))}},t.endProfiling=e=>{const t=(0,i.getInstance)(),n=l.get(e);if(!n)throw new Error("invalid session id");const r=n[0],o=t._OrtEndProfiling(r);0===o&&(0,s.checkLastError)("Can't get an profile file name."),t._OrtFree(o)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const i=a(n(6449)),s=n(9377),l=n(5711);let u,c=!1,p=!1,d=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(p)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(d)throw new Error("previous call to 'initializeWebAssembly()' failed.");p=!0;const t=e.initTimeout,r=e.numThreads,o=e.simd,a=r>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),h=o&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),f=e.wasmPaths,g="string"==typeof f?f:void 0,_=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(h,a),m="object"==typeof f?f[_]:void 0;let b=!1;const y=[];if(t>0&&y.push(new Promise((e=>{setTimeout((()=>{b=!0,e()}),t)}))),y.push(new Promise(((e,t)=>{const r=a?l:s,o={locateFile:(e,t)=>{if(a&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob)return URL.createObjectURL(new Blob([n(4154)],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(m)return m;const e=null!=g?g:t;return"ort-wasm-simd.wasm"===_?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===_?e+"ort-wasm-simd-threaded.jsep.wasm":e+_}return t+e}};if(a)if("undefined"==typeof Blob)o.mainScriptUrlOrBlob=i.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;o.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(o).then((t=>{p=!1,c=!0,u=t,e()}),(e=>{p=!1,d=!0,t(e)}))}))),await Promise.race(y),b)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&u)return u;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!c||p||d||(p=!0,null===(e=u.PThread)||void 0===e||e.terminateAllThreads(),u=void 0,p=!1,c=!1,d=!0)}},1497:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),o=n.lengthBytesUTF8(e)+1,a=n._malloc(o);return n.stringToUTF8(e,a,o),t.push(a),a},t.iterateExtraOptions=(e,n,r,o)=>{if("object"==typeof e&&null!==e){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach((([e,a])=>{const i=n?n+e:e;if("object"==typeof a)(0,t.iterateExtraOptions)(a,i+".",r,o);else if("string"==typeof a||"number"==typeof a)o(i,a.toString());else{if("boolean"!=typeof a)throw new Error("Can't handle extra config type: "+typeof a);o(i,a?"1":"0")}}))},t.checkLastError=e=>{const t=(0,r.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const r=t.HEAP32[n/4],o=t.HEAPU32[n/4+1],a=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}},8050:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(6614),o=n.n(r);function a(){return o()('/*!\n* ONNX Runtime Web v1.16.0-dev.20230910-24f0893d3c\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var e={3838:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGpuBackend=void 0;const r=n(4955),a=n(7771),i=n(8510),o=n(8305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.supportTimestampQuery=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error("WebGpuBackend: WebGPU is not available.");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("WebGpuBackend: Failed to get GPU adapter.");this.env=e;const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ}};t.features.has("timestamp-query-inside-passes")&&(this.supportTimestampQuery=!0,n.requiredFeatures=["timestamp-query-inside-passes"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,a.createGpuDataManager)(this),this.programManager=new o.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,r.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.supportTimestampQuery&&(this.profilingQuerySet=this.device.createQuerySet({type:"timestamp",count:2})),Object.defineProperty(this.env.webgpu,"device",{value:this.device})}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,a,i){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const o=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);o[e]=n}const s=((e,t)=>{const n=t.map((e=>`${e.dataType};${e.dims.join(",")}`)).join("|");let r=e.name;return e.cacheHint&&(r+="["+e.cacheHint+"]"),r+=":"+n,r})(e,t);let u=this.programManager.getArtifact(s);const l=u?u.programInfo:"function"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const d=[],p=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-3||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);if(-3===c[e])continue;const t=-1===c[e],n=-2===c[e],r=t||n?i(l.outputs[e].dataType,l.outputs[e].dims):a(c[e],l.outputs[e].dataType,l.outputs[e].dims),o=this.gpuDataManager.get(r.data);if(!o)throw new Error(`no GPU data for output: ${r.data}`);if(t&&this.temporaryData.push(o),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(o)}d.push(r),p.push(o)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,r.LOG_DEBUG)("info",(()=>`[ProgramManager] run "${l.name}" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,t,o,p,f),d}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),r=t();r.set(new Uint8Array(n,0,r.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){const a=i.WEBGPU_OP_RESOLVE_RULES.get(e);if(!a)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r,a[0],[a[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){const a=this.kernels.get(e);if(!a)throw new Error(`kernel not created: ${e}`);const[i,o,s,u]=a;if(null!==this.currentKernelId)throw new Error(`kernel "[${i}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),(0,r.LOG_DEBUG)("info",(()=>`[WebGPU] Start to run kernel "[${i}] ${o}"...`));const l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),s(t,u[1]),0}catch(e){return(0,r.LOG_DEBUG)("warning",`[WebGPU] Kernel "[${i}] ${o}" failed. Error: ${e}`),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${i}] ${o}": ${e.message}`:null)));for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},7675:(e,t,n)=>{"use strict";t.S=void 0;const r=n(7917),a=n(3838),i=n(4955),o=n(6952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");const e=o.ShapeUtil.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(o.ShapeUtil.size(e)!==o.ShapeUtil.size(this.dims))throw new Error("Invalid new shape");return new s(this.module,this.dataType,this.data,e)}}class u{get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;const r=e.HEAPU32;let a=n>>2;this.opKernelContext=r[a++];const i=r[a++];this.outputCount=r[a++],this.customDataOffset=r[a++],this.customDataSize=r[a++];const o=[];for(let t=0;t<i;t++){const t=r[a++],n=r[a++],i=r[a++],u=[];for(let e=0;e<i;e++)u.push(r[a++]);o.push(new s(e,t,n,u))}this.inputs=o}compute(e,t){var n,a,i;const u=null!==(a=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>"number"==typeof e?this.inputs[e]:e)))&&void 0!==a?a:this.inputs,l=null!==(i=null==t?void 0:t.outputs)&&void 0!==i?i:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const a=n*o.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(a).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.S=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP");const r=new a.WebGpuBackend;await r.initialize(t),n({backend:r},(e=>r.alloc(e)),(e=>r.free(e)),((t,n,a,o=!1)=>{if(o)(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${a}`)),r.memcpy(t,n);else{(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${a}`));const o=e.HEAPU8.subarray(t,t+a);r.upload(n,o)}}),(async(t,n,a)=>{(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${a}`)),await r.download(t,(()=>e.HEAPU8.subarray(n,n+a)))}),((n,a,i)=>r.createKernel(n,a,i,t.debug||"default"===t.webgpu.profilingMode?e.UTF8ToString(e._JsepGetNodeName(a)):`${a}`)),(e=>r.releaseKernel(e)),((t,n,a)=>{(0,i.LOG_DEBUG)("verbose",(()=>`[WebGPU] jsepRun: sessionId=${a.sessionId}, kernel=${t}, contextDataOffset=${n}`));const o=new u(e,r,n);return r.computeKernel(t,o,a.errors)}))}}},4955:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const r=n(7917),a=["V","I","W","E","F"];let i,o;t.configureLogger=(e,t)=>{i=e,o=t},t.LOG=(e,t)=>{const n=(0,r.logLevelStringToEnum)(e);var o,s;n>=(0,r.logLevelStringToEnum)(i)&&(o=n,s="function"==typeof t?t():t,console.log(`[${a[o]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{o&&(0,t.LOG)(...e)}},6952:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const a=e.length,i=t.length;if(0===a)return t;if(0===i)return e;const o=Math.max(e.length,t.length),s=new Array(o);if(r){if(a<2||i<2)return;const r=n.calcMatMulShape([e[a-2],e[a-1]],[t[i-2],t[i-1]]);if(void 0===r)return;[s[o-2],s[o-1]]=r}for(let n=r?3:1;n<=o;n++){const r=a-n<0?1:e[a-n],u=i-n<0?1:t[i-n];if(r!==u&&r>1&&u>1)return;s[o-n]=Math.max(r,u)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let a=1;a<=n;a++)if(1!==e[n-a]&&e[n-a]!==t[r-a])return!1;return!0}}t.BroadcastUtil=r;class a{static size(e){return a.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let a=t;a<n;a++){if(e[a]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[a]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=a;class i{static adjustPoolAttributes(e,t,n,r,a,i){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("dilations should be greater than or equal to 1")}else a.push(1);for(let e=0;e<2*n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[e]>=n[e]||i[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,t,n,r,a,o,s){if(s){if(a.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)i.adjustPadAndReturnShape(e[u+(o?1:2)],t[u],n[u],r[u],a,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,a,o,s){if(t.length<=0)throw new Error("input shape must be of size greater than 0");const u=[t[0],t[1]];return i.computeShapeHelper(e,t,u,n,r,a,o,s),u}static computeConvOutputShape(e,t,n,r,a,o,s){if(e.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const u=[e[0],t[0]];return i.computeShapeHelper(!1,e,u,n,r,a,o,s),u}static computeShapeHelper(e,t,n,r,a,o,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(i.adjustPadAndReturnShape(t[e+2],r[e],a[e],o[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,r,a,i,o,s){const u=n*(r-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+a[i]+a[o]-u)/t+1);switch(s){case"VALID":return a[i]=0,a[o]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const n=((e+t-1)/t-1)*t+r-e;return a[i]="SAME_LOWER"===s?Math.floor((n+1)/2):Math.floor(n/2),a[o]=n-a[i],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}}t.PoolConvUtil=i,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,a,i){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,s,u;t?(o=e[1],s=e[0]):(o=e[0],s=e[1]);let l=-1;if(a?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(o<=0||u<=0||s<=0)throw new Error("invalid shape specified");if(i&&!r.isValidBroadcast(i,[o,u]))throw new Error("gemm: invalid bias shape for broadcast");return[o,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},7771:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGpuDataManager=void 0;const r=n(4955),a=n(1163),i=e=>16*Math.ceil(e/16);let o=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,a=t.byteOffset,o=t.byteLength,s=i(o),u=this.storageCache.get(e);if(!u)throw new Error("gpu data for uploading does not exist");if(u.originalSize!==o)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${o}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,a,o)),l.unmap();const d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");const r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");const a=i(n.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,a)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=i(e);let s;if((t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let e=this.freeBuffers.get(n);e||(e=[],this.freeBuffers.set(n,e)),s=e.length>0?e.pop():this.backend.device.createBuffer({size:n,usage:t})}else s=this.backend.device.createBuffer({size:n,usage:t});const u={id:o++,type:a.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return(0,r.LOG_DEBUG)("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e){const t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");const n=this.backend.getCommandEncoder();this.backend.endComputePass();const r=i(t.originalSize),a=this.backend.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});return n.copyBufferToBuffer(t.gpuData.buffer,0,a,0,r),this.backend.flush(),new Promise((e=>{a.mapAsync(GPUMapMode.READ).then((()=>{const t=a.getMappedRange().slice(0);a.destroy(),e(t)}))}))}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();this.buffersForUploadingPending=[];for(const e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map,this.freeBuffers=new Map}}t.createGpuDataManager=(...e)=>new s(...e)},8510:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const o=n(1868),s=i(n(504)),u=n(513),l=n(9770),c=n(7640),d=n(8856),p=n(8405),f=n(9218),h=n(4271),g=n(1798),m=n(6145),y=n(1522),b=i(n(5262)),v=n(6031),w=n(4566),$=n(8906),x=n(5101),S=n(6198),_=n(2067),O=n(8699),A=n(2625),C=i(n(9302));t.WEBGPU_OP_RESOLVE_RULES=new Map([["Abs",[C.abs]],["Acos",[C.acos]],["Acosh",[C.acosh]],["Add",[s.add]],["ArgMax",[o.argMax,o.parseArgMinMaxAttributes]],["ArgMin",[o.argMin,o.parseArgMinMaxAttributes]],["Asin",[C.asin]],["Asinh",[C.asinh]],["Atan",[C.atan]],["Atanh",[C.atanh]],["AveragePool",[b.averagePool,b.parseAveragePoolAttributes]],["Cast",[C.cast,C.parseCastAttributes]],["Ceil",[C.ceil]],["ClipV10",[C.clipV10]],["Clip",[C.clip]],["Concat",[u.concat,u.parseConcatAttributes]],["Conv",[l.conv,l.parseConvAttributes]],["ConvTranspose",[c.convTranspose,c.parseConvTransposeAttributes]],["Cos",[C.cos]],["Cosh",[C.cosh]],["Div",[s.div]],["Elu",[C.elu,C.parseAlphaAttributes]],["Equal",[s.equal]],["Erf",[C.erf]],["Exp",[C.exp]],["Expand",[d.expand]],["Floor",[C.floor]],["Gather",[p.gather,p.parseGatherAttributes]],["GatherElements",[f.gatherElements,f.parseGatherElementsAttributes]],["Gelu",[C.gelu]],["Gemm",[h.gemm,h.parseGemmAttributes]],["GlobalAveragePool",[b.globalAveragePool,b.parseGlobalAveragePoolAttributes]],["GlobalMaxPool",[b.globalMaxPool,b.parseGlobalMaxPoolAttributes]],["Greater",[s.greater]],["GreaterOrEqual",[s.greaterOrEqual]],["InstanceNormalization",[g.instanceNorm,g.parseInstanceNormAttributes]],["LayerNormalization",[m.layerNorm,m.parseLayerNormAttributes]],["LeakyRelu",[C.leakyRelu,C.parseAlphaAttributes]],["Less",[s.less]],["LessOrEqual",[s.lessOrEqual]],["Log",[C.log]],["MatMul",[y.matMul]],["MaxPool",[b.maxPool,b.parseMaxPoolAttributes]],["Mul",[s.mul]],["Neg",[C.neg]],["Not",[C.not]],["Pow",[s.pow]],["Reciprocal",[C.reciprocal]],["ReduceMin",[v.reduceMin,v.parseReduceAttributes]],["ReduceMean",[v.reduceMean,v.parseReduceAttributes]],["ReduceMax",[v.reduceMax,v.parseReduceAttributes]],["ReduceSum",[v.reduceSum,v.parseReduceAttributes]],["ReduceProd",[v.reduceProd,v.parseReduceAttributes]],["ReduceL1",[v.reduceL1,v.parseReduceAttributes]],["ReduceL2",[v.reduceL2,v.parseReduceAttributes]],["ReduceLogSum",[v.reduceLogSum,v.parseReduceAttributes]],["ReduceLogSumExp",[v.reduceLogSumExp,v.parseReduceAttributes]],["ReduceSumSquare",[v.reduceSumSquare,v.parseReduceAttributes]],["Relu",[C.relu]],["Resize",[w.resize,w.parseResizeAttributes]],["Sigmoid",[C.sigmoid]],["Sin",[C.sin]],["Sinh",[C.sinh]],["Slice",[x.slice,x.parseSliceAttributes]],["SkipLayerNormalization",[$.skipLayerNorm,$.parseSkipLayerNormAttributes]],["Split",[_.split,_.parseSplitAttributes]],["Sqrt",[C.sqrt]],["Softmax",[S.softmax,S.parseSoftmaxAttributes]],["Sub",[s.sub]],["Tan",[C.tan]],["Tanh",[C.tanh]],["ThresholdedRelu",[C.thresholdedRelu,C.parseAlphaAttributes]],["Tile",[O.tile]],["Transpose",[A.transpose,A.parseTransposeAttributes]]])},1427:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>"",t.biasActivationSnippet=(e,t)=>`\\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\\n      ${t?"value = activation(value, coords);":""}\\n      `},9456:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(4955),a=n(6952),i=n(1163),o=n(1427),s=n(4085),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,d,p,f,h)=>{const g="NHWC"===n.format,m=g?e[0].dims[3]:e[0].dims[1],y=l[0],b=g?l[2]:l[3],v=g?l[1]:l[2],w=g?l[3]:l[1],$=((m%4==0||m%3==0)&&g||b%4==0&&!g)&&w%4==0,x=g?w:b*v,S=g?b*v:w,_=$?[8,8,1]:[x<=4?4:16,x>4&&S<=4?4:16,1],O=$?[4,4,1]:[x<=4?1:2,x>4&&S<=4?1:2,1],A=[Math.ceil(x/_[0]/O[0]),Math.ceil(S/_[1]/O[1]),Math.ceil(y/_[2]/O[2])];(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${A}`));const C=$?g&&m%4!=0?3:4:O[0],T=_[1]*O[1],I=_[0]*O[0],E=Math.max(_[0]*C,_[1]),k=c%T==0,P=d%I==0,M=p%E==0,R=$?[C,4,4]:[1,1,1],D=[`@group(0) @binding(0) var<storage, read> x: array<${$&&4===C?"vec4<f32>":"f32"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${$?"vec4<f32>":"f32"}>;`];let z=`\\n      fn setOutputAtIndex(flatIndex : i32, value : ${$?"vec4<f32>":"f32"}) {\\n        result[flatIndex] = ${$?"vec4<f32>":"f32"}(value);\\n      }\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${$?"vec4<f32>":"f32"}) {\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\n        setOutputAtIndex(flatIndex ${$?"/ 4":""}, value);\\n      }`;return f&&(D.push(`@group(0) @binding(2) var<storage, read> bias: array<${$?"vec4<f32>":"f32"}>;`),z+=`\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${$?"vec4<f32>":"f32"} {\\n          return bias[coords.${g?"w":"y"}${$?"/ 4":""}];\\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:A[0],y:A[1],z:A[2]}),getShaderSource:()=>`\\n        ${s.utilFunctions}\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\n        ${D.join("")}\\n        @group(0) @binding(${D.length}) var<storage, read_write> result: array<${$?"vec4<f32>":"f32"}>;\\n        //@group(0) @binding(${D.length+1}) var<uniform> uniforms: Uniforms;\\n\\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(",")});\\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(",")});\\n        const outShape : vec4<i32> = vec4<i32>(${l.join(",")});\\n        const outShapeStrides : vec3<i32> = vec3<i32>(${a.ShapeUtil.computeStrides(l).slice(0,3).join(",")});\\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\\n        const dimAOuter : i32 = ${c};\\n        const dimBOuter : i32 = ${d};\\n        const dimInner : i32 = ${p};\\n        ${z}\\n        ${((e,t,n,r,a=!1,i,s=!1,u=4,l=4,c=4)=>{const d=e?"\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\n    ":"\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\n    ",p=e?"\\n    let coords = vec4<i32>(\\n      batch,\\n      row / outWidth,\\n      row % outWidth,\\n      col);\\n    ":"\\n    let coords = vec4<i32>(\\n      batch,\\n      row,\\n      col / outWidth,\\n      col % outWidth);\\n    ",f=e?"xShape[1]":"xShape[2]",h=e?"xShape[2]":"xShape[3]",g=e?"row":"col",m=e?"col":"row",y=`\\n    let inChannels = wShape[2];\\n    let outWidth = ${e?"outShape[2]":"outShape[3]"};\\n    let outRow = ${g} / outWidth;\\n    let outCol = ${g} % outWidth;\\n\\n    let WRow = ${m} / (filterDims[1] * inChannels);\\n    let WCol = ${m} / inChannels % filterDims[1];\\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\\n    let xCh = ${m} % inChannels;\\n    var resData = ${(0,o.typeSnippet)(u)}(0.0);\\n    // The bounds checking is always needed since we use it to pad zero for\\n    // the \'same\' padding type.\\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\\n      ${d}\\n      let xIndex = getIndexFromCoords4D(coord, xShape);\\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\\n    }\\n    return resData;`,b=e?t&&r?`\\n    let col = colIn * ${u};\\n    ${y}`:`\\n    let col = colIn * ${u};\\n    if (row < dimAOuter && col < dimInner) {\\n      ${y}\\n    }\\n    return ${(0,o.typeSnippet)(u)}(0.0);`:r&&n?`\\n    let col = colIn * ${u};\\n    ${y}`:`\\n    let col = colIn * ${u};\\n    if (row < dimInner && col < dimBOuter) {\\n      ${y}\\n    }\\n    return ${(0,o.typeSnippet)(u)}(0.0);`,v=`${(e=>{switch(e){case 1:return"return w[row * wShape[3] + colIn];";case 4:return"return w[row * wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,w=(0,o.typeSnippet)(c),$=e?(0,o.typeSnippet)(u):(0,o.typeSnippet)(l),x=e?(0,o.typeSnippet)(l):(0,o.typeSnippet)(u);return`\\n    ${(0,o.activationFnSnippet)(i,s,4===c,4)}\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${$} {\\n      ${e?b:v}\\n    }\\n\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {\\n      ${e?v:b}\\n    }\\n\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\\n      let col = colIn * ${c};\\n      if (row < dimAOuter && col < dimBOuter)\\n      {\\n      var value = valueIn;\\n      let outWidth = ${e?"outShape[2]":"outShape[3]"};\\n      ${p}\\n      ${(0,o.biasActivationSnippet)(a,i)}\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\n      }\\n    }`})(g,k,P,M,f,void 0,!1,R[0],R[1],R[2])}\\n            ${$?(0,u.makeMatMulPackedVec4Source)(O,_,void 0,!g,E):(0,u.makeMatMulPackedSource)(O,_,void 0,!g,E,!1,void 0,h)}`})}},6514:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConvTranspose2DProgramInfo=void 0;const r=n(4955),a=n(6952),i=n(1163),o=n(2075);t.createConvTranspose2DProgramInfo=(e,t,n,s)=>{const u=e.length>2,l=n.outputShape,c=a.ShapeUtil.size(l),d=[Math.ceil(c/64),1,1];return(0,r.LOG_DEBUG)("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${d}`)),Object.assign(Object.assign({},t),{outputs:[{dims:s?s(l):l,dataType:e[0].dataType,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:d[0],y:d[1],z:d[2]}),getShaderSource:t=>((e,t,n,r,i,s,u=!1)=>{const l="NHWC"===n.format,c=l?1:2,d=l?2:3,p=l?3:1,f=a.ShapeUtil.size(r),h=u?2:1,g=n.group,m=t[1].dims,y=m[0]/g,b=m[1];let v=`\\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?"vec4<f32>":"f32"}) {\\n    result[flatIndex] = ${u?"vec4<f32>":"f32"}(value);\\n  }`;i&&(v+=`\\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?"vec4<f32>":"f32"} {\\n      return bias[coords.${l?"w":"y"}${u?"/ 4":""}];\\n    }`);const w=u?4:1,$=(0,o.inputVariable)("W",t[1].dataType,t[1].dims,w),x=(0,o.inputVariable)("Dy",t[0].dataType,t[0].dims,w),S=[x,$];i&&S.push((0,o.inputVariable)("bias",t[2].dataType,[r[p]],w));const _=(0,o.outputVariable)("result",t[0].dataType,r,w),O=`{\\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / outShape[1];\\n        let r = ${s?"global_id.z":"workgroup_id.z"} % outShape[1];\\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${h};\\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\\n\\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(pads);\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        var dotProd: array<vec4<f32>, ${h}>;\\n        for (var i = 0; i < ${h}; i++) {\\n          dotProd[i] = vec4<f32>(0.0);\\n        }\\n        for (var wR: u32 = 0; wR < filterDims[0]; wR = wR + 1) {\\n          var dyR = (f32(dyCorner.x) + f32(wR)) / f32(strides.x);\\n          let wRPerm = filterDims[0] - 1 - wR;\\n          if (dyR < 0.0 || dyR >= f32(outBackprop[1]) ||\\n              fract(dyR) > 0.0 || wRPerm < 0) {\\n            continue;\\n          }\\n          let idyR: u32 = u32(dyR);\\n\\n          for (var wC: u32 = 0; wC < filterDims[1]; wC = wC + 1) {\\n            let dyC = (f32(dyCorner.y) + f32(wC)) / f32(strides.y);\\n            let dyC2 = (f32(dyCorner.y) + 1.0 + f32(wC)) / f32(strides.y);\\n            let wCPerm = filterDims[1] - 1 - wC;\\n            if (wCPerm < 0) {\\n              continue;\\n            }\\n            var bDyCVal = true;\\n            var bDyCVal2 = true;\\n            if (dyC < 0.0 || dyC >= f32(outBackprop[2]) ||\\n                fract(dyC) > 0.0) {\\n              bDyCVal = false;\\n            }\\n            if (dyC2 < 0.0 || dyC2 >= f32(outBackprop[2]) ||\\n                fract(dyC2) > 0.0) {\\n              bDyCVal2 = false;\\n            }\\n\\n            let idyC: u32 = u32(dyC);\\n            let idyC2: u32 = u32(dyC2);\\n            if (bDyCVal && bDyCVal2) {\\n              let d2Length = outBackprop[3];\\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\\n\\n                var xValue = ${x.get("batch","idyR","idyC","d2")};\\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[0] = dotProd[0] + tmpval;\\n\\n                xValue =  ${x.get("batch","idyR","idyC2","d2")};\\n\\n                dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\\n                                                    dot(xValue, wValue1),\\n                                                    dot(xValue, wValue2),\\n                                                    dot(xValue, wValue3));\\n              }\\n            } else if (bDyCVal) {\\n              let d2Length = outBackprop[${p}];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\\n\\n                var xValue = ${x.get("batch","idyR","idyC","d2")};\\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[0] = dotProd[0] + tmpval;\\n              }\\n            } else if (bDyCVal2) {\\n              let d2Length = outBackprop[3];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\\n\\n                var xValue = ${x.get("batch","idyR","idyC2","d2")};\\n                let tmpval = vec4<f32>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[1] = dotProd[1] + tmpval;\\n              }\\n            }\\n          }\\n        }\\n\\n        for (var i: u32 = 0; i < ${h}; i = i + 1) {\\n          let value = dotProd[i] + ${i?"bias[c+i]":"0.0"};\\n          ${_.set("batch","r","c + i","d1","value")};\\n        }\\n      }`,A=`\\n          let outputIndices = ${_.offsetToIndices("global_idx")};\\n          let batch = ${_.indicesGet("outputIndices",0)};\\n          let d1 = ${_.indicesGet("outputIndices",p)};\\n          let r = ${_.indicesGet("outputIndices",c)};\\n          let c = ${_.indicesGet("outputIndices",d)};\\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - pads;\\n          let dyRCorner = dyCorner.x;\\n          let dyCCorner = dyCorner.y;\\n          let groupId = d1 / ${b};\\n          let wOutChannel = d1 - groupId * ${b};\\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n          // ? = to be determined. : = across all values in that axis.\\n          var dotProd = 0.0;\\n          for (var wR: u32 = 0; wR < effectiveFilterDims.x; wR = wR + 1) {\\n            if (wR % dilations.x != 0) {\\n              continue;\\n            }\\n            let dyR = (f32(dyRCorner) + f32(wR)) / f32(strides[0]);\\n            let wRPerm = filterDims.x - 1 - wR / dilations.x;\\n            if (dyR < 0.0 || dyR >= f32(outBackprop[${c}]) || fract(dyR) > 0.0 ||\\n                wRPerm < 0) {\\n              continue;\\n            }\\n            let idyR: u32 = u32(dyR);\\n\\n            for (var wC: u32 = 0; wC < effectiveFilterDims.y; wC = wC + 1) {\\n              if (wC % dilations.y != 0) {\\n                continue;\\n              }\\n              let dyC = (f32(dyCCorner) + f32(wC)) / f32(strides.y);\\n              let wCPerm = filterDims.y - 1 - wC / dilations.y;\\n              if (dyC < 0.0 || dyC >= f32(outBackprop[${d}]) ||\\n                  fract(dyC) > 0.0 || wCPerm < 0) {\\n                continue;\\n              }\\n              let idyC: u32 = u32(dyC);\\n\\n              for (var d2: u32 = 0; d2 < ${y}; d2 = d2 + 1) {\\n                let inputChannel = groupId * ${y} + d2;\\n                let xValue = ${l?x.get("batch","idyR","idyC","inputChannel"):x.get("batch","inputChannel","idyR","idyC")};\\n                let wValue = ${$.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\\n                dotProd = dotProd + xValue * wValue;\\n              }\\n            }\\n          }\\n          let value = dotProd + ${i?"bias[d1]":"0.0"};\\n          ${_.setByOffset("global_idx","value")};\\n        `;return`\\n  ${e.declareVariables(...S,_)}\\n  ${v}\\n  const outShape : vec4<u32> = vec4<u32>(${r.join(",")});\\n  const outBackprop : vec4<u32> = vec4<u32>(${t[0].dims.join(",")});\\n  const strides : vec2<u32> = vec2<u32>(${n.strides[0]}, ${n.strides[1]});\\n  const filterDims : vec2<u32> = vec2<u32>(${n.kernelShape[l?1:2]}, ${n.kernelShape[l?2:3]});\\n  const dilations : vec2<u32> = vec2<u32>(${n.dilations[0]}, ${n.dilations[1]});\\n  const effectiveFilterDims : vec2<u32> = filterDims + vec2<u32>(\\n          ${n.dilations[0]<=1?0:(n.kernelShape[l?1:2]-1)*(n.dilations[0]-1)},\\n          ${n.dilations[1]<=1?0:(n.kernelShape[l?2:3]-1)*(n.dilations[1]-1)});\\n  const pads : vec2<i32> = vec2<i32>(i32(effectiveFilterDims[0]) - 1 - (${n.pads[0]+n.pads[2]})/2,\\n                                     i32(effectiveFilterDims[1]) - 1 - (${n.pads[1]+n.pads[3]})/2);\\n    ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)};\\n  ${u?O:A}}`})(t,e,n,l,u,1===d[1]&&1===d[2])})}},4085:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.utilFunctions=void 0,t.utilFunctions="\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\n}\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\\n}\\n"},158:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createMatmulProgramInfo=t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0;const r=n(6952),a=n(1163),i=n(2075),o=n(3997),s=n(1427);t.makeMatMulPackedVec4Source=(e,t,n,r=!1,a=32,i=!1,o=32)=>{const s=t[1]*e[1],u=t[0]*e[0],l=r?s:a,c=r?a:s,d=l/t[0],p=a/t[1];if((!r||4!==d||4!==e[1])&&(r||3!==d&&4!==d)||l%t[0]!=0||a%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${r} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.\\n      Otherwise, innerElementSize ${d} must be 3 or 4.\\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\\nvar<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;\\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${a}>;\\n\\nconst rowPerThread = ${e[1]};\\nconst colPerThread = ${e[0]};\\nconst innerElementSize = ${d};\\nconst tileInner = ${a};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n  let localRow = i32(localId.y);\\n  let tileRow = localRow * rowPerThread;\\n  let tileCol = i32(localId.x);\\n\\n  let globalRow =i32(globalId.y) * rowPerThread;\\n  let globalCol = i32(globalId.x);\\n  let batch = ${i?"0":"i32(globalId.z)"};\\n  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}\\n  let globalRowStart = i32(workgroupId.y) * ${s};\\n\\n  let numTiles = ${i?`${Math.ceil(o/a)}`:"(dimInner - 1) / tileInner + 1"};\\n  var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};\\n\\n  var acc: array<vec4<f32>, rowPerThread>;\\n\\n  // Loop over shared dimension.\\n  let tileRowB = localRow * ${p};\\n  for (var t = 0; t < numTiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let inputRow = tileRow + innerRow;\\n          let inputCol = tileCol;\\n          ${((e,t)=>e?`\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          kStart + inputRow,\\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\\n        `:`\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          globalRow + innerRow,\\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\\n        `)(r,n)}\\n      }\\n\\n      // Load one tile of B into local memory.\\n      for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\\n          let inputRow = tileRowB + innerRow;\\n          let inputCol = tileCol;\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\n          ${3===d?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\\n\\n          ${((e,t)=>e?`\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\\n        }`:`\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          let ACached = mm_Asub[tileRow + i][k];\\n          acc[i] = BCached0 * ACached.x + acc[i];\\n          acc[i] = BCached1 * ACached.y + acc[i];\\n          acc[i] = BCached2 * ACached.z + acc[i];\\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\\n        }`)(r,d)}\\n      }\\n\\n      workgroupBarrier();\\n  }\\n\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\n  }\\n}`};const u=(e,t)=>e?`\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              kStart + inputRow,\\n              globalRowStart + inputCol${t?", batchIndices":""});\\n            `:`\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              globalRowStart + inputRow,\\n              kStart + inputCol${t?", batchIndices":""});\\n            `;t.makeMatMulPackedSource=(e,t,n,r=!1,a=32,i=!1,o=32,s=!1)=>{const l=e[1]*t[1],c=e[0]*t[0],d=r?l:a,p=r?a:l;if(p%t[1]!=0||d%t[0]!=0||a%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);const f=p/t[1],h=d/t[0],g=a/t[1],m=s?`\\n    let localRow = i32(localId.y);\\n    let localCol = i32(localId.x);\\n    let globalRowStart = i32(workgroupId.y) * ${l};\\n    let globalColStart = i32(workgroupId.x) * ${c};\\n\\n    // Loop over shared dimension.\\n    for (var t = 0; t < numTiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\\n        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\\n          ${u(r,n)}\\n        }\\n      }\\n      // Load one tile of B into local memory.\\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\\n            for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n            kStart + inputRow,\\n            globalColStart + inputCol${n?", batchIndices":""});\\n        }\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      var BCached : array<f32, colPerThread>;\\n      for (var k = 0; k < tileInner; k = k + 1) {\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\\n        }\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\n                ACached * BCached[innerCol];\\n          }\\n        }\\n      }\\n      workgroupBarrier();\\n    }\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\n      }\\n    }\\n    `:`\\nlet tileRow = i32(localId.y) * rowPerThread;\\nlet tileCol = i32(localId.x) * colPerThread;\\n\\nlet globalRow = i32(globalId.y) * rowPerThread;\\nlet globalCol = i32(globalId.x) * colPerThread;\\nlet globalRowStart = i32(workgroupId.y) * ${l};\\n\\nlet tileRowA = i32(localId.y) * ${f};\\nlet tileColA = i32(localId.x) * ${h};\\nlet tileRowB = i32(localId.y) * ${g};\\n// Loop over shared dimension.\\nfor (var t = 0; t < numTiles; t = t + 1) {\\n  // Load one tile of A into local memory.\\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < ${h}; innerCol = innerCol + 1) {\\n      let inputRow = tileRowA + innerRow;\\n      let inputCol = tileColA + innerCol;\\n      ${u(r,n)}\\n    }\\n  }\\n\\n  // Load one tile of B into local memory.\\n  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n      let inputRow = tileRowB + innerRow;\\n      let inputCol = tileCol + innerCol;\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n        kStart + inputRow,\\n        globalCol + innerCol${n?", batchIndices":""});\\n    }\\n  }\\n  kStart = kStart + tileInner;\\n  workgroupBarrier();\\n\\n  // Compute acc values for a single thread.\\n  var BCached : array<f32, colPerThread>;\\n  for (var k = 0; k < tileInner; k = k + 1) {\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\n    }\\n\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(r)}\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\n      }\\n    }\\n  }\\n\\n  workgroupBarrier();\\n}\\n\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\n        acc[innerRow][innerCol]);\\n  }\\n}\\n`;return`\\n  var<workgroup> mm_Asub : array<array<f32, ${d}>, ${p}>;\\n  var<workgroup> mm_Bsub : array<array<f32, ${c}>, ${a}>;\\n  const rowPerThread = ${e[1]};\\n  const colPerThread = ${e[0]};\\n  const tileInner = ${a};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n    let batch = ${i?"0":"i32(globalId.z)"};\\n    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}\\n    let numTiles = ${i?`${Math.ceil(o/a)}`:"(dimInner - 1) / tileInner + 1"};\\n    var kStart = ${i?`i32(globalId.z) * ${o}`:"0"};\\n\\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\\n\\n    // Without this initialization strange values show up in acc.\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        acc[innerRow][innerCol] = 0.0;\\n      }\\n    }\\n    ${m}\\n  }\\n`},t.createMatmulProgramInfo=(e,n,u,l,c)=>{const d=n[0].dims,p=n[1].dims,f=d.slice(0,-2),h=p.slice(0,-2),g=c?c.slice(0,-2):l.slice(0,-2),m=(0,i.inputVariable)("batchDims",n[0].dataType,g),y=[(0,i.inputVariable)("batchADims",n[0].dataType,f),(0,i.inputVariable)("batchBDims",n[0].dataType,h),m],b=r.ShapeUtil.size(g),v=d[d.length-2],w=d[d.length-1],$=p[p.length-1],x=w%4==0&&$%4==0,{activationFunction:S,applyActivation:_}=(0,o.getActicationSnippet)(u),O=v<=8?[4,1,1]:[4,4,1],A=[8,8,1],C=[Math.ceil($/A[0]/O[0]),Math.ceil(v/A[1]/O[1]),Math.ceil(b/A[2]/O[2])],T=x?4:1,I=(0,i.inputVariable)("a",n[0].dataType,[...f,v,w/T],T),E=(0,i.inputVariable)("b",n[1].dataType,[...h,w,$/T],T),k=(0,i.outputVariable)("result",n[0].dataType,[b,v,$/T],T);y.push(I),y.push(E),y.push(k);const P=[I,E],M=n.length>2,R=((e,t,n,r)=>{const a=r[0],o=r[1],u=r[2],l=r[3],c=r[4],d=r[5],p=(0,i.getBroadcastDims)(a.shape,u.shape),f=(0,i.getBroadcastDims)(o.shape,u.shape);return`\\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${(0,s.typeSnippet)(e)} {\\n      var value = ${(0,s.typeSnippet)(e)}(0.0);\\n      let col = colIn * ${e};\\n      if(row < dimAOuter && col < dimInner)\\n      {\\n        ${(()=>{const e=l.shape.length,t=u.shape.length;let n=`var aIndices: ${l.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\\naIndices[${r}] = ${t>1?`batchIndices[${a}]`:"batchIndices"};`;return p.forEach((e=>{n+=`\\naIndices[${e}] = 0;`})),n+=`\\naIndices[${e-2}] = u32(row);\\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\\n        value = ${l.getByIndices("aIndices")};\\n      }\\n      return value;\\n    }\\n\\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${(0,s.typeSnippet)(e)} {\\n      var value = ${(0,s.typeSnippet)(e)}(0.0);\\n      let col = colIn * ${e};\\n      if(row < dimInner && col < dimBOuter)\\n      {\\n        ${(()=>{const e=c.shape.length,t=u.shape.length;let n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\\nbIndices[${r}] = ${t>1?`batchIndices[${a}]`:"batchIndices"};`;return f.forEach((e=>{n+=`\\nbIndices[${e}] = 0;`})),n+=`\\nbIndices[${e-2}] = u32(row);\\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\\n        value = ${c.getByIndices("bIndices")};\\n      }\\n      return value;\\n    }\\n\\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${(0,s.typeSnippet)(e)}) {\\n      let col = colIn * ${e};\\n      if (row < dimAOuter && col < dimBOuter) {\\n        var value = valueIn;\\n        let coords = vec3<i32>(batch, row, colIn);\\n        ${t?"value = value + bias[colIn];":""}\\n        ${n}\\n        ${d.setByIndices("vec3<u32>(coords)","value")}\\n      }\\n    }\\n    `})(T,M,_,y);return M&&P.push((0,i.inputVariable)("bias",n[2].dataType,[$/T],T)),Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:n[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const dimAOuter: i32 = ${v};\\n  const dimBOuter: i32 = ${$};\\n  const dimInner: i32 = ${w};\\n  ${e.declareVariables(...P,k)}\\n  ${R}\\n  ${S}\\n  ${x?(0,t.makeMatMulPackedVec4Source)(O,A,m):(0,t.makeMatMulPackedSource)(O,A,m)}\\n                   ${m.impl()}`,dispatchGroup:()=>({x:C[0],y:C[1],z:C[2]})})}},1868:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseArgMinMaxAttributes=t.argMax=t.argMin=void 0;const r=n(387),a=n(1163),i=n(6031),o=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},s=(e,t,n,o)=>{const s=1===e.length?n:((e,t)=>(0,r.createAttributeWithCacheKey)({axis:t.axis,keepDims:t.keepDims,selectLastIndex:t.selectLastIndex}))(0,n),u=s.cacheKey+e.map((e=>e.dims.toString())).join("_"),l={name:t,inputTypes:[a.GpuDataType.default],cacheHint:u};return Object.assign(Object.assign({},l),{get:()=>(0,i.createReduceProgramInfo)(l,[e[0]],o,[s.axis],7,s.keepDims)})};t.argMin=(e,t)=>{o(e.inputs),e.compute(s(e.inputs,"ArgMin",t,((e,n,r)=>{const a=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`inputIndices[${t}] = 0;`);return[`${a.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};\\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?"<=":"<"} value) {\\n         value = ${e.getByOffset("inputOffset")};\\n         bestIndex = i32(lastIndex);\\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.argMax=(e,t)=>{o(e.inputs),e.compute(s(e.inputs,"argMax",t,((e,n,r)=>{const a=[];for(let t=0;t<e.shape.length;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`inputIndices[${t}] = 0;`);return[`${a.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};\\nvar bestIndex : i32 = 0;`,`if (${e.getByOffset("inputOffset")} ${t.selectLastIndex>0?">=":">"} value) {\\n         value = ${e.getByOffset("inputOffset")};\\n         bestIndex = i32(lastIndex);\\n       }`,"",n.setByOffset("global_idx","bestIndex")]})),{inputs:[0]})},t.parseArgMinMaxAttributes=e=>(0,r.createAttributeWithCacheKey)(e)},504:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lessOrEqual=t.greaterOrEqual=t.less=t.greater=t.sub=t.pow=t.mul=t.equal=t.div=t.add=void 0;const r=n(6952),a=n(1163),i=n(2075),o=(e,t,n,o,s,u)=>{const l={name:t,inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,o,s,u=t.dataType)=>{var l,c;const d=!r.ShapeUtil.areEqual(t.dims,n.dims);let p=t.dims,f=r.ShapeUtil.size(t.dims),h=!1;if(d){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error("Can\'t perform binary op on the given tensors");p=e,f=r.ShapeUtil.size(p);let a=1;for(let e=1;e<p.length;e++){const r=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;a*=r}a%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,a,o,s,u,l,c,d,p)=>{const f=r.ShapeUtil.size(a),h=Math.ceil(f/4);let g,m;"string"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:"function"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let y="";const b=(0,i.outputVariable)("outputData",d,a,4),v=(0,i.inputVariable)("aData",l,t,4),w=(0,i.inputVariable)("bData",c,n,4);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const i=b.indicesGet("outputIndices",r+a.length-e.length);n.push(`${t[r]}u * (${i} % ${e[r]}u)`)}return n.length>0?n.join("+"):"0u"};y=`\\n          fn calcOffsetA(outputIndices: ${b.type.indices}) -> u32 {\\n            return ${e(t)};\\n          }\\n\\n          fn calcOffsetB(outputIndices: ${b.type.indices}) -> u32 {\\n            return ${e(n)};\\n          }\\n        `}let $;if(o)$=s?`\\n            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};\\n            let offsetA = calcOffsetA(outputIndices);\\n            let offsetB = calcOffsetB(outputIndices);\\n            ${b.setByOffset("global_idx",m(v.getByOffset("offsetA / 4u"),w.getByOffset("offsetB / 4u")))}\\n          `:b.setByOffset("global_idx",m(v.getByOffset("global_idx"),w.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");const e=(e,t,n="")=>{const r=`aData[indexA${t}][componentA${t}]`,a=`bData[indexB${t}][componentB${t}]`;return`\\n            let outputIndices${t} = ${b.offsetToIndices(`global_idx * 4u + ${t}u`)};\\n            let offsetA${t} = calcOffsetA(outputIndices${t});\\n            let offsetB${t} = calcOffsetB(outputIndices${t});\\n            let indexA${t} = offsetA${t} / 4u;\\n            let indexB${t} = offsetB${t} / 4u;\\n            let componentA${t} = offsetA${t} % 4u;\\n            let componentB${t} = offsetB${t} % 4u;\\n            ${e}[${t}] = ${n}(${g(r,a)});\\n          `};$=9===d?`\\n            var data = vec4<u32>(0);\\n            ${e("data",0,"u32")}\\n            ${e("data",1,"u32")}\\n            ${e("data",2,"u32")}\\n            ${e("data",3,"u32")}\\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\\n            ${e("outputData[global_idx]",0)}\\n            ${e("outputData[global_idx]",1)}\\n            ${e("outputData[global_idx]",2)}\\n            ${e("outputData[global_idx]",3)}\\n          `}return`\\n        ${e.declareVariables(v,w,b)}\\n\\n        ${null!=p?p:""}\\n        ${y}\\n\\n        ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\\n        ${$}\\n      }`})(e,t.dims,n.dims,p,h,d,o,t.dataType,n.dataType,u,s),outputs:[{dims:p,dataType:u,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(l,e[0],e[1],n,o,u)})};t.add=e=>{e.compute(o(e.inputs,"Add",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(o(e.inputs,"Div",((e,t)=>`${e}/${t}`)))},t.equal=e=>{e.compute(o(e.inputs,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9))},t.mul=e=>{e.compute(o(e.inputs,"Mul",((e,t)=>`${e}*${t}`)))},t.pow=e=>{const t=(0,i.inputVariable)("input",e.inputs[0].dataType,e.inputs[0].dims).type.value,n="i32"===t?"round":"";e.compute(o(e.inputs,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\\n      if (b == ${t}(0.0)) {\\n        return ${t}(1.0);\\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\\n        return ${t}(pow(f32(a), f32(b))); // NaN\\n      }\\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${n}(pow(f32(abs(a)), f32(b))));\\n    }\\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\\n      // TODO: implement vectorized pow\\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\\n    }\\n      `))},t.sub=e=>{e.compute(o(e.inputs,"Sub",((e,t)=>`${e}-${t}`)))},t.greater=e=>{e.compute(o(e.inputs,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9))},t.less=e=>{e.compute(o(e.inputs,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9))},t.greaterOrEqual=e=>{e.compute(o(e.inputs,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9))},t.lessOrEqual=e=>{e.compute(o(e.inputs,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9))}},2075:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBroadcastDims=t.createShaderHelper=t.outputVariable=t.inputVariable=t.tensorTypeToWsglValueType=t.tensorTypeToWsglStorageType=t.WORKGROUP_SIZE=void 0;const r=n(6952);t.WORKGROUP_SIZE=64;const a=(e,t)=>{switch(e){case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}};t.tensorTypeToWsglStorageType=(e,t=1)=>{const n=a(e,t);return"string"==typeof n?n:n[0]},t.tensorTypeToWsglValueType=(e,t=1)=>{const n=a(e,t);return"string"==typeof n?n:n[1]};const i=(e,t,n,i,o)=>{const s=n.length,u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=a(t,o),c="string"==typeof l?l:l[1],d="string"==typeof l?l:l[0],p={indices:u,value:c,storage:d,tensor:t},f=e=>"string"==typeof e?e:`${e}u`,h={offsetToIndices:!1,indicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},g=r.ShapeUtil.computeStrides(n);let m="";for(let e=0;e<s-1;e++)m+=`\\n    let dim${e} = current / ${g[e]}u;\\n    let rest${e} = current % ${g[e]}u;\\n    indices[${e}] = dim${e};\\n    current = rest${e};\\n    `;m+=`indices[${s-1}] = current;`;const y=s<2?"":`\\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\\n    var indices: ${p.indices};\\n    var current = offset;\\n    ${m}\\n    return indices;\\n  }`,b=[];if(s>=2)for(let e=s-1;e>=0;e--)b.push(`${g[e]}u * (indices[${e}])`);const v=s<2?"":`\\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\\n    return ${b.join("+")};\\n  }`,w=(...e)=>0===s?"0u":`${p.indices}(${e.map(f).join(",")})`,$=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),x=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),S=s<2?"":`\\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${c} {\\n    return ${e}[i2o_${e}(indices)];\\n  }`,_=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\\n  fn get_${e}(${t}) -> ${c} {\\n    return get_${e}ByIndices(${w(r)});\\n  }`})(),O=s<2?"":`\\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${c}) {\\n    ${$(`i2o_${e}(indices)`,"value")}\\n  }`,A=s<2?"":(()=>{const t=n.map(((e,t)=>`d${t}: u32`)).join(", "),r=n.map(((e,t)=>`d${t}`)).join(", ");return`\\n  fn set_${e}(${t}, value: ${c}) {\\n    set_${e}ByIndices(${w(r)}, value);\\n  }`})();return{impl:()=>{const e=[];return h.offsetToIndices&&e.push(y),h.indicesToOffset&&e.push(v),h.set&&e.push(A),h.setByIndices&&e.push(O),h.get&&e.push(_),h.getByIndices&&e.push(S),e.join("\\n")},type:p,offsetToIndices:t=>(h.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(h.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),indices:w,indicesGet:(e,t)=>s<2?`${e}`:`${e}[${t}]`,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${e}[${t}]=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);const n=t[s];if("string"!=typeof n)throw new Error("value must be string");const r=t.slice(0,s).map(f).join(",");return 0===s?$("0u",n):1===s?$(r[0],n):(h.set=!0,h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:$,setByIndices:(t,n)=>s<2?$(t,n):(h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);const n=t.map(f).join(",");return 0===s?x("0u"):1===s?x(n[0]):(h.get=!0,h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:x,getByIndices:t=>s<2?x(t):(h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:i?"input":"output",name:e,shape:n}};t.inputVariable=(e,t,n,r=1)=>i(e,t,n,!0,r),t.outputVariable=(e,t,n,r=1)=>i(e,t,n,!1,r);class o{constructor(e){this.normalizedDispatchGroup=e,this.indicesHelpers=[]}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n="number"==typeof e?e:e[0],r="number"==typeof e?1:e[1],a="number"==typeof e?1:e[2],i=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${a})\\n  fn main(${i?"@builtin(global_invocation_id) global_id : vec3<u32>":"@builtin(local_invocation_index) local_index : u32,\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>"}) {\\n    ${i?"let global_idx = global_id.x;":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*a}u + local_index;`}\\n  `}declareVariable(e,t){this.indicesHelpers.push(e);const n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){let t=0;return e.filter((e=>r.ShapeUtil.size(e.shape)>0)).map((e=>this.declareVariable(e,t++))).join("\\n")}get additionalImplementations(){return this.indicesHelpers.map((e=>e.impl())).join("\\n")}}t.createShaderHelper=e=>new o(e),t.getBroadcastDims=(e,t)=>{const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,o=e[i]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(i)}return r}},513:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseConcatAttributes=t.concat=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.concat=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs");const t=e[0].dataType,n=e[0].dims.length;for(const r of e){if(r.dataType!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}})(e.inputs),e.compute(((e,t)=>{const n=(a=e.length,s=t.cacheKey,{name:"Concat",inputTypes:Array(a).fill(i.GpuDataType.default),cacheHint:s});var a,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const a=t[0].dims.slice();if(n>=a.length||n<-1*a.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");const s=n<0?a.length+n:n,u=a.slice(0);for(let e=1;e<t.length;e++){const n=t[e].dims.slice();for(let e=0;e<a.length;e++)if(e===s)u[s]+=n[e];else if(a[e]!==n[e])throw new Error("non concat dimensions must match")}const l=r.ShapeUtil.size(u),c=new Array(t.length),d=new Array(t.length),p=t[0].dataType;let f=0;for(let e=0;e<t.length;++e)f+=t[e].dims[s],c[e]=f,d[e]=(0,o.inputVariable)(`input${e}`,p,t[e].dims);const h=(0,o.outputVariable)("output",p,u),g=h.indicesGet("indices",s);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>{return`\\n  ${e.declareVariables(...d,h)}\\n\\n  const sizeInConcatAxis = array<u32, ${c.length}>(${c.map((e=>`${e}u`)).join(",")});\\n  ${t=c.length,`\\n  fn calculateInputIndex(index: u32) -> u32 {\\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\\n      if (index < sizeInConcatAxis[i]) {\\n        return i;\\n      }\\n    }\\n    return ${t}u;\\n  }`}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n\\n    var indices = ${h.offsetToIndices("global_idx")};\\n\\n    let inputIndex = calculateInputIndex(${g});\\n    if (inputIndex != 0u) {\\n      ${g} -= sizeInConcatAxis[inputIndex - 1u];\\n    }\\n\\n    ${((e,t)=>{const n=e.length,r=[];for(let a=0;a<n;++a){const i=t.setByOffset("global_idx",e[a].getByIndices("indices"));1===n?r.push(i):0===a?r.push(`if (inputIndex == ${a}u) { ${i} }`):a===n-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${a}) { ${i} }`)}return r.join("\\n")})(d,h)}\\n  }`;var t},dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t.axis)})})(e.inputs,t))},t.parseConcatAttributes=e=>(0,a.createAttributeWithCacheKey)({axis:e.axis})},9192:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(6952),a=n(1163),i=n(2075),o=n(9770),s=n(3997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:"GroupedConv",inputTypes:l?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?"value += b[output_channel];":"",d=e[0].dims,p=e[1].dims,f=p[0]/n.group,{activationFunction:h,applyActivation:g}=(0,s.getActicationSnippet)(n),m="NHWC"===n.format,y=(0,o.calculateOutputShape)(d,p,n.dilations,n.pads,n.strides,m),b=r.ShapeUtil.size(y),v=(0,i.outputVariable)("output",e[0].dataType,y),w=(0,i.inputVariable)("x",e[0].dataType,d),$=(0,i.inputVariable)("w",e[1].dataType,p),x=[w,$];return l&&x.push((0,i.inputVariable)("b",e[2].dataType,e[2].dims)),Object.assign(Object.assign({},t),{outputs:[{dims:u?u(y):y,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\\n\\n  ${e.declareVariables(...x,v)}\\n\\n  ${h}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(b)}\\n\\n    let outputIndices = ${v.offsetToIndices("global_idx")};\\n    let batch: u32 = outputIndices[0];\\n    let output_channel: u32 = outputIndices[${m?3:1}];\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${m?1:2}], outputIndices[${m?2:3}]) * strides - pads;\\n    let group_id: u32 = output_channel / ${f}u;\\n\\n    var value: ${v.type.value} = ${v.type.value}(0);\\n    for (var wInChannel: u32 = 0u; wInChannel < ${p[1]}u; wInChannel++) {\\n      let input_channel = group_id * ${p[1]}u + wInChannel;\\n      for (var wHeight: u32 = 0u; wHeight < ${p[2]}u; wHeight++) {\\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\\n\\n        if (xHeight < 0u || xHeight >= ${d[m?1:2]}u) {\\n          continue;\\n        }\\n\\n        for (var wWidth: u32 = 0u; wWidth < ${p[3]}u; wWidth++) {\\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\\n          if (xWidth < 0u || xWidth >= ${d[m?2:3]}u) {\\n            continue;\\n          }\\n\\n          let xVal = ${m?w.get("batch","xHeight","xWidth","input_channel"):w.get("batch","input_channel","xHeight","xWidth")};\\n          let wVal = ${$.get("output_channel","wInChannel","wHeight","wWidth")};\\n          value += xVal*wVal;\\n        }\\n      }\\n    }\\n    ${c}\\n    ${g}\\n    ${v.setByOffset("global_idx","value")}\\n  }`,dispatchGroup:()=>({x:Math.ceil(b/64)})})})(e,u,t,n)})}},7640:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convTranspose=t.parseConvTransposeAttributes=void 0;const r=n(387),a=n(1163),i=n(6514),o=n(3997),s=(e,t,n,r,a,i)=>(e-1)*t+n+(r-1)*a+1-i,u=(e,t,n,r,a)=>{const i=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=i,n[a]=e-i):"SAME_LOWER"===t&&(n[r]=e-i,n[a]=i)},l=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),0)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}const r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);const a=e.pads.slice(),i=e.outputShape.slice(),o=e.outputPadding.slice(),l=t[0].dims;let c=e.dilations.slice();if(0===c.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;c=new Array(e).fill(1)}let d=e.strides.slice();if(0===d.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;d=new Array(e).fill(1)}((e,t,n,r,a,i,o,l,c,d)=>{const p=e.length-2,f=0===d.length;if(0===c.length)for(let e=0;e<p;++e)c.push(0);const h=e[0],g=t[l?3:1]*a;for(let a=0,h=e.length-p-(l?1:0);a<p;++a,++h){const l=e[h],g=f?l*o[a]:d[a],m=s(l,o[a],i[a],t[h],n[a],g);u(m,r,i,a,a+p),f&&d.push(o[a]*(l-1)+c[a]+(t[h]-1)*n[a]+1-i[a]-i[a+p])}d.splice(0,0,h),d.splice(l?3:1,0,g)})(l,n,c,e.autoPad,e.group,a,d,r,o,i);const p=Object.assign({},e);return Object.assign(p,{kernelShape:n,pads:a,outputPadding:o,outputShape:i,dilations:c,strides:d,cacheKey:e.cacheKey}),p};t.parseConvTransposeAttributes=e=>{const t=(0,o.parseInternalActivationAttributes)(e),n=e.format,a=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][void 0===e.autoPad?0:e.autoPad],i=e.dilations,s=e.group,u=e.kernelShape,l=e.pads,c=e.strides,d=e.wIsConst(),p=e.outputPadding,f=e.outputShape;return(0,r.createAttributeWithCacheKey)(Object.assign({autoPad:a,format:n,dilations:i,group:s,kernelShape:u,outputPadding:p,outputShape:f,pads:l,strides:c,wIsConst:d},t))};const c=(e,t,n)=>{const r=(o=3===e.length,s=t.cacheKey,{name:"ConvTranspose2D",inputTypes:o?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s});var o,s;return Object.assign(Object.assign({},r),{get:()=>(0,i.createConvTranspose2DProgramInfo)(e,r,t,n)})};t.convTranspose=(e,t)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");const r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("ConvTranspose input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("ConvTranspose input(bias) should be float tensor")})(e.inputs,t),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===r.length&&r.push(e.inputs[2]);let a=t.kernelShape;0!==a.length&&0!==a[0]||(a=[e.inputs[1].dims[2]]);let i=t.dilations;0!==i.length&&0!==i[0]||(i=[1]);let o=t.strides;0!==o.length&&0!==o[0]||(o=[1]);let s=t.pads;0===s.length&&(s=[0,0]),s=[0,s[0],0,s[1]],o=[1].concat(o),i=[1].concat(i),a=[1].concat(a);const u=l(Object.assign(Object.assign({},t),{pads:s,strides:o,dilations:i,kernelShape:a}),r);e.compute(c(r,u,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))})(e,t):((e,t,n)=>{const r=l(n,t);e.compute(c(t,r))})(e,e.inputs,t)}},9770:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(6952),a=n(387),i=n(9192),o=n(3822),s=n(3997),u=n(1522),l=n(2625);t.calculateOutputShape=(e,t,n,r,a,i)=>{const o=e[0],s=e.slice(i?1:2,i?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),d=s.map(((e,t)=>e+r[t]+r[t+u])).map(((e,t)=>Math.floor((e-c[t]+a[t])/a[t])));return d.splice(0,0,o),d.splice(i?3:1,0,l),d};const c=(0,a.createAttributeWithCacheKey)({perm:[2,3,1,0]}),d=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const a=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,a,"NHWC"===e.format,e.autoPad);const i=Object.assign({},e);return Object.assign(i,{kernelShape:n,pads:a,cacheKey:e.cacheKey}),i};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,o=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,d=e.w_is_const();return(0,a.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:i,group:o,kernelShape:u,pads:l,strides:c,wIsConst:d},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("Conv input(X,W) should be float tensor");if(3===e.length&&1!==e[2].dataType)throw new Error("Conv input(bias) should be float tensor")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const a=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=d(Object.assign(Object.assign({},t),{pads:a,strides:o,dilations:s,kernelShape:u}),r);e.compute((0,i.createGroupedConvProgramInfoLoader)(r,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var a,s;const p=d(r,n),f=3===n.length,h="NHWC"===r.format;if(!h||1!==r.group)return void e.compute((0,i.createGroupedConvProgramInfoLoader)(n,p));const g=n[0].dims[h?1:2],m=n[0].dims[h?2:3],y=n[0].dims[h?3:1],b=n[1].dims[2],v=n[1].dims[3],w=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,p.pads,r.strides,h),$=w[h?1:2],x=w[h?2:3],S=w[h?3:1],_=w[0];if(h&&b===g&&v===m&&"VALID"===r.autoPad||1===b&&1===v&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&0===r.pads[0]&&0===r.pads[1]){const t=null!==(a=e.kernelCustomData.wT)&&void 0!==a?a:e.compute(Object.assign(Object.assign({},l.transposeProgramMetadata),{cacheHint:c.cacheKey,get:()=>(0,l.createTransposeProgramInfo)(n[1],c.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=t);const i=[];i.push(n[0].reshape([_,g*m,y])),i.push(t.reshape([1,y,S])),f&&i.push(n[2]);const o=[_,$*x,S];return void e.compute((0,u.createMatmulProgramInfoLoader)(i,p,w,o),{inputs:i})}const O=h?$*x:S,A=h?S:$*x,C=b*v*y,T=null!==(s=e.kernelCustomData.wT)&&void 0!==s?s:e.compute(Object.assign(Object.assign({},l.transposeProgramMetadata),{cacheHint:c.cacheKey,get:()=>(0,l.createTransposeProgramInfo)(n[1],c.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=T);const I=[n[0],T];f&&(h||1!==n[2].dims.length?I.push(n[2]):I.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,o.createConv2DMatMulProgramInfoLoader)(I,p,w,O,A,C,f,!0),{inputs:I})})(e,e.inputs,n)}},3822:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(1163),a=n(9456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,i,o,s,u,l)=>{const c=((e,t)=>({name:"Conv2DMatMul",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,a.createConv2DMatMulProgramInfo)(e,c,t,n,i,o,s,u,l)})}},8856:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.expand=t.expandProgramMetadata=void 0;const r=n(6952),a=n(1163),i=n(2075);t.expandProgramMetadata={name:"Expand",inputTypes:[a.GpuDataType.default]};const o=(e,t)=>{const n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let a=0;a<t.length;++a)r.push(1===t[a]?e[a+n]:t[a]);return r};t.expand=e=>{(e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");const t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number);let r=n.length<t.length?0:n.length-t.length,a=t.length<n.length?0:t.length-n.length;for(;r<n.length&&a<t.length;++r,++a)if(n[r]!==t[a]&&1!==n[r]&&1!==t[a])throw new Error("Expand requires shape to be broadcastable to input")})(e.inputs);const n=Array.from(e.inputs[1].getBigInt64Array(),Number).toString();e.compute(Object.assign(Object.assign({},t.expandProgramMetadata),{cacheHint:n,get:()=>((e,t)=>{const n=t[0].dims,s=Array.from(t[1].getBigInt64Array(),Number),u=((e,t)=>e.length>t.length?o(e,t):o(t,e))(n,s),l=r.ShapeUtil.size(u),c=t[0].dataType,d=(0,i.inputVariable)("input",c,n),p=(0,i.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n  const inputShape = ${d.indices(...n)};\\n  ${e.declareVariables(d,p)}\\n  ${e.mainStart()}\\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n    let outputIndices = ${p.offsetToIndices("global_idx")};\\n    var inputIndices: ${d.type.indices};\\n    for (var i = 0; i < ${n.length}; i++) {\\n      if (${d.indicesGet("inputShape","i")} == 1) {\\n        ${d.indicesSet("inputIndices","i",0)}\\n      } else {\\n        ${d.indicesSet("inputIndices","i",p.indicesGet("outputIndices","i + "+(u.length-n.length)))}\\n      }\\n    }\\n    ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\\n  }`,outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(t.expandProgramMetadata,e.inputs)}),{inputs:[0]})}},3997:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(6952);t.getActicationSnippet=e=>{switch(e.activation){case"Relu":return{activationFunction:"",applyActivation:"value = max(value, 0.0);"};case"Sigmoid":return{activationFunction:"",applyActivation:"value = (1.0 / (1.0 + exp(-value)));"};case"Clip":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:"value = clamp(value, clip_min_, clip_max_);"};default:return{activationFunction:"",applyActivation:""}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||"";if("Clip"===t){const[n,a]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:a,clipMin:n,activationCacheKey:`${t}:${n},${a}`}}return{activation:t,activationCacheKey:t}}},9218:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gatherElements=t.parseGatherElementsAttributes=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.parseGatherElementsAttributes=e=>(0,a.createAttributeWithCacheKey)({axis:e.axis}),t.gatherElements=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\\n                     indices input tensors be of same rank.")})(e.inputs);const n={name:"GatherElements",inputTypes:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const a=t[0].dims,s=t[0].dataType,u=a.length,l=r.ShapeUtil.computeStrides(a),c=r.ShapeUtil.size(a),d=t[1].dims,p=t[1].dataType,f=r.ShapeUtil.size(d),h=r.ShapeUtil.normalizeAxis(n.axis,u),g=a[h],m=d.slice(0),y=r.ShapeUtil.size(m),b=(0,o.inputVariable)("input",s,a),v=(0,o.inputVariable)("indices",p,[f]),w=(0,o.outputVariable)("output",s,m);return Object.assign(Object.assign({},e),{outputs:[{dims:m,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n      const inputStrides = array<u32, ${l.length}>(${l.map((e=>`${e}u`)).join(",")});\\n      ${e.declareVariables(b,v,w)}\\n      ${e.mainStart()}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(y)}\\n\\n      let outputIndices = ${w.offsetToIndices("global_idx")};\\n\\n      var idx = ${v.getByOffset("global_idx")};\\n      if (idx < 0) {\\n        idx = idx + ${g};\\n      }\\n\\n      var srcOffset = u32(0);\\n\\n      for (var i = 0; i < ${a.length}; i++) {\\n        if (i == ${h}) {\\n          srcOffset +=  u32(idx) * inputStrides[i];\\n        } else {\\n          srcOffset += ${w.indicesGet("outputIndices","i")} * inputStrides[i];\\n        }\\n      }\\n\\n      // Should never hit this with valid values in indices\\n      // This is a guard against malicious data in the indices input\\n      if (srcOffset < 0 || srcOffset >= ${c}) {\\n        return;\\n      }\\n\\n      output[global_idx] = input[srcOffset];\\n  }`,dispatchGroup:()=>({x:Math.ceil(y/64)})})})(n,e.inputs,t))}},8405:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gather=t.parseGatherAttributes=void 0;const r=n(6952),a=n(387),i=n(1163);t.parseGatherAttributes=e=>(0,a.createAttributeWithCacheKey)({axis:e.axis}),t.gather=(e,t)=>{(e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")})(e.inputs);const n={name:"Gather",inputTypes:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(((e,t,n)=>{const a=t[0].dims,o=t[1].dims,s=a.length,u=r.ShapeUtil.normalizeAxis(n.axis,s),l=a.slice(0);l.splice(u,1,...o);const c=t[0].dataType,d=r.ShapeUtil.sizeFromDimension(a,u+1),p=[7,13,11].includes(c)?2:1,f=7===t[1].dataType?2:1,h=p*d,g=r.ShapeUtil.sizeToDimension(a,u),m=r.ShapeUtil.size(o),y=r.ShapeUtil.sizeFromDimension(a,u)*p,b=m*d*p,v=a[u],w=r.ShapeUtil.size(a)*p,$=r.ShapeUtil.size(l)*p,x=g*m;return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n  const N: u32 = ${m};\\n  const elementSize: u32 = ${p};\\n  const indicesElementSize: u32 = ${f};\\n\\n  @group(0) @binding(0) var<storage, read> input : array<u32>;\\n  @group(0) @binding(1) var<storage, read> inputIndices : array<i32>;\\n  @group(0) @binding(2) var<storage, read_write> output: array<u32>;\\n\\n  ${e.mainStart()}\\n    let batch: u32 = global_idx / N;\\n    let i: u32 = global_idx % N;\\n\\n    let srcOffsetBatch: u32 = batch * ${y};\\n    let dstOffsetBatch: u32 = batch * ${b};\\n    var idx = inputIndices[i * indicesElementSize];\\n    if (idx < 0) {\\n        idx = idx + ${v};\\n    }\\n\\n    let srcOffset = srcOffsetBatch + u32(idx) * ${h};\\n    let dstOffset = dstOffsetBatch + i * ${h};\\n    if (srcOffset >= ${w}) {\\n        return;\\n    }\\n    if (dstOffset >= ${$}) {\\n        return;\\n    }\\n    for (var j: u32 = 0; j < ${h}; j++) {\\n        output[dstOffset + j] = input[srcOffset + j];\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil(x/64)})})})(n,e.inputs,t))}},4271:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(6952),a=n(387),i=n(1163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error("Invalid input type.");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")})(e.inputs),e.compute(((e,t)=>{const n={name:"Gemm",inputTypes:3===e.length?[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const a=t[0].dims.slice(),o=t[1].dims.slice(),[s,u,l]=r.GemmUtil.getShapeOfGemmResult(a,n.transA,o,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");const d=r.ShapeUtil.size(c);let p="";n.transA&&n.transB?p="value += a[k * M + m] * b[n * K + k];":n.transA&&!n.transB?p="value += a[k * M + m] * b[k * N + n];":!n.transA&&n.transB?p="value += a[m * K + k] * b[n * K + k];":n.transA||n.transB||(p="value += a[m * K + k] * b[k * N + n];");const f="f32",h=1===n.alpha?"":"value *= alpha;",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return"0u";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,a=n[n.length-1]!==t;let i="0u";return r||(i+=`+ m * ${n[n.length-1]}u`),a||(i+="+n"),i})(s,u,t[2].dims)}];`:"",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n  const M: u32 = ${s}u;\\n  const N: u32 = ${u}u;\\n  const K: u32 = ${l}u;\\n  const alpha = ${f}(${n.alpha});\\n  const beta = ${f}(${n.beta});\\n\\n  ${m.join("\\n")}\\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\n\\n    let m = global_id.x / N;\\n    let n = global_id.x % N;\\n\\n    var value = ${f}(0);\\n    for (var k: u32 = 0u; k<${l}u; k++) {\\n      ${p}\\n    }\\n\\n    ${h}\\n    ${g}\\n    output[global_id.x] = value;\\n\\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,a.createAttributeWithCacheKey)(e)},1798:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.instanceNorm=t.parseInstanceNormAttributes=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.parseInstanceNormAttributes=e=>(0,a.createAttributeWithCacheKey)({epsilon:e.epsilon,format:e.format}),t.instanceNorm=(e,t)=>{(e=>{if(!e||3!==e.length)throw new Error("instanceNorm requires 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"InstanceNormalization",inputTypes:[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default],cacheHint:t.cacheKey};"NHWC"===t.format?e.compute(((e,t,n)=>{const a=t[0].dims,s=a,u=r.ShapeUtil.size(s),l=a[0],c=a[a.length-1],d=r.ShapeUtil.sizeFromDimension(a,1)/c,p=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),f=c*l;return Object.assign(Object.assign({},e),{outputs:[{dims:s,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n  const N: u32 = ${l};\\n  const H: u32 = ${d};\\n  const C: u32 = ${c};\\n  const normSizeTyped: ${p} = ${d};\\n  const imageSize: u32 = ${d*c};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(0) var<storage, read> x : array<${p}>;\\n  @group(0) @binding(1) var<storage, read> scale : array<${p}>;\\n  @group(0) @binding(2) var<storage, read> bias : array<${p}>;\\n  @group(0) @binding(3) var<storage, read_write> output : array<${p}>;\\n\\n  ${e.mainStart()}\\n    let currentImageNumber = global_idx / C;\\n    let currentChannelNumber = global_idx % C;\\n    \\n    // offset is channel num * N\\n    let offset = currentImageNumber * imageSize;\\n    if (offset >= ${u}) { return; }\\n    var mean: ${p} = 0;\\n\\n    for (var i: u32 = 0u; i < H; i++) {\\n        mean = mean + x[offset + i * C + currentChannelNumber];\\n    }\\n    mean = mean / normSizeTyped;\\n\\n    var squaredNorm: ${p} = 0;\\n    for (var i: u32 = 0u; i < H; i++) {\\n        let deviation: f32 = x[offset + i * C + currentChannelNumber] - mean;\\n        squaredNorm = squaredNorm + deviation * deviation;\\n    }\\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\\n    let channelScale = invStdDev * scale[currentChannelNumber];\\n    let channelShift = bias[currentChannelNumber] - mean * channelScale;\\n    for (var i: u32 = 0u; i < H; i++) {\\n        let currentOffset = offset + i * C + currentChannelNumber;\\n        output[currentOffset] = x[currentOffset] * channelScale + channelShift;\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t)):e.compute(((e,t,n)=>{const a=t[0].dims,s=t[1],u=t[2],l=a,c=r.ShapeUtil.size(l),d=r.ShapeUtil.sizeToDimension(a,2),p=r.ShapeUtil.sizeFromDimension(a,2),f=a[1],h=r.ShapeUtil.size(s.dims),g=u?r.ShapeUtil.size(u.dims):0;if(h!==p||u&&g!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.\\n             Size of scale and bias (if provided) must match this. \\n             Got scale size of ${h} and bias size of ${g}`);const m=(0,o.tensorTypeToWsglStorageType)(t[0].dataType);return Object.assign(Object.assign({},e),{outputs:[{dims:l,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n  const C: u32 = ${f};\\n  const normSize: u32 = ${p};\\n  const normSizeTyped: ${m} = ${p};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(0) var<storage, read> x : array<${m}>;\\n  @group(0) @binding(1) var<storage, read> scale : array<${m}>;\\n  @group(0) @binding(2) var<storage, read> bias : array<${m}>;\\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\\n\\n  ${e.mainStart()}\\n    let offset = global_idx * normSize;\\n    if (offset + normSize >= ${c}) { return; }\\n    var mean: ${m} = 0;\\n\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n        mean = mean + x[h + offset];\\n    }\\n    mean = mean / normSizeTyped;\\n\\n    var squaredNorm: ${m} = 0;\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n        let deviation: f32 = x[h + offset] - mean;\\n        squaredNorm = squaredNorm + deviation * deviation;\\n    }\\n    let invStdDev = 1 / sqrt(squaredNorm / normSizeTyped + epsilon);\\n    let channelScale = invStdDev * scale[global_idx % C];\\n    let channelShift = bias[global_idx % C] - mean * channelScale;\\n    for (var j: u32 = 0; j < normSize; j++) {\\n        output[j + offset] = x[j + offset] * channelScale + channelShift;\\n    }\\n  }`,dispatchGroup:()=>({x:Math.ceil(d/64)})})})(n,e.inputs,t))}},6145:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.layerNorm=t.parseLayerNormAttributes=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.parseLayerNormAttributes=e=>(0,a.createAttributeWithCacheKey)({axis:e.axis,epsilon:e.epsilon}),t.layerNorm=(e,t)=>{(e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n={name:"LayerNormalization",inputTypes:2===e.inputs.length?[i.GpuDataType.default,i.GpuDataType.default]:[i.GpuDataType.default,i.GpuDataType.default,i.GpuDataType.default],cacheHint:t.cacheKey+e.outputCount.toString(10)+e.inputs.length.toString(10)};e.compute(((e,t,n,a)=>{const s=t[0].dims,u=t[1],l=t[2],c=s,d=r.ShapeUtil.size(c),p=r.ShapeUtil.normalizeAxis(n.axis,s.length),f=r.ShapeUtil.sizeToDimension(s,p),h=r.ShapeUtil.sizeFromDimension(s,p),g=r.ShapeUtil.size(u.dims),m=l?r.ShapeUtil.size(l.dims):0;if(g!==h||l&&m!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.\\n       Size of scale and bias (if provided) must match this.\\n       Got scale size of ${g} and bias size of ${m}`);const y=[];for(let e=0;e<s.length;++e)e<p?y.push(s[e]):y.push(1);const b=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),v=a>1,w=a>2;let $=0;const x=[{dims:c,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}];return v&&x.push({dims:y,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}),w&&x.push({dims:y,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}),Object.assign(Object.assign({},e),{outputs:x,getShaderSource:e=>`\\n  const normSize: u32 = ${h};\\n  const normSizeTyped: ${b} = ${h};\\n  const epsilon: f32 = ${n.epsilon};\\n\\n  @group(0) @binding(${$++}) var<storage, read> x : array<${b}>;\\n  @group(0) @binding(${$++}) var<storage, read> scale : array<${b}>;\\n  ${l?`@group(0) @binding(${$++}) var<storage, read> bias : array<${b}>;`:""}\\n  @group(0) @binding(${$++}) var<storage, read_write> output : array<${b}>;\\n  ${v?`@group(0) @binding(${$++}) var<storage, read_write> meanDataOutput : array<${b}>`:""};\\n  ${w?`@group(0) @binding(${$++}) var<storage, read_write> invStdOutput : array<${b}>`:""};\\n\\n  ${e.mainStart()}\\n    let offset = global_idx * normSize;\\n    if (offset >= ${d}) { return; }\\n    var mean: ${b} = 0;\\n    var meanSquare: ${b} = 0;\\n\\n    for (var h: u32 = 0u; h < normSize; h++) {\\n      mean = mean + x[h + offset];\\n      meanSquare = meanSquare + x[h + offset] * x[h + offset];\\n    }\\n    mean = mean / normSizeTyped;\\n    meanSquare = sqrt(meanSquare / normSizeTyped - mean * mean + epsilon);\\n\\n    for (var j: u32 = 0; j < normSize; j++) {\\n      output[j + offset] = (x[j + offset] - mean) / meanSquare * scale[j] ${l?"+ bias[j]":""};\\n    }\\n\\n    ${v?"meanDataOutput[global_idx] = mean":""};\\n    ${w?"invStdOutput[global_idx] = 1 / meanSquare":""};\\n  }`,dispatchGroup:()=>({x:Math.ceil(f/64)})})})(n,e.inputs,t,e.outputCount))}},1522:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(6952),a=n(1163),i=n(158);t.createMatmulProgramInfoLoader=(e,t,n,r)=>{const o=(s=e.length>2,u=t.activationCacheKey,{name:"MatMul",inputTypes:s?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:u});var s,u;return Object.assign(Object.assign({},o),{get:()=>(0,i.createMatmulProgramInfo)(o,e,t,n,r)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type")})(e.inputs);const n=r.BroadcastUtil.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!n)throw new Error("Can\'t use matmul on the given tensors");e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:"",activationCacheKey:""},n))}},5262:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075),s=e=>{if(!e||1!==e.length)throw new Error("Pool ops requires 1 input.");if(4!==e[0].dims.length)throw new Error("Pool ops supports 2-D inputs only for now.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=(e,t,n)=>{const a="NHWC"===t.format,i=a?[e.dims[0],e.dims[3],e.dims[1],e.dims[2]]:e.dims.slice(),o=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),u=t.strides.slice(),l=o?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,i,s,u,l,c);const d=r.PoolConvUtil.computePoolOutputShape(n,i,u,l,s,c,t.autoPad),p=Object.assign({},t);return o?Object.assign(p,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(p,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[p,a?[d[0],d[2],d[3],d[1]]:d]},l=(e,t,n,a,i,s,u)=>{const l="NHWC"===a.format,c=t.shape,d=t.type.value,p=c.length,f=r.ShapeUtil.size(n),h=(0,o.outputVariable)("output",t.type.tensor,n);if(a.kernelShape.length<=2){const n=a.kernelShape[a.kernelShape.length-1],r=a.strides[a.strides.length-1],o=a.pads[a.pads.length/2-1],g=p-(l?2:1);let m="",y="",b="";if(m=o+a.pads[a.pads.length-1]!==0?`\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                xIndices[${g}] = indices[${g}] * ${r} - ${o} + i;\\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${c[g]}) {\\n                  pad++;\\n                  continue;\\n                }\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${i}\\n              }`:`\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                xIndices[${g}] = indices[${g}] * ${r} - ${o} + i;\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${i}\\n              }`,2===a.kernelShape.length){const e=a.kernelShape[a.kernelShape.length-2],t=a.strides[a.strides.length-2],r=a.pads[a.pads.length/2-2],i=a.pads[a.pads.length-2],o=p-(l?3:2),s=c[o];y=r+i!==0?`\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\n                  xIndices[${o}] = indices[${o}] * ${t} - ${r} + j;\\n                  if (xIndices[${o}] < 0 || xIndices[${o}] >= ${s}) {\\n                    pad+= ${n};\\n                    continue;\\n                  }\\n              `:`\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\n                  xIndices[${o}] = indices[${o}] * ${t} - ${r} + j;\\n                `,b="\\n              }\\n            "}return`\\n            ${e.declareVariables(t,h)}\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\\n\\n              let indices = ${h.offsetToIndices("global_idx")};\\n              var xIndices = ${h.offsetToIndices("global_idx")};\\n\\n              var value: ${d} = ${d}(${u});\\n              var pad = 0;\\n              ${y}\\n              ${m}\\n              ${b}\\n              ${s}\\n\\n              output[global_idx] = value;\\n            }`}{if(l)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");const n=r.ShapeUtil.size(a.kernelShape),o=r.ShapeUtil.computeStrides(a.kernelShape),d=o.length,g=a.pads.length;let m="";return m=a.pads.reduce(((e,t)=>e+t))?`\\n                if (xIndices[j] >= inputDims[j]) {\\n                  pad++;\\n                  isPad = true;\\n                  break;\\n                }\\n              }\\n              if (!isPad) {\\n                let x_val = x[${t.indicesToOffset("xIndices")}];\\n                ${i}\\n              }`:`\\n              }\\n              let x_val = x[${t.indicesToOffset("xIndices")}];\\n              ${i}\\n            `,`\\n            ${e.declareVariables(t,h)}\\n\\n            const pads = array<u32, ${g}>(${a.pads.map((e=>`${e}u`)).join(",")});\\n            const inputDims = array<u32, ${p}>(${c.map((e=>`${e}u`)).join(",")});\\n            const kernelStrides = array<u32, ${d}>(${o.map((e=>`${e}u`)).join(",")});\\n            const strides = array<u32, ${d}>(${a.strides.map((e=>`${e}u`)).join(",")});\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(f)}\\n\\n              let indices = ${h.offsetToIndices("global_idx")};\\n              let xIndices = ${h.offsetToIndices("global_idx")};\\n\\n              var offsets: array<u32, ${d}>;\\n\\n              var value = ${h.type.value}(${u});\\n              var pad = 0;\\n              var isPad = false;\\n\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\n                var offset = i;\\n                for (var j = 0u; j < ${d-1}u; j++) {\\n                  offsets[j] = offset / kernelStrides[j];\\n                  offset -= offsets[j] * kernelStrides[j];\\n                }\\n                offsets[${d-1}] = offset;\\n\\n                isPad = false;\\n                for (var j = ${p-d}u; j < ${p}u; j++) {\\n                  xIndices[j] = indices[j] * strides[j - ${p-d}u]\\n                    + offsets[j - ${p-d}u] - pads[j - 2u];\\n                  ${m}\\n              }\\n              ${s}\\n\\n              output[global_idx] = value;\\n            }`}},c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),d=(e,t,n,a)=>{const[s,c]=u(e,a,n),d=r.ShapeUtil.size(s.kernelShape),p=(0,o.inputVariable)("x",e.dataType,e.dims);let f="";return s.countIncludePad?f+=`value /= f32(${d});`:f+=`value /= f32(${d} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>l(e,p,c,s,"value += x_val;",f,"0.0"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,a.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:"AveragePool",inputTypes:[i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!1,t)}))};const p={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:"GlobalAveragePool",inputTypes:[i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>d(e.inputs[0],n,!0,t)}))};const f=(e,t,n,a)=>{const[s,c]=u(e,a,n),d=(0,o.inputVariable)("x",e.dataType,e.dims);return Object.assign(Object.assign({},t),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>l(e,d,c,s,"\\n      value = max(x_val, value);\\n    ","","-1e5"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(c)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:"MaxPool",inputTypes:[i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,a.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},p),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:"GlobalMaxPool",inputTypes:[i.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs[0],n,!0,t)}))}},6031:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseReduceAttributes=t.reduceSumSquare=t.reduceSum=t.reduceProd=t.reduceMin=t.reduceMean=t.reduceMax=t.reduceLogSumExp=t.reduceL2=t.reduceL1=t.reduceLogSum=t.createReduceProgramInfo=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075),s=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},u=e=>["","",`var value = ${e.getByOffset("inputOffset")};`,""];t.createReduceProgramInfo=(e,t,n,a,s,u=!1,l=!1)=>{const c=[],d=t[0].dims,p=r.ShapeUtil.normalizeAxes(a,t[0].dims.length),f=!l&&0===p.length;d.forEach(((e,t)=>{f||p.indexOf(t)>=0?u&&c.push(1):c.push(e)}));const h=[],g=(0,o.inputVariable)("_A",t[0].dataType,d),m=(0,o.outputVariable)("output",s,c),y=n(g,m,p),b=`inputOffset = ${g.indicesToOffset("inputIndices")};`,v=`let ${b};`,w=`var ${b};`,$=""===y[1]?"":w;let x=(""===y[1]?v:b)+"\\n"+y[2];for(let e=0,n=0;e<t[0].dims.length;e++)f||p.indexOf(e)>=0?(u&&n++,x=`for(var j${e}: u32 = 0; j${e} < ${t[0].dims[e]}; j${e}++) {\\n                ${y[2].includes("lastIndex")?`let lastIndex = j${e};`:""}\\n                ${g.indicesSet("inputIndices",e,`j${e}`)}\\n                ${x}\\n              }`):(h.push(`${g.indicesSet("inputIndices",e,m.indicesGet("outputIndices",n))};`),n++);const S=r.ShapeUtil.size(c);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n        ${e.declareVariables(g,m)}\\n\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(S)}\\n          var inputIndices: ${g.type.indices};\\n          let outputIndices = ${m.offsetToIndices("global_idx")};\\n\\n          ${h.join("\\n")}\\n          ${y[0]}       // init ops for reduce max/min\\n          ${$}\\n          ${y[1]}\\n          ${x}\\n          ${y[3]}\\n          ${4===y.length?m.setByOffset("global_idx","value"):y.slice(4).join("\\n")}\\n        }`,outputs:[{dims:c,dataType:s,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(S/64)})})};const l=(e,n,r,o)=>{const s=1===e.length?r:((e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),(0,a.createAttributeWithCacheKey)({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})})(e,r),l={name:n,inputTypes:[i.GpuDataType.default],cacheHint:s.cacheKey+"_"+e[0].dims.map((e=>e.toString())).join(",")};return Object.assign(Object.assign({},l),{get:()=>(0,t.createReduceProgramInfo)(l,[e[0]],s.noopWithEmptyAxes&&0===s.axes.length?u:o,s.axes,e[0].dataType,s.keepDims,s.noopWithEmptyAxes)})};t.reduceLogSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,"value = log(value);"])),{inputs:[0]})},t.reduceL1=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByOffset("inputOffset")});`,""])),{inputs:[0]})},t.reduceL2=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceL2",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += (t * t);`,"value = sqrt(value);"])),{inputs:[0]})},t.reduceLogSumExp=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByOffset("inputOffset")});`,"value = log(value);"])),{inputs:[0]})},t.reduceMax=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMax",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("inputIndices",t,0));return[`${r.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = max(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceMean=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMean",t,((e,t,n)=>{let r=1;for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&(r*=e.shape[t]);return[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,`value = value / ${r}.;`]})),{inputs:[0]})},t.reduceMin=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceMin",t,((e,t,n)=>{const r=[];for(let t=0;t<e.shape.length;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`inputIndices[${t}] = 0;`);return[`${r.join("\\n")}`,`var value = ${e.getByOffset("inputOffset")};`,`value = min(value, ${e.getByOffset("inputOffset")});`,""]})),{inputs:[0]})},t.reduceProd=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSum=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByOffset("inputOffset")};`,""])),{inputs:[0]})},t.reduceSumSquare=(e,t)=>{s(e.inputs),e.compute(l(e.inputs,"ReduceSumSquare",t,((e,t)=>[`var t = f32(0); var value = ${t.type.storage}(0);`,"",`t = ${e.getByOffset("inputOffset")}; value += t * t;`,""])),{inputs:[0]})},t.parseReduceAttributes=e=>(0,a.createAttributeWithCacheKey)(e)},4566:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseResizeAttributes=t.resize=t.createResizeProgramInfoLoader=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.createResizeProgramInfoLoader=(e,t,n,a,s,u)=>{const l={name:"Resize",inputTypes:[i.GpuDataType.default],cacheHint:t.cacheKey+n.toString()+(a.length>0?"_scales_"+a.toString():"")+(s.length>0?"_sizes_"+s.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,a,s,u,l)=>{const c=t.dims,d=((e,t,n)=>{const r=new Array(n).fill(0).concat(new Array(n).fill(1)),a=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,i)=>{r[e]=a[i],r[i+n]=a[t.length+i]})),r):a})(l,n.axes,c.length);let p=((e,t,n,r)=>{let a=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>a.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>a[e]=n[t]))}else n.forEach((e=>a.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");a=e.map(((e,n)=>Math.round(e*t[n])))}return a})(c,s,u,n.axes),f=s.slice();0===s.length&&(f=c.map(((e,t)=>0===e?1:p[t]/e)),"stretch"!==n.keepAspectRatioPolicy&&(p=((e,t,n,r)=>{const a=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map((e=>n[e])),Number.MAX_VALUE):Math.min(...n,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map((e=>n[e])),Number.MIN_VALUE):Math.max(...n,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();n.fill(1,0,n.length);const i=e.slice();return r.axes.length>0?(r.axes.forEach((e=>n[e]=a)),r.axes.forEach((t=>i[t]=Math.round(e[t]*n[t])))):(n.fill(a,0,n.length),i.forEach(((e,t)=>i[t]=Math.round(e*n[t])))),i})(c,0,f,n)));const h=(0,o.outputVariable)("output",t.dataType,p),g=(0,o.inputVariable)("input",t.dataType,c),m=r.ShapeUtil.size(p),y=c.length===p.length&&c.every(((e,t)=>e===p[t])),b="tf_crop_and_resize"===n.coordinateTransformMode;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\\n      ${t=n.coordinateTransformMode,"fn getOriginalCoordinateFromResizedCoordinate(xResized: f32, xScale: f32, lengthResized: f32,    lengthOriginal: f32, roiStart: f32, roiEnd: f32) -> f32 { "+(()=>{switch(t){case"asymmetric":return"return xResized / xScale;";case"pytorch_half_pixel":return"if (lengthResized > 1) {                     return (xResized + 0.5) / xScale - 0.5;                   } else {                     return 0.0;                   }";case"tf_half_pixel_for_nn":return"return (xResized + 0.5) / xScale;";case"align_corners":return"if (lengthResized == 1) {                     return 0.0;                   } else {                     return xResized * (lengthOriginal - 1) / (lengthResized - 1);                   }";case"tf_crop_and_resize":return"if (lengthResized > 1) {                     return roiStart * (lengthOriginal - 1) +                           (xResized * (roiEnd - roiStart) * (lengthOriginal - 1)) / (lengthResized - 1);                   } else {                     return 0.5 * (roiStart + roiEnd) * f32(lengthOriginal - 1);                   }";case"half_pixel_symmetric":return["const outputWidth = xScale * lengthResized;","const adjustment = lengthResized / outputWidth;","const center = lengthOriginal / 2;","const offset = center * (1 - adjustment);","return offset + ((xResized + 0.5) / xScale) - 0.5;"].join("\\n");case"half_pixel":return"return ((xResized + 0.5) / xScale) - 0.5;";default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}"};\\n      ${(()=>{switch(n.mode){case"nearest":return`\\n              ${((e,t)=>`\\n    fn checkInputIndices(inputIndices: ${e.type.indices}) -> bool {\\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\\n      for (var i:u32 = 0; i < ${t.length}; i++) {\\n        var inputIndex = ${1===t.length?"inputIndices":"inputIndices[i]"};\\n        if (inputIndex < 0 || inputIndex >= inputShape[i]) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }`)(g,c)};\\n              ${((e,t)=>"fn getNearestPixelFromOriginal(xOriginal: f32, isDownSample: bool) -> f32 {"+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}")(n.nearestMode,a)};\\n              ${((e,t,n,r,a,i,o)=>`\\n    fn calculateInputIndicesFromOutputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\\n        const inputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\\n        const outputShape = array<u32, ${r.length}>(${r.map((e=>`${e}u`)).join(",")});\\n        const scales = array<f32, ${a.length}>(${a.map((e=>`${e}f`)).join(",")});\\n        const roi = array<f32, ${i.length}>(${i.map((e=>`${e}f`)).join(",")});\\n        var inputIndices: ${e.type.indices};\\n        for (var i:u32 = 0; i < ${r.length}; i++) {\\n          var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\\n          var inputIndex: u32;\\n          if (scales[i] == 1.0) {\\n            inputIndex = outputIndex;\\n          } else {\\n            var original_idx = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\\n                    f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${n.length}]);\\n            if (!${o} || (original_idx >= 0 && original_idx < f32(inputShape[i]))) {\\n              if (original_idx < 0) {\\n                inputIndex = 0;\\n              } else if (original_idx > (f32(inputShape[i]) - 1)) {\\n                inputIndex = inputShape[i] - 1;\\n              } else {\\n                inputIndex = u32(getNearestPixelFromOriginal(original_idx, scales[i] < 1));\\n              }\\n            } else {\\n              inputIndex = u32(original_idx);\\n            }\\n          }\\n          ${e.indicesSet("inputIndices","i","inputIndex")}\\n        }\\n        return inputIndices;\\n    }`)(g,h,c,p,f,d,b)};\\n              `;case"linear":return`\\n              ${((e,t,n,r,a)=>`\\n    fn calculateOriginalIndicesFromOutputIndices(outputIndices: ${e.type.indices}) -> array<f32, ${n.length}> {\\n      const inputShape = array<u32, ${t.length}>(${t.map((e=>`${e}u`)).join(",")});\\n      const outputShape = array<u32, ${n.length}>(${n.map((e=>`${e}u`)).join(",")});\\n      const scales = array<f32, ${r.length}>(${r.map((e=>`${e}f`)).join(",")});\\n      const roi = array<f32, ${a.length}>(${a.map((e=>`${e}f`)).join(",")});\\n      var originalIndices: array<f32, ${n.length}>;\\n      for (var i:u32 = 0; i < ${n.length}; i++) {\\n        var outputIndex = ${1===n.length?"outputIndices":"outputIndices[i]"};\\n        if (scales[i] == 1.0) {\\n          originalIndices[i] = f32(outputIndex);\\n        } else {\\n          originalIndices[i] = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), scales[i],\\n                f32(outputShape[i]), f32(inputShape[i]), roi[i], roi[i + ${t.length}]);\\n        }\\n      }\\n      return originalIndices;\\n    }`)(h,c,p,f,d)};\\n              ${((e,t,n,r,a,i,o)=>{const[s,u,l,c]=2===n.length?[-1,0,1,-1]:1===a[1]?[0,2,3,1]:[0,1,2,3];return`\\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> f32 {\\n      var inputIndices: ${e.type.indices};\\n      inputIndices[${u}] = max(0, min(row, ${n[u]} - 1));\\n      inputIndices[${l}] = max(0, min(col, ${n[l]} - 1));\\n      if (${n.length} > 2) {\\n        inputIndices[${c}] = channel;\\n        inputIndices[${s}] = batch;\\n      };\\n      return input[${e.indicesToOffset("inputIndices")}];\\n    }\\n\\n    fn bilinearInterpolation(outputIndices: ${t.type.indices}) -> f32 {\\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(outputIndices);\\n      var row:f32 = originalIndices[${u}];\\n      var col:f32 = originalIndices[${l}];\\n      if (${i} && (row < 0 || row > (${n[u]} - 1) || col < 0 || col > ${n[l]} - 1)) {\\n        return ${o};\\n      }\\n      row = max(0, min(row, ${n[u]} - 1));\\n      col = max(0, min(col, ${n[l]} - 1));\\n      var row1: u32 = u32(row);\\n      var col1: u32 = u32(col);\\n      var row2: u32 = u32(row + 1);\\n      var col2: u32 = u32(col + 1);\\n      var channel: u32 = 0;\\n      var batch: u32 = 0;\\n      if (${n.length>2}) {\\n        channel = u32(originalIndices[${c}]);\\n        batch = u32(originalIndices[${s}]);\\n      }\\n      var x11: f32 = getInputValue(batch, channel, row1, col1);\\n      var x12: f32 = getInputValue(batch, channel, row1, col2);\\n      var x21: f32 = getInputValue(batch, channel, row2, col1);\\n      var x22: f32 = getInputValue(batch, channel, row2, col2);\\n      var dx1: f32 = row - f32(row1);\\n      var dx2: f32 = f32(row2 ) - row;\\n      var dy1 = col - f32(col1);\\n      var dy2 = f32(col2) - col;\\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\\n    }`})(g,h,c,0,f,b,n.extrapolationValue)};\\n              `;case"cubic":return`\\n            ${((e,t,n,r,a,i,o,s,u,l)=>{const[c,d]=2===n.length?[0,1]:1===a[1]?[2,3]:[1,2],p=o=>{const d=o===c?"row":"col";return`\\n      fn ${d}CubicInterpolation(inputIndices: ${e.type.indices}, outputIndices: ${t.type.indices}) -> f32 {\\n        var outputIndex = ${1===r.length?"outputIndices":`outputIndices[${o}]`};\\n        var originalIdx: f32 = getOriginalCoordinateFromResizedCoordinate(f32(outputIndex), ${a[o]},\\n        f32(${r[o]}), f32(${n[o]}), ${i[o]}, ${i[o]} + ${n.length});\\n        var fractOriginalIdx: f32 = originalIdx - floor(originalIdx);\\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\\n\\n        if (${s} && (originalIdx < 0 || originalIdx > (${n[o]} - 1))) {\\n          return ${u};\\n        }\\n        var data: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\\n        for (var i: i32 = -1; i < 3; i++) {\\n          var ${d}: f32 = originalIdx + f32(i);\\n          if (${d} < 0 || ${d} >= ${n[o]}) {\\n            if (${l}) {\\n              coefs[i + 1] = 0.0;\\n              continue;\\n            } else if (${s}) {\\n              return ${u};\\n            } else {\\n              ${d} = max(0, min(${d}, ${n[o]} - 1));\\n            }\\n          }\\n          var inputIndicesCopy: ${e.type.indices} = inputIndices;\\n          inputIndicesCopy[${o}] = u32(${d});\\n          data[i + 1] = ${o===c?`input[${e.indicesToOffset("inputIndicesCopy")}];`:"\\n                                               rowCubicInterpolation(inputIndicesCopy, outputIndices);"}\\n        }\\n        return cubicInterpolation1D(data, coefs);\\n      }`};return`\\n    ${p(c)};\\n    ${p(d)};\\n  fn getCubicInterpolationCoefs(s: f32) -> array<f32, 4> {\\n    var absS = abs(s);\\n    var coeffs: array<f32, 4> = array<f32, 4>(0.0, 0.0, 0.0, 0.0);\\n    var oneMinusAbsS: f32 = 1.0 - absS;\\n    var twoMinusAbsS: f32 = 2.0 - absS;\\n    var onePlusAbsS: f32 = 1.0 + absS;\\n    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};\\n    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;\\n    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\\n    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};\\n    return coeffs;\\n  }\\n\\n  fn cubicInterpolation1D(x: array<f32, 4>, coefs: array<f32, 4>) -> f32 {\\n    var coefsSum: f32 = coefs[0] + coefs[1] + coefs[2] + coefs[3];\\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\\n  }\\n\\n  fn bicubicInterpolation(outputIndices: ${t.type.indices}) -> f32 {\\n    var inputIndices: ${e.type.indices} = outputIndices;\\n    return colCubicInterpolation(inputIndices, outputIndices);\\n  }\\n    `})(g,h,c,p,f,d,n.cubicCoeffA,b,n.extrapolationValue,n.excludeOutside)};\\n            `;default:throw Error("Invalid resize mode")}})()};\\n      ${e.declareVariables(g,h)}\\n      ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(m)}\\n        if (${y}) {\\n          output[global_idx] = input[global_idx];\\n        } else {\\n          let outputIndices = ${h.offsetToIndices("global_idx")};\\n          var inputIndices: ${g.type.indices};\\n          ${(()=>{switch(n.mode){case"nearest":return`inputIndices = calculateInputIndicesFromOutputIndices(outputIndices);\\n                  if (checkInputIndices(inputIndices)) {\\n                    output[global_idx] = input[${g.indicesToOffset("inputIndices")}];\\n                  } else {\\n                    output[global_idx] = ${n.extrapolationValue};\\n                  }`;case"linear":return"output[global_idx] = bilinearInterpolation(outputIndices);";case"cubic":return"output[global_idx] = bicubicInterpolation(outputIndices);";default:throw Error(`Unsupported resize mode: ${n.mode}`)}})()};\\n        }\\n      }`;var t},outputs:[{dims:p,dataType:t.dataType,gpuDataType:i.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(m/64)})})})(l,e,t,n,a,s,u)})},t.resize=(e,n)=>{const r=[],a=[],i=[],o=(e=>{const t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]})(e);((e,t,n,r,a,i)=>{const[o,s,u]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],l=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach((e=>i.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(s>0&&e.length>s&&e[s].dims.length>0){if(e[s].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==l&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");((e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for linear mode")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")})(r,t),t.axes.length>0&&((e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));const r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r})(r,t.axes,l).forEach(((e,t)=>r[t]=e))}if(u>0&&e.length>u&&(e[u].getBigInt64Array().forEach((e=>a.push(Number(e)))),a.length!==l||n>=18&&a.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(r.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(a.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(void 0!==r&&void 0!==a&&r.length>0&&a.length>l)throw new Error("Resize requires only of scales or sizes to be specified")})(e.inputs,n,o,r,a,i),e.compute((0,t.createResizeProgramInfoLoader)(e.inputs[0],n,o,r,a,i),{inputs:[0]})},t.parseResizeAttributes=e=>{const t=e.antialias,n=e.axes,r=e.coordinateTransformMode,i=e.cubicCoeffA,o=0!==e.excludeOutside,s=e.extrapolationValue,u=e.keepAspectRatioPolicy,l=e.mode,c=""===e.nearestMode?"simple":e.nearestMode;return(0,a.createAttributeWithCacheKey)({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:i,excludeOutside:o,extrapolationValue:s,keepAspectRatioPolicy:u,mode:l,nearestMode:c})}},8906:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSkipLayerNormAttributes=t.skipLayerNorm=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.skipLayerNorm=(e,t)=>{(e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error("inputs should be float type");const t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");const a=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){const t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){const t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}})(e.inputs);const n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(((e,t,n,a)=>{const s={name:"SkipLayerNormalization",inputTypes:new Array(e.length).fill(i.GpuDataType.default),cacheHint:t.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,a,s)=>{const u=t[0].dims,l=u,c=r.ShapeUtil.size(u),d=u.slice(-1)[0],p=s?u.slice(0,-1).concat(1):[],f=t.length>3,h=t.length>4,g=(0,o.tensorTypeToWsglStorageType)(t[0].dataType),m=s&&a>1,y=s&&a>2,b=a>3;let v=0;const w=[{dims:l,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}];return a>1&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}),a>2&&w.push({dims:p,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}),a>3&&w.push({dims:u,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default}),Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n      const hiddenSize: u32 = ${d};\\n      const epsilon: f32 = ${n.epsilon};\\n\\n      @group(0) @binding(${v++}) var<storage, read> x : array<${g}>;\\n      @group(0) @binding(${v++}) var<storage, read> skip : array<${g}>;\\n      @group(0) @binding(${v++}) var<storage, read> gamma : array<${g}>;\\n      ${f?`@group(0) @binding(${v++}) var<storage, read> beta : array<${g}>;`:""}\\n      ${h?`@group(0) @binding(${v++}) var<storage, read> bias : array<${g}>;`:""}\\n      @group(0) @binding(${v++}) var<storage, read_write> output : array<${g}>;\\n      ${m?`@group(0) @binding(${v++}) var<storage, read_write> meanOutput : array<${g}>;`:""}\\n      ${y?`@group(0) @binding(${v++}) var<storage, read_write> invStdOutput : array<${g}>;`:""}\\n      ${b?`@group(0) @binding(${v++}) var<storage, read_write> inputSkipBiasSum : array<${g}>;`:""}\\n\\n      ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(c/d)}\\n        let offset = global_idx * hiddenSize;\\n        var sum: f32 = 0.0;\\n        var squareSum: f32 = 0.0;\\n        for (var i: u32 = 0; i < hiddenSize; i++) {\\n          let skipValue = skip[offset + i];\\n          let biasValue = ${h?"bias[i]":"0.0"};\\n          let inputValue = x[offset + i];\\n          let value = inputValue + skipValue + biasValue;\\n          ${b?"inputSkipBiasSum[offset + i] = value;":""}\\n          output[offset + i] = value;\\n          sum += value;\\n          squareSum += value * value;\\n        }\\n        let mean: f32 = sum / f32(hiddenSize);\\n        let variance: f32 = sqrt(squareSum / f32(hiddenSize) - mean * mean + epsilon);\\n        ${m?"meanOutput[global_idx] = mean;":""}\\n        ${y?"invStdOutput[global_idx] = 1.0 / variance;":""}\\n        for (var i: u32 = 0; i < hiddenSize; i++) {\\n          output[offset + i] = (output[offset + i] - mean) / variance * gamma[i] + ${f?"beta[i]":"0.0"};\\n        }\\n      }`,outputs:w,dispatchGroup:()=>({x:Math.ceil(c/d/64)})})})(s,e,t,n,a)})})(e.inputs,t,e.outputCount,!1),{outputs:n})},t.parseSkipLayerNormAttributes=e=>{const t=e.epsilon;return(0,a.createAttributeWithCacheKey)({epsilon:t})}},5101:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSliceAttributes=t.slice=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075),s=(e,t)=>{const n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},u=(e,t,n,r,a)=>{let i=e;return e<0&&(i+=n[r[t]]),a[t]<0?Math.max(0,Math.min(i,n[r[t]]-1)):Math.max(0,Math.min(i,n[r[t]]))};t.slice=(e,t)=>{((e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))})(e.inputs,t);const n=((e,t)=>{const n=((e,t)=>{if(e.length>1){const t=s(e,1),n=s(e,2);let r=s(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),(0,a.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}return t})(e,t),l={name:"Slice",inputTypes:[i.GpuDataType.default],cacheHint:n.cacheKey+(e.length>4?"steps_"+e[4].dims.toString():"")};return Object.assign(Object.assign({},l),{get:()=>((e,t,n)=>{const a=t[0].dims,l=r.ShapeUtil.size(a),c=n.axes.length>0?r.ShapeUtil.normalizeAxes(n.axes,a.length):[...Array(a.length).keys()];let d=s(t,4);d.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===d.length&&(d=Array(c.length).fill(1));const p=n.starts.map(((e,t)=>u(e,t,a,c,d))),f=n.ends.map(((e,t)=>u(e,t,a,c,d)));if(c.length!==a.length)for(let e=0;e<a.length;++e)c.includes(e)||(p.splice(e,0,0),f.splice(e,0,a[e]),d.splice(e,0,1));const h=d.map((e=>Math.sign(e)));d.forEach(((e,t,n)=>{if(e<0){const r=(f[t]-p[t])/e,a=p[t],i=a+r*d[t];p[t]=i,f[t]=a,n[t]=-e}}));const g=a.slice(0);c.forEach(((e,t)=>{g[e]=Math.ceil((f[e]-p[e])/d[e])}));const m={dims:g,dataType:t[0].dataType,gpuDataType:i.GpuDataType.default},y=(0,o.outputVariable)("output",t[0].dataType,g),b=(0,o.inputVariable)("input",t[0].dataType,a),v=r.ShapeUtil.size(g);return Object.assign(Object.assign({},e),{getShaderSource:e=>`\\n      ${e.declareVariables(b,y)}\\n        const signs = array<i32, ${h.length}>(${h.map((e=>`${e}i`)).join(",")});\\n        const starts = array<u32, ${p.length}>(${p.map((e=>`${e}u`)).join(",")});\\n        const ends = array<u32, ${f.length}>(${f.map((e=>`${e}u`)).join(",")});\\n        const steps = array<u32, ${d.length}>(${d.map((e=>`${e}u`)).join(",")});\\n        const inputShape = array<u32, ${a.length}>(${a.map((e=>`${e}u`)).join(",")});\\n\\n        ${((e,t,n,r)=>`fn calculateInputIndices(outputIndices: ${t.type.indices}) -> ${e.type.indices} {\\n          var inputIndices: ${e.type.indices};\\n          var carry = 0u;\\n          for (var i = ${n.length}; i >= 0; i--) {\\n            var outputIndex = ${1===r.length?"outputIndices":"outputIndices[i]"};\\n            var inputIndex = outputIndex * steps[i] + starts[i] + carry;\\n            carry = inputIndex / inputShape[i];\\n            inputIndex = inputIndex % inputShape[i];\\n            if (signs[i] < 0) {\\n              inputIndex = inputShape[i] - inputIndex - 1u + starts[i];\\n            }\\n            ${1===n.length?"inputIndices":"inputIndices[i]"} = inputIndex;\\n          }\\n          return inputIndices;\\n      }`)(b,y,a,g)}\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(v)}\\n          let outputIndices = ${y.offsetToIndices("global_idx")};\\n          let inputIndices = calculateInputIndices(outputIndices);\\n          ${y.setByOffset("global_idx",b.getByIndices("inputIndices"))}\\n      }`,outputs:[m],dispatchGroup:()=>({x:Math.ceil(l/64)})})})(l,e,n)})})(e.inputs,t),l=n.get();if(!(r.ShapeUtil.size(l.outputs[0].dims)>0))throw new Error("slice: output size is 0");e.compute(n,{inputs:[0]})},t.parseSliceAttributes=e=>{const t=e.starts,n=e.ends,r=e.axes;return(0,a.createAttributeWithCacheKey)({starts:t,ends:n,axes:r})}},6198:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSoftmaxAttributes=t.softmax=t.softmaxProgramMetadata=void 0;const r=n(6952),a=n(387),i=n(1163);t.softmaxProgramMetadata={name:"Softmax",inputTypes:[i.GpuDataType.default]},t.softmax=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.");if(1!==e[0].dataType)throw new Error("Softmax input needs to be float.")})(e.inputs),e.compute(Object.assign(Object.assign({},t.softmaxProgramMetadata),{cacheHint:n.cacheKey,get:()=>((e,n)=>{const a="f32",o=e.dims,s=r.ShapeUtil.size(o);let u=n.axis;if(u<0&&(u=o.length+u),u<o.length-1)throw new Error("softmax only supports last axis for now.");const l=o[u],c=s/l;return Object.assign(Object.assign({},t.softmaxProgramMetadata),{outputs:[{dims:o,dataType:e.dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n      var<workgroup> rowMaxShared : ${a};\\n      var<workgroup> rowSumShared : ${a};\\n      var<workgroup> threadShared : array<${a}, 64>;\\n\\n      @group(0) @binding(0) var<storage, read> x : array<${a}>;\\n      @group(0) @binding(1) var<storage, read_write> result : array<${a}>;\\n\\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${a} {\\n        let index = row * row_stride + col;\\n        return x[index];\\n      }\\n\\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${a}) {\\n        let index = row * row_stride + col;\\n        result[index] = value;\\n      }\\n\\n      @compute @workgroup_size(64, 1, 1)\\n      fn main(@builtin(local_invocation_id) local_id : vec3<u32>, @builtin(global_invocation_id) global_id : vec3u) {\\n        let gindex = i32(global_id.x);\\n        let lindex = i32(local_id.x);\\n        const wg = 64;\\n        let row = gindex / wg;\\n        let cols = ${l};\\n        let row_stride : i32 = ${l};\\n\\n        // find the rows max\\n        var threadMax = -3.402823e+38f; // 6.2.4 in wgsl spec\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = getValue(row, col, row_stride);\\n          threadMax = max(threadMax, value);\\n        }\\n        if (lindex < cols) {\\n          threadShared[lindex] = threadMax;\\n        }\\n        workgroupBarrier();\\n\\n        var reduceSize = min(cols, wg);\\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\\n          reduceSize = currSize + (reduceSize & 1);\\n          if (lindex < currSize) {\\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowMaxShared = threadShared[0];\\n        }\\n        workgroupBarrier();\\n\\n        // find the rows sum\\n        var threadSum = 0.0;\\n        for (var col = lindex; col < cols; col += wg) {\\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\\n          threadSum += subExp;\\n        }\\n        threadShared[lindex] = threadSum;\\n        workgroupBarrier();\\n\\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\\n          if (lindex < currSize) {\\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowSumShared = threadShared[0];\\n        }\\n        workgroupBarrier();\\n\\n        // calculate final value for each element in the row\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\\n          setValue(row, col, row_stride, value);\\n        }\\n      }`,dispatchGroup:()=>({x:c})})})(e.inputs[0],n)}))},t.parseSoftmaxAttributes=e=>(0,a.createAttributeWithCacheKey)({axis:e.axis})},2067:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseSplitAttributes=t.split=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.split=(e,t)=>{(e=>{if(!e||e.length<1)throw new Error("too few inputs")})(e.inputs),e.compute(((e,t)=>{const n=1===e.length?t:((e,t)=>{const n=[];let r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),(0,a.createAttributeWithCacheKey)({numOutputs:r,axis:t.axis,splitSizes:n})})(e,t),s={name:"Split",inputTypes:[i.GpuDataType.default],cacheHint:n.cacheKey};return Object.assign(Object.assign({},s),{get:()=>((e,t,n)=>{const a=t[0].dims,s=r.ShapeUtil.size(a),u=t[0].dataType,l=a.length,c=n.axis,d=c<0?a.length+c:c,p=new Array(n.numOutputs),f=(0,o.inputVariable)("input",u,a),h=new Array(n.numOutputs),g=[],m=[];let y=0;for(let e=0;e<n.numOutputs;e++){y+=n.splitSizes[e],h[e]=y;const r=a.slice();r[n.axis]=n.splitSizes[e],m.push(r),p[e]=(0,o.outputVariable)(`output${e}`,u,m[e]),g.push({dims:m[e],dataType:t[0].dataType,gpuDataType:i.GpuDataType.default})}const b=l<2?"indices":`indices[${d}]`;return Object.assign(Object.assign({},e),{getShaderSource:e=>{return`\\n  ${e.declareVariables(f,...p)}\\n  const sizeInConcatAxis = array<u32, ${h.length}>(${h.map((e=>`${e}u`)).join(",")});\\n  ${t=h.length,`\\nfn calculateOutputIndex(index: u32) -> u32 {\\n    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {\\n    if (index < sizeInConcatAxis[i]) {\\n        return i;\\n    }\\n    }\\n    return ${t}u;\\n}`}\\n  ${(e=>{const t=e.length,n=[];for(let r=0;r<t;++r){const a=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(a):0===r?n.push(`if (outputNumber == ${r}u) { ${a} }`):r===t-1?n.push(`else { ${a} }`):n.push(`else if (outputNumber == ${r}) { ${a} }`)}return`\\n      fn writeBufferData(outputNumber: u32, indices: ${e[0].type.indices}, global_idx: u32) {\\n        ${n.join("\\n")}\\n      }`})(p)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\\n\\n    var indices = ${f.offsetToIndices("global_idx")};\\n    let outputNumber = calculateOutputIndex(${b});\\n    if (outputNumber != 0) {\\n        ${b} -= sizeInConcatAxis[outputNumber - 1u];\\n    }\\n    writeBufferData(outputNumber, indices, global_idx);\\n  }`;var t},outputs:g,dispatchGroup:()=>({x:Math.ceil(s/64)})})})(s,[e[0]],n)})})(e.inputs,t),{inputs:[0]})},t.parseSplitAttributes=e=>{const t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return(0,a.createAttributeWithCacheKey)({axis:t,numOutputs:r,splitSizes:n})}},8699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.tile=t.createTileProgramInfo=t.tileProgramMetadata=void 0;const r=n(6952),a=n(1163),i=n(2075);t.tileProgramMetadata={name:"Tile",inputTypes:[a.GpuDataType.default]};const o=e=>Array.from(e.getBigInt64Array(),Number);t.createTileProgramInfo=(e,t)=>{const n=t[0].dims,s=o(t[1]),u=((e,t)=>{const n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n})(n,s),l=r.ShapeUtil.size(u),c=t[0].dataType,d=(0,i.inputVariable)("input",c,n),p=(0,i.outputVariable)("output",c,u);return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\n      const inputShape = ${d.indices(...n)};\\n      ${e.declareVariables(d,p)}\\n      ${e.mainStart()}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\n      let outputIndices = ${p.offsetToIndices("global_idx")};\\n      var inputIndices: ${d.type.indices};\\n      for (var i = 0; i < ${n.length}; i++) {\\n        let inputDimValue = ${p.indicesGet("outputIndices","i")}  % ${d.indicesGet("inputShape","i")};\\n\\n        ${d.indicesSet("inputIndices","i","inputDimValue")}\\n      }\\n      ${p.setByOffset("global_idx",d.getByIndices("inputIndices"))}\\n    }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})},t.tile=e=>{(e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(o(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")})(e.inputs);const n=o(e.inputs[1]).toString();e.compute(Object.assign(Object.assign({},t.tileProgramMetadata),{cacheHint:n,get:()=>(0,t.createTileProgramInfo)(t.tileProgramMetadata,e.inputs)}),{inputs:[0]})}},2625:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075);t.transposeProgramMetadata={name:"Transpose",inputTypes:[i.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const a=e.dataType,u=e.dims,l=s(u,n),c=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(u,l),d=u.length,p=r.ShapeUtil.size(c),f=(0,o.outputVariable)("output",a,c),h=(0,o.inputVariable)("a",a,u);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:c,dataType:e.dataType,gpuDataType:i.GpuDataType.default}],getShaderSource:e=>`\\n  ${e.declareVariables(h,f)}\\n\\n  ${((e,t,n,r)=>{const a=[];a.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)a.push(n.indicesSet("a",e[r],`i[${r}]`));return a.push("return a;}"),a.join("\\n")})(l,d,h,f)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\n\\n    let indices = ${f.offsetToIndices("global_idx")};\\n    let aIndices = perm(indices);\\n\\n    ${f.setByOffset("global_idx",h.getByIndices("aIndices"))}\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Transpose only support float, int32, and uint32 data types")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,a.createAttributeWithCacheKey)({perm:e.perm})},9302:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.log=t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.not=t.leakyRelu=t.gelu=t.floor=t.exp=t.erf=t.erfImpl=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.cast=t.parseCastAttributes=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(6952),a=n(387),i=n(1163),o=n(2075),s=(e,t,n,a,s,u=e.dataType)=>{const l={name:t,inputTypes:[i.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},l),{get:()=>((e,t,n,a,s)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r,a,i)=>{const s=Math.ceil(t/4);let u="";u="string"==typeof a?`${a}(a)`:a("a");const l=(0,o.inputVariable)("inputData",n,[s],4),c=(0,o.outputVariable)("outputData",r,[s],4);return`\\n  ${e.declareVariables(l,c)}\\n\\n  ${null!=i?i:""}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(s)}\\n\\n    let a = ${l.getByOffset("global_idx")};\\n    ${c.setByOffset("global_idx",u)}\\n  }`})(e,r.ShapeUtil.size(t.dims),t.dataType,n,a,s),outputs:[{dims:t.dims,dataType:n,gpuDataType:i.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(l,e,u,n,a)})};t.abs=e=>{e.compute(s(e.inputs[0],"Abs","abs"))},t.acos=e=>{e.compute(s(e.inputs[0],"Acos","acos"))},t.acosh=e=>{e.compute(s(e.inputs[0],"Acosh","acosh"))},t.asin=e=>{e.compute(s(e.inputs[0],"Asin","asin"))},t.asinh=e=>{e.compute(s(e.inputs[0],"Asinh","asinh"))},t.atan=e=>{e.compute(s(e.inputs[0],"Atan","atan"))},t.atanh=e=>{e.compute(s(e.inputs[0],"Atanh","atanh"))},t.parseCastAttributes=e=>(0,a.createAttributeWithCacheKey)(e),t.cast=(e,t)=>{let n;switch(t.to){case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(s(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},t.clipV10=(e,t)=>{e.compute(s(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,a.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(s(e.inputs[0],"Ceil","ceil"))},t.cos=e=>{e.compute(s(e.inputs[0],"Cos","cos"))},t.cosh=e=>{e.compute(s(e.inputs[0],"Cosh","cosh"))},t.parseAlphaAttributes=e=>(0,a.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(s(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\\n  const elu_alpha_: f32 = f32(${t.alpha});\\n\\n  fn elu_f32(a: f32) -> f32 {\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\n  }\\n\\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\n  }`,t.cacheKey))},t.erfImpl=e=>`\\nconst r0: f32 = 0.3275911;\\nconst r1: f32 = 0.254829592;\\nconst r2: f32 = -0.284496736;\\nconst r3: f32 = 1.421413741;\\nconst r4: f32 = -1.453152027;\\nconst r5: f32 = 1.061405429;\\n\\nfn erf_vf32(v: ${e}) -> ${e} {\\n  let absv = abs(v);\\n  let x = 1.0 / (1.0 + r0 * absv);\\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\n}`,t.erf=e=>{e.compute(s(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),(0,t.erfImpl)("vec4<f32>")))},t.exp=e=>{e.compute(s(e.inputs[0],"Exp","exp"))},t.floor=e=>{e.compute(s(e.inputs[0],"Floor","floor"))},t.gelu=e=>{e.compute(s(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),(0,t.erfImpl)("vec4<f32>")))},t.leakyRelu=(e,t)=>{e.compute(s(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.not=e=>{e.compute(s(e.inputs[0],"Not",(e=>`!${e}`)))},t.neg=e=>{e.compute(s(e.inputs[0],"Neg",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(s(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(s(e.inputs[0],"Relu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(s(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(s(e.inputs[0],"Sin","sin"))},t.sinh=e=>{e.compute(s(e.inputs[0],"Sinh","sinh"))},t.sqrt=e=>{e.compute(s(e.inputs[0],"Sqrt","sqrt"))},t.tan=e=>{e.compute(s(e.inputs[0],"Tan","tan"))},t.tanh=e=>{e.compute(s(e.inputs[0],"Tanh","tanh"))},t.thresholdedRelu=(e,t)=>(e.compute(s(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0),t.log=e=>{e.compute(s(e.inputs[0],"Log","log"))}},8305:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgramManager=void 0;const r=n(7917),a=n(4955),i=n(2075);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,a,i){const o=this.backend.device,s=this.backend.getComputePassEncoder(),u=this.backend.supportTimestampQuery&&"default"===this.backend.env.webgpu.profilingMode;u&&s.writeTimestamp(this.backend.profilingQuerySet,0),s.setPipeline(e.computePipeline);const l=[];for(const e of n)l.push({binding:l.length,resource:{buffer:e.buffer}});for(const e of a)l.push({binding:l.length,resource:{buffer:e.buffer}});const c=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:l,label:e.programInfo.name});if(s.setBindGroup(0,c),s.dispatchWorkgroups(...i),this.backend.pendingDispatchNumber++,u){s.writeTimestamp(this.backend.profilingQuerySet,1),null==this.backend.profilingQueryData&&(this.backend.profilingQueryData=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE));const n=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,this.backend.profilingQueryData.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(this.backend.profilingQueryData.buffer,0,n.buffer,0,16),this.backend.flush();const a=this.backend.currentKernelId,i=this.backend.kernels.get(a),o=`[${i[0]}] ${i[1]}`;n.buffer.mapAsync(GPUMapMode.READ).then((()=>{const i=new BigUint64Array(n.buffer.getMappedRange()),s=i[0],u=i[1];n.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=s);const l=Number(s-this.backend.profilingTimeBase),c=Number(u-this.backend.profilingTimeBase);if(!Number.isSafeInteger(l)||!Number.isSafeInteger(c))throw new RangeError("incorrect timestamp range");this.backend.gpuDataManager.release(n.id);let d="";t.forEach(((e,t)=>{d+=`input[${t}]: [${e.dims}] | ${(0,r.tensorDataTypeEnumToString)(e.dataType)}, `}));let p="";e.programInfo.outputs.forEach(((e,t)=>{p+=`output[${t}]: [${e.dims}] | ${(0,r.tensorDataTypeEnumToString)(e.dataType)}, `})),console.log(`[profiling] kernel "${a}|${o}" ${d}${p}execution time: ${c-l} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,r=(0,i.createShaderHelper)(t),o=e.getShaderSource(r),s=`${r.additionalImplementations}\\n${o}`,u=n.createShaderModule({code:s,label:e.name});return(0,a.LOG_DEBUG)("verbose",(()=>`[WebGPU] shader code: ${s}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name})}}normalizeDispatchGroupSize(e){const t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=a&&n<=a&&r<=a)return[t,n,r];const i=t*n*r;let o=Math.ceil(Math.sqrt(i));if(o>a){if(o=Math.ceil(Math.cbrt(i)),o>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}return[o,o,1]}}},1163:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]="default",n[n.upload=1]="upload",n[n.profile=2]="profile"},7918:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRunOptions=void 0;const r=n(263),a=n(1497);t.setRunOptions=e=>{const t=(0,r.getInstance)();let n=0;const i=[],o=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))o.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))o.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(o.terminate=!1);let r=0;return void 0!==(null==e?void 0:e.tag)&&(r=(0,a.allocWasmString)(e.tag,i)),n=t._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,r),0===n&&(0,a.checkLastError)("Can\'t create run options."),void 0!==(null==e?void 0:e.extra)&&(0,a.iterateExtraOptions)(e.extra,"",new WeakSet,((e,r)=>{const o=(0,a.allocWasmString)(e,i),s=(0,a.allocWasmString)(r,i);0!==t._OrtAddRunConfigEntry(n,o,s)&&(0,a.checkLastError)(`Can\'t set a run config entry: ${e} - ${r}.`)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach((e=>t._free(e))),e}}},7622:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setSessionOptions=void 0;const r=n(263),a=n(1497);t.setSessionOptions=e=>{var t,n,i,o;const s=(0,r.getInstance)();let u=0;const l=[],c=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(c);try{const e=(e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=c.graphOptimizationLevel)&&void 0!==t?t:"all"),d=(e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=c.executionMode)&&void 0!==n?n:"sequential"),p="string"==typeof c.logId?(0,a.allocWasmString)(c.logId,l):0,f=null!==(i=c.logSeverityLevel)&&void 0!==i?i:2;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log serverity level is not valid: ${f}`);const h=null!==(o=c.logVerbosityLevel)&&void 0!==o?o:0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);const g="string"==typeof c.optimizedModelFilePath?(0,a.allocWasmString)(c.optimizedModelFilePath,l):0;return u=s._OrtCreateSessionOptions(e,!!c.enableCpuMemArena,!!c.enableMemPattern,d,!!c.enableProfiling,0,p,f,h,g),0===u&&(0,a.checkLastError)("Can\'t create session options."),c.executionProviders&&((e,t,n)=>{for(const i of t){let t="string"==typeof i?i:i.name;switch(t){case"xnnpack":t="XNNPACK";break;case"webnn":if(t="WEBNN","string"!=typeof i){const t=i;if(null==t?void 0:t.deviceType){const i=(0,a.allocWasmString)("deviceType",n),o=(0,a.allocWasmString)(t.deviceType,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,i,o)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'deviceType\' - ${t.deviceType}.`)}if(null==t?void 0:t.powerPreference){const i=(0,a.allocWasmString)("powerPreference",n),o=(0,a.allocWasmString)(t.powerPreference,n);0!==(0,r.getInstance)()._OrtAddSessionConfigEntry(e,i,o)&&(0,a.checkLastError)(`Can\'t set a session config entry: \'powerPreference\' - ${t.powerPreference}.`)}}break;case"webgpu":t="JS";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}const o=(0,a.allocWasmString)(t,n);0!==(0,r.getInstance)()._OrtAppendExecutionProvider(e,o)&&(0,a.checkLastError)(`Can\'t append execution provider: ${t}.`)}})(u,c.executionProviders,l),void 0!==c.extra&&(0,a.iterateExtraOptions)(c.extra,"",new WeakSet,((e,t)=>{const n=(0,a.allocWasmString)(e,l),r=(0,a.allocWasmString)(t,l);0!==s._OrtAddSessionConfigEntry(u,n,r)&&(0,a.checkLastError)(`Can\'t set a session config entry: ${e} - ${t}.`)})),[u,l]}catch(e){throw 0!==u&&s._OrtReleaseSessionOptions(u),l.forEach((e=>s._free(e))),e}}},7917:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},1259:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const r=n(7918),a=n(7622),i=n(7917),o=n(263),s=n(1497);t.initRuntime=async e=>{var t,r;t=e.wasm.numThreads,r=(0,i.logLevelStringToEnum)(e.logLevel),0!==(0,o.getInstance)()._OrtInit(t,r)&&(0,s.checkLastError)("Can\'t initialize onnxruntime.");{const t=n(7675).S;await t((0,o.getInstance)(),e)}};const u=new Map;t.createSessionAllocate=e=>{const t=(0,o.getInstance)(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,o.getInstance)();let r=0,i=0,l=[];const c=[],d=[];try{[i,l]=(0,a.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],i),0===r&&(0,s.checkLastError)("Can\'t create a session.");const[p,f]=(e=>{const t=(0,o.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&(0,s.checkLastError)("Can\'t get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}})(r),h=[],g=[];for(let e=0;e<p;e++){const t=n._OrtGetInputName(r,e);0===t&&(0,s.checkLastError)("Can\'t get an input name."),c.push(t),h.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(r,e);0===t&&(0,s.checkLastError)("Can\'t get an output name."),d.push(t),g.push(n.UTF8ToString(t))}return u.set(r,[r,c,d]),[r,h,g]}catch(e){throw c.forEach((e=>n._OrtFree(e))),d.forEach((e=>n._OrtFree(e))),0!==r&&n._OrtReleaseSession(r),e}finally{n._free(e[0]),0!==i&&n._OrtReleaseSessionOptions(i),l.forEach((e=>n._free(e)))}},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,o.getInstance)(),n=u.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[r,a,i]=n;a.forEach((e=>t._OrtFree(e))),i.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),u.delete(e)},t.run=async(e,t,n,a,l)=>{var c;const d=(0,o.getInstance)(),p=u.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);const[f,h,g]=p,m=t.length,y=a.length;let b=0,v=[];const w=[],$=[];try{[b,v]=(0,r.setRunOptions)(l);for(let e=0;e<m;e++){const t=n[e][0],r=n[e][1],a=n[e][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=d._malloc(u),$.push(o);let e=o/4;for(let t=0;t<a.length;t++){if("string"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);d.HEAPU32[e++]=(0,s.allocWasmString)(a[t],$)}}else u=a.byteLength,o=d._malloc(u),$.push(o),d.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const l=d.stackSave(),c=d.stackAlloc(4*r.length);try{let n=c/4;r.forEach((e=>d.HEAP32[n++]=e));const a=d._OrtCreateTensor((0,i.tensorDataTypeStringToEnum)(t),o,u,c,r.length);0===a&&(0,s.checkLastError)(`Can\'t create tensor for input[${e}].`),w.push(a)}finally{d.stackRestore(l)}}const o=d.stackSave(),u=d.stackAlloc(4*m),p=d.stackAlloc(4*m),x=d.stackAlloc(4*y),S=d.stackAlloc(4*y);try{let n=u/4,r=p/4,o=x/4,l=S/4;for(let e=0;e<m;e++)d.HEAPU32[n++]=w[e],d.HEAPU32[r++]=h[t[e]];for(let e=0;e<y;e++)d.HEAPU32[o++]=0,d.HEAPU32[l++]=g[a[e]];null===(c=d.jsepOnRunStart)||void 0===c||c.call(d,e);let v=d._OrtRun(f,p,u,m,S,y,x,b);const $=d.jsepRunPromise;$&&(v=await $);const _=d.jsepOnRunEnd;_&&await _(e);const O=[];0!==v&&(0,s.checkLastError)("failed to call OrtRun().");for(let e=0;e<y;e++){const t=d.HEAPU32[x/4+e],n=d.stackSave(),r=d.stackAlloc(16);let a,o=0;try{v=d._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==v&&(0,s.checkLastError)(`Can\'t access output tensor data on index ${e}.`);let n=r/4;const u=d.HEAPU32[n++];o=d.HEAPU32[n++];const l=d.HEAPU32[n++],c=d.HEAPU32[n++],p=[];for(let e=0;e<c;e++)p.push(d.HEAPU32[l/4+e]);d._OrtFree(l);const f=0===p.length?1:p.reduce(((e,t)=>e*t));if(a=(0,i.tensorDataTypeEnumToString)(u),"string"===a){const e=[];let t=o/4;for(let n=0;n<f;n++){const r=d.HEAPU32[t++],a=n===f-1?void 0:d.HEAPU32[t]-r;e.push(d.UTF8ToString(r,a))}O.push([a,p,e])}else{const e=new((0,i.tensorTypeToTypedArrayConstructor)(a))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(d.HEAPU8.subarray(o,o+e.byteLength)),O.push([a,p,e])}}finally{d.stackRestore(n),"string"===a&&o&&d._free(o),d._OrtReleaseTensor(t)}}return O}finally{d.stackRestore(o)}}finally{w.forEach((e=>d._OrtReleaseTensor(e))),$.forEach((e=>d._free(e))),0!==b&&d._OrtReleaseRunOptions(b),v.forEach((e=>d._free(e)))}},t.endProfiling=e=>{const t=(0,o.getInstance)(),n=u.get(e);if(!n)throw new Error("invalid session id");const r=n[0],a=t._OrtEndProfiling(r);0===a&&(0,s.checkLastError)("Can\'t get an profile file name."),t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const o=i(n(6449)),s=n(9377),u=n(5711);let l,c=!1,d=!1,p=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(d)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(p)throw new Error("previous call to \'initializeWebAssembly()\' failed.");d=!0;const t=e.initTimeout,r=e.numThreads,a=e.simd,i=r>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),f=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),h=e.wasmPaths,g="string"==typeof h?h:void 0,m=((e,t)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":e?"ort-wasm-simd.wasm":"ort-wasm.wasm")(f,i),y="object"==typeof h?h[m]:void 0;let b=!1;const v=[];if(t>0&&v.push(new Promise((e=>{setTimeout((()=>{b=!0,e()}),t)}))),v.push(new Promise(((e,t)=>{const r=i?u:s,a={locateFile:(e,t)=>{if(i&&e.endsWith(".worker.js")&&"undefined"!=typeof Blob)return URL.createObjectURL(new Blob([n(4154)],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(y)return y;const e=null!=g?g:t;return"ort-wasm-simd.wasm"===m?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===m?e+"ort-wasm-simd-threaded.jsep.wasm":e+m}return t+e}};if(i)if("undefined"==typeof Blob)a.mainScriptUrlOrBlob=o.join(__dirname,"ort-wasm-threaded.js");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(a).then((t=>{d=!1,c=!0,l=t,e()}),(e=>{d=!1,p=!0,t(e)}))}))),await Promise.race(v),b)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&l)return l;throw new Error("WebAssembly is not initialized yet.")},t.dispose=()=>{var e;!c||d||p||(d=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,d=!1,c=!1,p=!0)}},1497:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkLastError=t.iterateExtraOptions=t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(e)+1,i=n._malloc(a);return n.stringToUTF8(e,i,a),t.push(i),i},t.iterateExtraOptions=(e,n,r,a)=>{if("object"==typeof e&&null!==e){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach((([e,i])=>{const o=n?n+e:e;if("object"==typeof i)(0,t.iterateExtraOptions)(i,o+".",r,a);else if("string"==typeof i||"number"==typeof i)a(o,i.toString());else{if("boolean"!=typeof i)throw new Error("Can\'t handle extra config type: "+typeof i);a(o,i?"1":"0")}}))},t.checkLastError=e=>{const t=(0,r.getInstance)(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const r=t.HEAP32[n/4],a=t.HEAPU32[n/4+1],i=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(n)}}},5711:(e,t,n)=>{var _scriptDir,r=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return E.buffer!=R.buffer&&W(),R}function r(){return E.buffer!=R.buffer&&W(),D}function a(){return E.buffer!=R.buffer&&W(),z}function i(){return E.buffer!=R.buffer&&W(),j}function o(){return E.buffer!=R.buffer&&W(),G}var s,u,l=e;l.ready=new Promise(((e,t)=>{s=e,u=t})),l.jsepInit=(e,t,n,r,a,i,o,s)=>{l.Jb=e,l.pb=t,l.rb=n,l.bb=r,l.qb=a,l.xa=i,l.sb=o,l.tb=s,l.jsepOnRunStart=e=>{if(l.jsepRunPromise=new Promise((e=>{l.ub=e})),l.Va)throw Error("Session already started");l.Va={sessionId:e,errors:[]}},l.jsepOnRunEnd=e=>{if(l.Va.sessionId!==e)throw Error("Session ID mismatch");const t=l.Va.errors;return l.Va=null,0===t.length?Promise.resolve():new Promise(((e,n)=>{Promise.all(t).then((t=>{0<(t=t.filter((e=>e))).length?n(Error(t.join("\\n"))):e()}),(e=>{n(e)}))}))}};var c,d,p,f=Object.assign({},l),h="./this.program",g=(e,t)=>{throw t},m="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function $(e){return l.locateFile?l.locateFile(e,w):w+e}if(b){var x=n(1384),S=n(908);let e;w=y?S.dirname(w)+"/":__dirname+"/",c=(e,t)=>(e=e.startsWith("file://")?new URL(e):S.normalize(e),x.readFileSync(e,t?void 0:"utf8")),p=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),d=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):S.normalize(e),x.readFile(e,r?void 0:"utf8",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!l.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),g=(e,t)=>{throw process.exitCode=e,t},l.inspect=()=>"[Emscripten Module object]";try{e=n(9925)}catch(e){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),e}global.Worker=e.Worker}else(m||y)&&(y?w=self.location.href:"undefined"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf("blob:")?w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b||(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));b&&"undefined"==typeof performance&&(global.performance=n(6953).performance);var _=console.log.bind(console),O=console.error.bind(console);b&&(_=(...e)=>x.writeSync(1,e.join(" ")+"\\n"),O=(...e)=>x.writeSync(2,e.join(" ")+"\\n"));var A,C=l.print||_,T=l.printErr||O;Object.assign(l,f),f=null,l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit),l.wasmBinary&&(A=l.wasmBinary);var I=l.noExitRuntime||!0;"object"!=typeof WebAssembly&&Z("no native wasm support detected");var E,k,P,M,R,D,z,j,G,B=!1;function W(){var e=E.buffer;l.HEAP8=R=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=z=new Int32Array(e),l.HEAPU8=D=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=j=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=G=new Float64Array(e)}var U=l.INITIAL_MEMORY||16777216;if(5242880<=U||Z("INITIAL_MEMORY should be larger than STACK_SIZE, was "+U+"! (STACK_SIZE=5242880)"),v)E=l.wasmMemory;else if(l.wasmMemory)E=l.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:U/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw T("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&T("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");W(),U=E.buffer.byteLength;var N=[],L=[],H=[],V=0;function F(){return I||0<V}var q,K=0,Y=null,J=null;function X(){K++,l.monitorRunDependencies&&l.monitorRunDependencies(K)}function Q(){if(K--,l.monitorRunDependencies&&l.monitorRunDependencies(K),0==K&&(null!==Y&&(clearInterval(Y),Y=null),J)){var e=J;J=null,e()}}function Z(e){throw l.onAbort&&l.onAbort(e),T(e="Aborted("+e+")"),B=!0,M=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function ee(e){return e.startsWith("data:application/octet-stream;base64,")}function te(e){if(e==q&&A)return new Uint8Array(A);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}function ne(e,t,n){return function(e){if(!A&&(m||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>te(e)));if(d)return new Promise(((t,n)=>{d(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>te(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{T("failed to asynchronously prepare wasm: "+e),Z(e)}))}ee(q="ort-wasm-simd-threaded.wasm")||(q=$(q));var re,ae={882844:e=>{l.ub?.(e)},882885:e=>l.pb(e),882918:e=>l.rb(e),882950:(e,t,n)=>{l.bb(e,t,n,!0)},882989:(e,t,n)=>{l.bb(e,t,n)},883022:e=>{l.xa("Abs",e,void 0)},883073:e=>{l.xa("Neg",e,void 0)},883124:e=>{l.xa("Floor",e,void 0)},883177:e=>{l.xa("Ceil",e,void 0)},883229:e=>{l.xa("Reciprocal",e,void 0)},883287:e=>{l.xa("Sqrt",e,void 0)},883339:e=>{l.xa("Exp",e,void 0)},883390:e=>{l.xa("Erf",e,void 0)},883441:e=>{l.xa("Sigmoid",e,void 0)},883496:e=>{l.xa("Log",e,void 0)},883547:e=>{l.xa("Sin",e,void 0)},883598:e=>{l.xa("Cos",e,void 0)},883649:e=>{l.xa("Tan",e,void 0)},883700:e=>{l.xa("Asin",e,void 0)},883752:e=>{l.xa("Acos",e,void 0)},883804:e=>{l.xa("Atan",e,void 0)},883856:e=>{l.xa("Sinh",e,void 0)},883908:e=>{l.xa("Cosh",e,void 0)},883960:e=>{l.xa("Asinh",e,void 0)},884013:e=>{l.xa("Acosh",e,void 0)},884066:e=>{l.xa("Atanh",e,void 0)},884119:e=>{l.xa("Tanh",e,void 0)},884171:e=>{l.xa("Not",e,void 0)},884222:(e,t,n)=>{l.xa("ClipV10",e,{min:t,max:n})},884294:e=>{l.xa("Clip",e,void 0)},884346:(e,t)=>{l.xa("Elu",e,{alpha:t})},884404:e=>{l.xa("Relu",e,void 0)},884456:(e,t)=>{l.xa("LeakyRelu",e,{alpha:t})},884520:(e,t)=>{l.xa("ThresholdedRelu",e,{alpha:t})},884590:(e,t)=>{l.xa("Cast",e,{to:t})},884648:e=>{l.xa("Add",e,void 0)},884699:e=>{l.xa("Sub",e,void 0)},884750:e=>{l.xa("Mul",e,void 0)},884801:e=>{l.xa("Div",e,void 0)},884852:e=>{l.xa("Pow",e,void 0)},884903:e=>{l.xa("Equal",e,void 0)},884956:e=>{l.xa("Greater",e,void 0)},885011:e=>{l.xa("GreaterOrEqual",e,void 0)},885073:e=>{l.xa("Less",e,void 0)},885125:e=>{l.xa("LessOrEqual",e,void 0)},885184:(e,t,n,r,i)=>{l.xa("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},885348:(e,t,n,r,i)=>{l.xa("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},885511:(e,t,n,r,i)=>{l.xa("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},885674:(e,t,n,r,i)=>{l.xa("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},885838:(e,t,n,r,i)=>{l.xa("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886001:(e,t,n,r,i)=>{l.xa("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886163:(e,t,n,r,i)=>{l.xa("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886325:(e,t,n,r,i)=>{l.xa("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886491:(e,t,n,r,i)=>{l.xa("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886660:(e,t,n,r,i)=>{l.xa("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},886829:(e,t,n)=>{l.xa("Transpose",e,{perm:t?Array.from(a().subarray(n>>>0,n+t>>>0)):[]})},886942:(e,n,r,a,i,o,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:a,kernel_shape:[i],pads:[o,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},887170:(e,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,a],group:i,kernel_shape:[o,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},887429:(e,n,r,a,i,o,s,u,c,d)=>{l.xa("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:a,kernel_shape:[i],pads:[o,s],strides:[u],w_is_const:()=>!!t()[d>>>0]})},887657:(e,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,a],group:i,kernel_shape:[o,s],pads:[u,c,d,p],strides:[f,h],w_is_const:()=>!!t()[m>>>0]})},887916:(e,n,r,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:i,kernel_shape:[o],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(a().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(a().subarray(m>>>0,m+g>>>0)):[]})},888296:(e,n,r,i,o,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,r+2>>>0)),group:i,kernelShape:Array.from(a().subarray(o>>>0,o+2>>>0)),pads:Array.from(a().subarray(s>>>0,s+4>>>0)),strides:Array.from(a().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(a().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(a().subarray(g>>>0,g+h>>>0)):[]})},888819:(e,n,r,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:i,kernel_shape:[o],pads:[s,u],strides:[c],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(a().subarray(h>>>0,h+f>>>0)):[],outputShape:g?Array.from(a().subarray(m>>>0,m+g>>>0)):[]})},889199:(e,n,r,i,o,s,u,c,d,p,f,h,g)=>{l.xa("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,r+2>>>0)),group:i,kernelShape:Array.from(a().subarray(o>>>0,o+2>>>0)),pads:Array.from(a().subarray(s>>>0,s+4>>>0)),strides:Array.from(a().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:0<p?Array.from(a().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(a().subarray(g>>>0,g+h>>>0)):[]})},889722:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},889813:(e,t,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},890097:(e,t)=>{l.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},890188:(e,t,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},890472:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},890559:(e,t,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},890839:(e,t)=>{l.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},890926:(e,t,n,r,a,i,o,s,u,c,d,p,f,h,g,m)=>{l.xa("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,o],kernel_shape:[s,u],pads:[c,d,p,f],strides:[h,g]})},891206:(e,t,n,r,a)=>{l.xa("Gemm",e,{alpha:t,beta:n,transA:r,transB:a})},891310:e=>{l.xa("MatMul",e,void 0)},891364:(e,t,n,r)=>{l.xa("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},891472:(e,t,n,r)=>{l.xa("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},891580:(e,t)=>{l.xa("Softmax",e,{axis:t})},891643:(e,t)=>{l.xa("Concat",e,{axis:t})},891703:(e,t,n,r,i)=>{l.xa("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[]})},891848:e=>{l.xa("Expand",e,void 0)},891902:(e,t)=>{l.xa("Gather",e,{axis:Number(t)})},891973:(e,t)=>{l.xa("GatherElements",e,{axis:Number(t)})},892052:(e,t,n,r,i,o,s,u,c,d,p)=>{l.xa("Resize",e,{antialias:t,axes:n?Array.from(a().subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:de(i),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:de(c),mode:de(d),nearestMode:de(p)})},892403:(e,t,n,r,i,o,s)=>{l.xa("Slice",e,{starts:t?Array.from(a().subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(a().subarray(i>>>0,i+r>>>0)):[],axes:o?Array.from(a().subarray(s>>>0,s+o>>>0)):[]})},892634:e=>{l.xa("Tile",e,void 0)},892686:(e,t,n)=>{l.xa("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},892793:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},892907:(e,t,n)=>{l.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},893021:e=>{l.xa("Gelu",e,void 0)},893073:(e,t)=>{l.xa("SkipLayerNormalization",e,{epsilon:t})},893154:e=>{l.sb(e)},893188:(e,t)=>l.tb(e,t,l.Va)};function ie(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function oe(e){e.terminate(),e.onmessage=()=>{}}function se(e){(e=he.Ja[e])||Z(),he.yb(e)}function ue(e){var t=he.mb();if(!t)return 6;he.Ra.push(t),he.Ja[e.Qa]=t,t.Qa=e.Qa;var n={cmd:"run",start_routine:e.zb,arg:e.kb,pthread_ptr:e.Qa};return b&&t.unref(),t.postMessage(n,e.Fb),0}var le="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,ce=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&le)return le.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var a=e[t++];if(128&a){var i=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r},de=(e,t)=>(e>>>=0)?ce(r(),e,t):"";function pe(e){if(v)return Ke(1,1,e);M=e,F()||(he.Ab(),l.onExit&&l.onExit(e),B=!0),g(e,new ie(e))}var fe=e=>{if(M=e,v)throw me(e),"unwind";pe(e)},he={Ua:[],Ra:[],fb:[],Ja:{},Ya:function(){v?he.ob():he.nb()},nb:function(){N.unshift((()=>{X(),he.vb((()=>Q()))}))},ob:function(){he.receiveObjectTransfer=he.xb,he.threadInitTLS=he.eb,he.setExitStatus=he.cb,I=!1},cb:function(e){M=e},Lb:["$terminateWorker"],Ab:function(){for(var e of he.Ra)oe(e);for(e of he.Ua)oe(e);he.Ua=[],he.Ra=[],he.Ja=[]},yb:function(e){var t=e.Qa;delete he.Ja[t],he.Ua.push(e),he.Ra.splice(he.Ra.indexOf(e),1),e.Qa=0,Tt(t)},xb:function(){},eb:function(){he.fb.forEach((e=>e()))},wb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=xt()){var a=he.Ja[n.Kb];a?a.postMessage(n,n.transferList):T(\'Internal error! Worker sent a message "\'+r+\'" to target pthread \'+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===r?Ge():"spawnThread"===r?ue(n):"cleanupThread"===r?se(n.thread):"killThread"===r?(n=n.thread,r=he.Ja[n],delete he.Ja[n],oe(r),Tt(n),he.Ra.splice(he.Ra.indexOf(r),1),r.Qa=0):"cancelThread"===r?he.Ja[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?l[n.handler](...n.args):r&&T("worker sent an unknown command "+r)},e.onerror=e=>{throw T("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var n,r=[];for(n of["onExit","onAbort","print","printErr"])l.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:"load",handlers:r,urlOrBlob:l.mainScriptUrlOrBlob||_scriptDir,wasmMemory:E,wasmModule:P})})),vb:function(e){e()},jb:function(){var e=$("ort-wasm-simd-threaded.worker.js");e=new Worker(e),he.Ua.push(e)},mb:function(){return 0==he.Ua.length&&(he.jb(),he.wb(he.Ua[0])),he.Ua.pop()}};l.PThread=he;var ge=e=>{for(;0<e.length;)e.shift()(l)};function me(e){if(v)return Ke(2,0,e);fe(e)}function ye(e){this.ab=e-24,this.ib=function(e){i()[this.ab+4>>2>>>0]=e},this.hb=function(e){i()[this.ab+8>>2>>>0]=e},this.Ya=function(e,t){this.gb(),this.ib(e),this.hb(t)},this.gb=function(){i()[this.ab+16>>2>>>0]=0}}function be(e,t,n,r){return v?Ke(3,1,e,t,n,r):ve(e,t,n,r)}function ve(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,"undefined"==typeof SharedArrayBuffer)return T("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return v&&0===a.length?be(e,t,n,r):(e={zb:n,Qa:e,kb:r,Fb:a},v?(e.Hb="spawnThread",postMessage(e,a),0):ue(e))}function we(e,t,n){return v?Ke(4,1,e,t,n):0}function $e(e,t){if(v)return Ke(5,1,e,t)}l.establishStackSpace=function(){var e=xt(),t=a()[e+52>>2>>>0];e=a()[e+56>>2>>>0],Pt(t,t-e),Rt(t)},l.invokeEntryPoint=function(e,t){e=zt.apply(null,[e,t]),F()?he.cb(e):It(e)};var xe=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Se=(e,t,n,r)=>{if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<e.length;++i){var o=e.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),127>=o){if(n>=r)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++>>>0]=224|o>>12}else{if(n+3>=r)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-a},_e=(e,t,n)=>Se(e,r(),t,n);function Oe(e,t){if(v)return Ke(6,1,e,t)}function Ae(e,t,n){if(v)return Ke(7,1,e,t,n)}function Ce(e,t,n){return v?Ke(8,1,e,t,n):0}function Te(e,t){if(v)return Ke(9,1,e,t)}function Ie(e,t,n){if(v)return Ke(10,1,e,t,n)}function Ee(e,t,n,r){if(v)return Ke(11,1,e,t,n,r)}function ke(e,t,n,r){if(v)return Ke(12,1,e,t,n,r)}function Pe(e,t,n,r){if(v)return Ke(13,1,e,t,n,r)}function Me(e){if(v)return Ke(14,1,e)}function Re(e,t){if(v)return Ke(15,1,e,t)}function De(e,t,n){if(v)return Ke(16,1,e,t,n)}var ze=e=>{if(!B)try{if(e(),!F())try{v?It(M):fe(M)}catch(e){e instanceof ie||"unwind"==e||g(1,e)}}catch(e){e instanceof ie||"unwind"==e||g(1,e)}};function je(e){e>>>=0,"function"==typeof Atomics.Gb&&(Atomics.Gb(a(),e>>2,e).value.then(Ge),e+=128,Atomics.store(a(),e>>2,1))}function Ge(){var e=xt();e&&(je(e),ze((()=>Et())))}l.__emscripten_thread_mailbox_await=je,l.checkMailbox=Ge;var Be=e=>0==e%4&&(0!=e%100||0==e%400),We=[0,31,60,91,121,152,182,213,244,274,305,335],Ue=[0,31,59,90,120,151,181,212,243,273,304,334];function Ne(e,t,n,r,a,i,o,s){return v?Ke(17,1,e,t,n,r,a,i,o,s):-52}function Le(e,t,n,r,a,i,o){if(v)return Ke(18,1,e,t,n,r,a,i,o)}var He=e=>{var t=xe(e)+1,n=St(t);return n&&_e(e,n,t),n},Ve=[],Fe=(e,t)=>{var n;for(Ve.length=0,t>>=2;n=r()[e++>>>0];)t+=105!=n&t,Ve.push(105==n?a()[t>>>0]:o()[t++>>>1]),++t;return Ve},qe=e=>{var t=Mt();return e=e(),Rt(t),e};function Ke(e,t){var n=arguments.length-2,r=arguments;return qe((()=>{for(var a=Dt(8*n),i=a>>3,s=0;s<n;s++){var u=r[2+s];o()[i+s>>>0]=u}return Ct(e,n,a,t)}))}var Ye,Je=[],Xe={},Qe=()=>{if(!Ye){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"};for(e in Xe)void 0===Xe[e]?delete t[e]:t[e]=Xe[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Ye=n}return Ye};function Ze(e,n){if(v)return Ke(19,1,e,n);e>>>=0,n>>>=0;var r=0;return Qe().forEach((function(a,o){var s=n+r;for(o=i()[e+4*o>>2>>>0]=s,s=0;s<a.length;++s)t()[o++>>0>>>0]=a.charCodeAt(s);t()[o>>0>>>0]=0,r+=a.length+1})),0}function et(e,t){if(v)return Ke(20,1,e,t);e>>>=0,t>>>=0;var n=Qe();i()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2>>>0]=r,0}function tt(e){return v?Ke(21,1,e):52}function nt(e,t,n,r){return v?Ke(22,1,e,t,n,r):52}function rt(e,t,n,r,a){return v?Ke(23,1,e,t,n,r,a):70}var at=[null,[],[]];function it(e,t,n,a){if(v)return Ke(24,1,e,t,n,a);t>>>=0,n>>>=0,a>>>=0;for(var o=0,s=0;s<n;s++){var u=i()[t>>2>>>0],l=i()[t+4>>2>>>0];t+=8;for(var c=0;c<l;c++){var d=r()[u+c>>>0],p=at[e];0===d||10===d?((1===e?C:T)(ce(p,0)),p.length=0):p.push(d)}o+=l}return i()[a>>2>>>0]=o,0}var ot=[31,29,31,30,31,30,31,31,30,31,30,31],st=[31,28,31,30,31,30,31,31,30,31,30,31],ut=(e,n)=>{t().set(e,n>>>0)};function lt(e,t,n,r){function i(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function o(e,t){return i(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.Sa;for(e=new Date(new Date(e.Ta+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Be(e.getFullYear())?ot:st)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;var c=a()[r+40>>2>>>0];for(var d in r={Db:a()[r>>2>>>0],Cb:a()[r+4>>2>>>0],Wa:a()[r+8>>2>>>0],$a:a()[r+12>>2>>>0],Xa:a()[r+16>>2>>>0],Ta:a()[r+20>>2>>>0],Pa:a()[r+24>>2>>>0],Sa:a()[r+28>>2>>>0],Mb:a()[r+32>>2>>>0],Bb:a()[r+36>>2>>>0],Eb:c?de(c):""},n=de(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),c[d]);var p="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),f="January February March April May June July August September October November December".split(" ");for(d in c={"%a":e=>p[e.Pa].substring(0,3),"%A":e=>p[e.Pa],"%b":e=>f[e.Xa].substring(0,3),"%B":e=>f[e.Xa],"%C":e=>o((e.Ta+1900)/100|0,2),"%d":e=>o(e.$a,2),"%e":e=>i(e.$a,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>o(e.Wa,2),"%I":e=>(0==(e=e.Wa)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Xa-1;t+=(Be(e.Ta+1900)?ot:st)[n++]);return o(e.$a+t,3)},"%m":e=>o(e.Xa+1,2),"%M":e=>o(e.Cb,2),"%n":()=>"\\n","%p":e=>0<=e.Wa&&12>e.Wa?"AM":"PM","%S":e=>o(e.Db,2),"%t":()=>"\\t","%u":e=>e.Pa||7,"%U":e=>o(Math.floor((e.Sa+7-e.Pa)/7),2),"%V":e=>{var t=Math.floor((e.Sa+7-(e.Pa+6)%7)/7);if(2>=(e.Pa+371-e.Sa-2)%7&&t++,t)53==t&&(4==(n=(e.Pa+371-e.Sa)%7)||3==n&&Be(e.Ta)||(t=1));else{t=52;var n=(e.Pa+7-e.Sa-1)%7;(4==n||5==n&&Be(e.Ta%400-1))&&t++}return o(t,2)},"%w":e=>e.Pa,"%W":e=>o(Math.floor((e.Sa+7-(e.Pa+6)%7)/7),2),"%y":e=>(e.Ta+1900).toString().substring(2),"%Y":e=>e.Ta+1900,"%z":e=>{var t=0<=(e=e.Bb);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Eb,"%%":()=>"%"},n=n.replace(/%%/g,"\\0\\0"),c)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),c[d](r)));return d=function(e){var t=Array(xe(e)+1);return Se(e,t,0,t.length),t}(n=n.replace(/\\0\\0/g,"%")),d.length>t?0:(ut(d,e),d.length-1)}function ct(e){try{e()}catch(e){Z(e)}}var dt=0,pt=null,ft=0,ht=[],gt={},mt={},yt=0,bt=null,vt=[];he.Ya();var wt=[null,pe,me,be,we,$e,Oe,Ae,Ce,Te,Ie,Ee,ke,Pe,Me,Re,De,Ne,Le,Ze,et,tt,nt,rt,it],$t={r:function(e,t,n){return function(e){return function(e){if(!B){if(0===dt){var t=!1,n=!1;e(((e=0)=>{if(!B&&(ft=e,t=!0,n)){dt=2,ct((()=>Bt(pt))),"undefined"!=typeof Browser&&Browser.Za.lb&&Browser.Za.resume(),e=!1;try{var r=function(){var e=a()[pt+8>>2>>>0];return e=k[mt[e]],--V,e()}()}catch(t){r=t,e=!0}var i=!1;if(!pt){var o=bt;o&&(bt=null,(e?o.reject:o.resolve)(r),i=!0)}if(e&&!i)throw r}})),n=!0,t||(dt=1,pt=function(){var e=St(65548),t=e+12;i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=t+65536,t=ht[0];var n=gt[t];return void 0===n&&(n=yt++,gt[t]=n,mt[n]=t),t=n,a()[e+8>>2>>>0]=t,e}(),"undefined"!=typeof Browser&&Browser.Za.lb&&Browser.Za.pause(),ct((()=>jt(pt))))}else 2===dt?(dt=0,ct(Wt),_t(pt),pt=null,vt.forEach((e=>ze(e)))):Z(`invalid state: ${dt}`);return ft}}((t=>{e().then(t)}))}((async()=>{await l.qb(e,t,n)}))},b:function(e,t,n){throw new ye(e>>>=0).Ya(t>>>0,n>>>0),e},O:function(e){Ot(e>>>0,!y,1,!m,131072,!1),he.eb()},l:function(e){e>>>=0,v?postMessage({cmd:"cleanupThread",thread:e}):se(e)},J:ve,i:we,U:$e,F:Oe,H:Ae,V:Ce,S:Te,K:Ie,R:Ee,p:ke,G:Pe,D:Me,T:Re,E:De,q:()=>!0,B:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>Ge())):v?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=he.Ja[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:je,X:function(e){b&&he.Ja[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),a()[n>>2>>>0]=e.getUTCSeconds(),a()[n+4>>2>>>0]=e.getUTCMinutes(),a()[n+8>>2>>>0]=e.getUTCHours(),a()[n+12>>2>>>0]=e.getUTCDate(),a()[n+16>>2>>>0]=e.getUTCMonth(),a()[n+20>>2>>>0]=e.getUTCFullYear()-1900,a()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),a()[n>>2>>>0]=e.getSeconds(),a()[n+4>>2>>>0]=e.getMinutes(),a()[n+8>>2>>>0]=e.getHours(),a()[n+12>>2>>>0]=e.getDate(),a()[n+16>>2>>>0]=e.getMonth(),a()[n+20>>2>>>0]=e.getFullYear()-1900,a()[n+24>>2>>>0]=e.getDay(),t=(Be(e.getFullYear())?We:Ue)[e.getMonth()]+e.getDate()-1|0,a()[n+28>>2>>>0]=t,a()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t)),a()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),n=a()[e+32>>2>>>0],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(o,i);return 0>n?a()[e+32>>2>>>0]=Number(i!=o&&s==r):0<n!=(s==r)&&(i=Math.max(o,i),t.setTime(t.getTime()+6e4*((0<n?s:i)-r))),a()[e+24>>2>>>0]=t.getDay(),n=(Be(t.getFullYear())?We:Ue)[t.getMonth()]+t.getDate()-1|0,a()[e+28>>2>>>0]=n,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,kt((re=e,1<=+Math.abs(re)?0<re?+Math.floor(re/4294967296)>>>0:~~+Math.ceil((re-+(~~re>>>0))/4294967296)>>>0:0)),e>>>0},s:Ne,t:Le,z:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var o=(new Date).getFullYear(),s=new Date(o,0,1),u=new Date(o,6,1);o=s.getTimezoneOffset();var l=u.getTimezoneOffset(),c=Math.max(o,l);i()[e>>2>>>0]=60*c,a()[t>>2>>>0]=Number(o!=l),e=r(s),t=r(u),e=He(e),t=He(t),l<o?(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t):(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e)},d:()=>{Z("")},c:function(e,t,n){return e>>>=0,t=Fe(t>>>0,n>>>0),ae[e].apply(null,t)},k:function(e,t,n){return e>>>=0,t=Fe(t>>>0,n>>>0),ae[e].apply(null,t)},m:function(){},j:function(){return Date.now()},W:()=>{throw V+=1,"unwind"},C:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return b?n(3993).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,r){for(he.Ib=t>>>0,Je.length=n,t=r>>>0>>3,r=0;r<n;r++)Je[r]=o()[t+r>>>0];return(0>e?ae[-e-1]:wt[e]).apply(null,Je)},y:function(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296);var i=Math;a=Math.max(e,a);e:{i=i.min.call(i,4294901760,a+(65536-a%65536)%65536)-E.buffer.byteLength+65535>>>16;try{E.grow(i),W();var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},P:Ze,Q:et,I:fe,h:tt,o:nt,x:rt,n:it,a:E||l.wasmMemory,A:lt,e:function(e,t,n,r){return lt(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){ht.push(t);try{return r.apply(null,arguments)}finally{B||(ht.pop()===t||Z(),pt&&1===dt&&0===ht.length&&(dt=0,V+=1,ct(Gt),"undefined"!=typeof Fibers&&Fibers.Nb()))}}:r}(t);return n}(e=e.exports),k=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),he.fb.push(k.wa),L.unshift(k.Y),P=t,Q(),e}var t={a:$t};if(X(),l.instantiateWasm)try{return l.instantiateWasm(t,e)}catch(e){T("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var n=q;return A||"function"!=typeof WebAssembly.instantiateStreaming||ee(n)||n.startsWith("file://")||b||"function"!=typeof fetch?ne(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return T("wasm streaming compile failed: "+r),T("falling back to ArrayBuffer instantiation"),ne(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),l._OrtInit=(e,t)=>(l._OrtInit=k.Z)(e,t),l._OrtGetLastError=(e,t)=>(l._OrtGetLastError=k._)(e,t),l._OrtCreateSessionOptions=(e,t,n,r,a,i,o,s,u,c)=>(l._OrtCreateSessionOptions=k.$)(e,t,n,r,a,i,o,s,u,c),l._OrtAppendExecutionProvider=(e,t)=>(l._OrtAppendExecutionProvider=k.aa)(e,t),l._OrtAddSessionConfigEntry=(e,t,n)=>(l._OrtAddSessionConfigEntry=k.ba)(e,t,n),l._OrtReleaseSessionOptions=e=>(l._OrtReleaseSessionOptions=k.ca)(e),l._OrtCreateSession=(e,t,n)=>(l._OrtCreateSession=k.da)(e,t,n),l._OrtReleaseSession=e=>(l._OrtReleaseSession=k.ea)(e),l._OrtGetInputOutputCount=(e,t,n)=>(l._OrtGetInputOutputCount=k.fa)(e,t,n),l._OrtGetInputName=(e,t)=>(l._OrtGetInputName=k.ga)(e,t),l._OrtGetOutputName=(e,t)=>(l._OrtGetOutputName=k.ha)(e,t),l._OrtFree=e=>(l._OrtFree=k.ia)(e),l._OrtCreateTensor=(e,t,n,r,a)=>(l._OrtCreateTensor=k.ja)(e,t,n,r,a),l._OrtGetTensorData=(e,t,n,r,a)=>(l._OrtGetTensorData=k.ka)(e,t,n,r,a),l._OrtReleaseTensor=e=>(l._OrtReleaseTensor=k.la)(e),l._OrtCreateRunOptions=(e,t,n,r)=>(l._OrtCreateRunOptions=k.ma)(e,t,n,r),l._OrtAddRunConfigEntry=(e,t,n)=>(l._OrtAddRunConfigEntry=k.na)(e,t,n),l._OrtReleaseRunOptions=e=>(l._OrtReleaseRunOptions=k.oa)(e),l._OrtRun=(e,t,n,r,a,i,o,s)=>(l._OrtRun=k.pa)(e,t,n,r,a,i,o,s),l._OrtEndProfiling=e=>(l._OrtEndProfiling=k.qa)(e),l._JsepOutput=(e,t,n)=>(l._JsepOutput=k.ra)(e,t,n),l._JsepGetNodeName=e=>(l._JsepGetNodeName=k.sa)(e);var xt=l._pthread_self=()=>(xt=l._pthread_self=k.ta)(),St=l._malloc=e=>(St=l._malloc=k.ua)(e),_t=l._free=e=>(_t=l._free=k.va)(e);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=k.wa)();var Ot=l.__emscripten_thread_init=(e,t,n,r,a,i)=>(Ot=l.__emscripten_thread_init=k.ya)(e,t,n,r,a,i);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=k.za)();var At,Ct=(e,t,n,r)=>(Ct=k.Aa)(e,t,n,r),Tt=e=>(Tt=k.Ba)(e),It=l.__emscripten_thread_exit=e=>(It=l.__emscripten_thread_exit=k.Ca)(e),Et=l.__emscripten_check_mailbox=()=>(Et=l.__emscripten_check_mailbox=k.Da)(),kt=e=>(kt=k.Ea)(e),Pt=(e,t)=>(Pt=k.Fa)(e,t),Mt=()=>(Mt=k.Ga)(),Rt=e=>(Rt=k.Ha)(e),Dt=e=>(Dt=k.Ia)(e),zt=l.dynCall_ii=(e,t)=>(zt=l.dynCall_ii=k.Ka)(e,t),jt=e=>(jt=k.La)(e),Gt=()=>(Gt=k.Ma)(),Bt=e=>(Bt=k.Na)(e),Wt=()=>(Wt=k.Oa)();function Ut(){function e(){if(!At&&(At=!0,l.calledRun=!0,!B)&&(v||ge(L),s(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),!v)){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;){var e=l.postRun.shift();H.unshift(e)}ge(H)}}if(!(0<K))if(v)s(l),v||ge(L),startWorker(l);else{if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)N.unshift(l.preRun.shift());ge(N),0<K||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),e()}),1)):e())}}if(l.___start_em_js=893254,l.___stop_em_js=893415,l.keepRuntimeAlive=F,l.wasmMemory=E,l.stackAlloc=Dt,l.stackSave=Mt,l.stackRestore=Rt,l.UTF8ToString=de,l.stringToUTF8=_e,l.lengthBytesUTF8=xe,l.ExitStatus=ie,l.PThread=he,J=function e(){At||Ut(),At||(J=e)},l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);0<l.preInit.length;)l.preInit.pop()();return Ut(),e.ready});e.exports=r},9377:(e,t,n)=>{var _scriptDir,r=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,r,a=e;a.ready=new Promise(((e,n)=>{t=e,r=n})),a.jsepInit=(e,t,n,r,i,o,s,u)=>{a.Sa=e,a.Ea=t,a.Ga=n,a.Ca=r,a.Fa=i,a.ka=o,a.Ha=s,a.Ia=u,a.jsepOnRunStart=e=>{if(a.jsepRunPromise=new Promise((e=>{a.Ja=e})),a.wa)throw Error("Session already started");a.wa={sessionId:e,errors:[]}},a.jsepOnRunEnd=e=>{if(a.wa.sessionId!==e)throw Error("Session ID mismatch");const t=a.wa.errors;return a.wa=null,0===t.length?Promise.resolve():new Promise(((e,n)=>{Promise.all(t).then((t=>{0<(t=t.filter((e=>e))).length?n(Error(t.join("\\n"))):e()}),(e=>{n(e)}))}))}};var i,o,s,u=Object.assign({},a),l="./this.program",c=(e,t)=>{throw t},d="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h="";if(f){var g=n(1384),m=n(908);h=p?m.dirname(h)+"/":__dirname+"/",i=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFileSync(e,t?void 0:"utf8")),s=e=>((e=i(e,!0)).buffer||(e=new Uint8Array(e)),e),o=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),g.readFile(e,r?void 0:"utf8",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!a.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),c=(e,t)=>{throw process.exitCode=e,t},a.inspect=()=>"[Emscripten Module object]"}else(d||p)&&(p?h=self.location.href:"undefined"!=typeof document&&document.currentScript&&(h=document.currentScript.src),_scriptDir&&(h=_scriptDir),h=0!==h.indexOf("blob:")?h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,b=a.print||console.log.bind(console),v=a.printErr||console.error.bind(console);Object.assign(a,u),u=null,a.thisProgram&&(l=a.thisProgram),a.quit&&(c=a.quit),a.wasmBinary&&(y=a.wasmBinary);var w=a.noExitRuntime||!0;"object"!=typeof WebAssembly&&B("no native wasm support detected");var $,x,S,_,O,A,C,T,I=!1;function E(){var e=$.buffer;a.HEAP8=_=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=A=new Int32Array(e),a.HEAPU8=O=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=C=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=T=new Float64Array(e)}var k=[],P=[],M=[];function R(){var e=a.preRun.shift();k.unshift(e)}var D,z=0,j=null,G=null;function B(e){throw a.onAbort&&a.onAbort(e),v(e="Aborted("+e+")"),I=!0,S=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}function W(e){return e.startsWith("data:application/octet-stream;base64,")}if(!W(D="ort-wasm-simd.wasm")){var U=D;D=a.locateFile?a.locateFile(U,h):h+U}function N(e){if(e==D&&y)return new Uint8Array(y);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function L(e,t,n){return function(e){if(!y&&(d||p)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at \'"+e+"\'";return t.arrayBuffer()})).catch((()=>N(e)));if(o)return new Promise(((t,n)=>{o(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>N(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{v("failed to asynchronously prepare wasm: "+e),B(e)}))}var H,V={881648:e=>{a.Ja?.(e)},881689:e=>a.Ea(e),881722:e=>a.Ga(e),881754:(e,t,n)=>{a.Ca(e,t,n,!0)},881793:(e,t,n)=>{a.Ca(e,t,n)},881826:e=>{a.ka("Abs",e,void 0)},881877:e=>{a.ka("Neg",e,void 0)},881928:e=>{a.ka("Floor",e,void 0)},881981:e=>{a.ka("Ceil",e,void 0)},882033:e=>{a.ka("Reciprocal",e,void 0)},882091:e=>{a.ka("Sqrt",e,void 0)},882143:e=>{a.ka("Exp",e,void 0)},882194:e=>{a.ka("Erf",e,void 0)},882245:e=>{a.ka("Sigmoid",e,void 0)},882300:e=>{a.ka("Log",e,void 0)},882351:e=>{a.ka("Sin",e,void 0)},882402:e=>{a.ka("Cos",e,void 0)},882453:e=>{a.ka("Tan",e,void 0)},882504:e=>{a.ka("Asin",e,void 0)},882556:e=>{a.ka("Acos",e,void 0)},882608:e=>{a.ka("Atan",e,void 0)},882660:e=>{a.ka("Sinh",e,void 0)},882712:e=>{a.ka("Cosh",e,void 0)},882764:e=>{a.ka("Asinh",e,void 0)},882817:e=>{a.ka("Acosh",e,void 0)},882870:e=>{a.ka("Atanh",e,void 0)},882923:e=>{a.ka("Tanh",e,void 0)},882975:e=>{a.ka("Not",e,void 0)},883026:(e,t,n)=>{a.ka("ClipV10",e,{min:t,max:n})},883098:e=>{a.ka("Clip",e,void 0)},883150:(e,t)=>{a.ka("Elu",e,{alpha:t})},883208:e=>{a.ka("Relu",e,void 0)},883260:(e,t)=>{a.ka("LeakyRelu",e,{alpha:t})},883324:(e,t)=>{a.ka("ThresholdedRelu",e,{alpha:t})},883394:(e,t)=>{a.ka("Cast",e,{to:t})},883452:e=>{a.ka("Add",e,void 0)},883503:e=>{a.ka("Sub",e,void 0)},883554:e=>{a.ka("Mul",e,void 0)},883605:e=>{a.ka("Div",e,void 0)},883656:e=>{a.ka("Pow",e,void 0)},883707:e=>{a.ka("Equal",e,void 0)},883760:e=>{a.ka("Greater",e,void 0)},883815:e=>{a.ka("GreaterOrEqual",e,void 0)},883877:e=>{a.ka("Less",e,void 0)},883929:e=>{a.ka("LessOrEqual",e,void 0)},883988:(e,t,n,r,i)=>{a.ka("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884152:(e,t,n,r,i)=>{a.ka("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884315:(e,t,n,r,i)=>{a.ka("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884478:(e,t,n,r,i)=>{a.ka("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884642:(e,t,n,r,i)=>{a.ka("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884805:(e,t,n,r,i)=>{a.ka("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},884967:(e,t,n,r,i)=>{a.ka("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},885129:(e,t,n,r,i)=>{a.ka("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},885295:(e,t,n,r,i)=>{a.ka("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},885464:(e,t,n,r,i)=>{a.ka("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},885633:(e,t,n)=>{a.ka("Transpose",e,{perm:t?Array.from(A.subarray(n>>>0,n+t>>>0)):[]})},885746:(e,t,n,r,i,o,s,u,l,c)=>{a.ka("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[i],pads:[o,s],strides:[u],w_is_const:()=>!!_[c>>>0]})},885974:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g)=>{a.ka("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:i,kernel_shape:[o,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!_[g>>>0]})},886233:(e,t,n,r,i,o,s,u,l,c)=>{a.ka("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[i],pads:[o,s],strides:[u],w_is_const:()=>!!_[c>>>0]})},886461:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g)=>{a.ka("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:i,kernel_shape:[o,s],pads:[u,l,c,d],strides:[p,f],w_is_const:()=>!!_[g>>>0]})},886720:(e,t,n,r,i,o,s,u,l,c,d,p,f,h)=>{a.ka("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[i],pads:[o,s],strides:[u],wIsConst:()=>!!_[c>>>0],outputPadding:d?Array.from(A.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(A.subarray(h>>>0,h+f>>>0)):[]})},887100:(e,t,n,r,i,o,s,u,l,c,d,p,f)=>{a.ka("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(A.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(A.subarray(i>>>0,i+2>>>0)),pads:Array.from(A.subarray(o>>>0,o+4>>>0)),strides:Array.from(A.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!_[l>>>0],outputPadding:0<c?Array.from(A.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(A.subarray(f>>>0,f+p>>>0)):[]})},887623:(e,t,n,r,i,o,s,u,l,c,d,p,f,h)=>{a.ka("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[i],pads:[o,s],strides:[u],wIsConst:()=>!!_[c>>>0],outputPadding:d?Array.from(A.subarray(p>>>0,p+d>>>0)):[],outputShape:f?Array.from(A.subarray(h>>>0,h+f>>>0)):[]})},888003:(e,t,n,r,i,o,s,u,l,c,d,p,f)=>{a.ka("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(A.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(A.subarray(i>>>0,i+2>>>0)),pads:Array.from(A.subarray(o>>>0,o+4>>>0)),strides:Array.from(A.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!_[l>>>0],outputPadding:0<c?Array.from(A.subarray(d>>>0,d+c>>>0)):[],outputShape:0<p?Array.from(A.subarray(f>>>0,f+p>>>0)):[]})},888526:(e,t)=>{a.ka("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},888617:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g,m)=>{a.ka("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},888901:(e,t)=>{a.ka("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},888992:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g,m)=>{a.ka("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},889276:(e,t)=>{a.ka("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},889363:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g,m)=>{a.ka("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},889643:(e,t)=>{a.ka("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},889730:(e,t,n,r,i,o,s,u,l,c,d,p,f,h,g,m)=>{a.ka("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[o,s],kernel_shape:[u,l],pads:[c,d,p,f],strides:[h,g]})},890010:(e,t,n,r,i)=>{a.ka("Gemm",e,{alpha:t,beta:n,transA:r,transB:i})},890114:e=>{a.ka("MatMul",e,void 0)},890168:(e,t,n,r)=>{a.ka("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},890276:(e,t,n,r)=>{a.ka("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},890384:(e,t)=>{a.ka("Softmax",e,{axis:t})},890447:(e,t)=>{a.ka("Concat",e,{axis:t})},890507:(e,t,n,r,i)=>{a.ka("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[]})},890652:e=>{a.ka("Expand",e,void 0)},890706:(e,t)=>{a.ka("Gather",e,{axis:Number(t)})},890777:(e,t)=>{a.ka("GatherElements",e,{axis:Number(t)})},890856:(e,t,n,r,i,o,s,u,l,c,d)=>{a.ka("Resize",e,{antialias:t,axes:n?Array.from(A.subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:Q(i),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:Q(l),mode:Q(c),nearestMode:Q(d)})},891207:(e,t,n,r,i,o,s)=>{a.ka("Slice",e,{starts:t?Array.from(A.subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(A.subarray(i>>>0,i+r>>>0)):[],axes:o?Array.from(A.subarray(s>>>0,s+o>>>0)):[]})},891438:e=>{a.ka("Tile",e,void 0)},891490:(e,t,n)=>{a.ka("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},891597:(e,t,n)=>{a.ka("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},891711:(e,t,n)=>{a.ka("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},891825:e=>{a.ka("Gelu",e,void 0)},891877:(e,t)=>{a.ka("SkipLayerNormalization",e,{epsilon:t})},891958:e=>{a.Ha(e)},891992:(e,t)=>a.Ia(e,t,a.wa)};function F(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var q=e=>{for(;0<e.length;)e.shift()(a)};function K(e){this.za=e-24,this.Ra=function(e){C[this.za+4>>2>>>0]=e},this.Qa=function(e){C[this.za+8>>2>>>0]=e},this.Ka=function(e,t){this.Pa(),this.Ra(e),this.Qa(t)},this.Pa=function(){C[this.za+16>>2>>>0]=0}}var Y,J="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,X=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&J)return J.decode(e.subarray(t,n));for(r="";t<n;){var a=e[t++];if(128&a){var i=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r},Q=(e,t)=>(e>>>=0)?X(O,e,t):"",Z=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ee=(e,t,n,r)=>{if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<e.length;++i){var o=e.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),127>=o){if(n>=r)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++>>>0]=224|o>>12}else{if(n+3>=r)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-a},te=e=>0==e%4&&(0!=e%100||0==e%400),ne=[0,31,60,91,121,152,182,213,244,274,305,335],re=[0,31,59,90,120,151,181,212,243,273,304,334],ae=e=>{var t=Z(e)+1,n=Oe(t);return n&&ee(e,O,n,t),n},ie=[],oe=(e,t)=>{var n;for(ie.length=0,t>>=2;n=O[e++>>>0];)t+=105!=n&t,ie.push(105==n?A[t>>>0]:T[t++>>>1]),++t;return ie},se={},ue=()=>{if(!Y){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"};for(e in se)void 0===se[e]?delete t[e]:t[e]=se[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Y=n}return Y},le=[null,[],[]],ce=[31,29,31,30,31,30,31,31,30,31,30,31],de=[31,28,31,30,31,30,31,31,30,31,30,31];function pe(e,t,n,r){function a(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function i(e,t){return a(e,t,"0")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.ua;for(e=new Date(new Date(e.va+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(te(e.getFullYear())?ce:de)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=o(t,e)?0>=o(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var l=A[40+(r>>>=0)>>2>>>0];for(var c in r={Na:A[r>>2>>>0],Ma:A[r+4>>2>>>0],xa:A[r+8>>2>>>0],Ba:A[r+12>>2>>>0],ya:A[r+16>>2>>>0],va:A[r+20>>2>>>0],pa:A[r+24>>2>>>0],ua:A[r+28>>2>>>0],Ta:A[r+32>>2>>>0],La:A[r+36>>2>>>0],Oa:l?Q(l):""},n=Q(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),l[c]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(c in l={"%a":e=>d[e.pa].substring(0,3),"%A":e=>d[e.pa],"%b":e=>p[e.ya].substring(0,3),"%B":e=>p[e.ya],"%C":e=>i((e.va+1900)/100|0,2),"%d":e=>i(e.Ba,2),"%e":e=>a(e.Ba,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>i(e.xa,2),"%I":e=>(0==(e=e.xa)?e=12:12<e&&(e-=12),i(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.ya-1;t+=(te(e.va+1900)?ce:de)[n++]);return i(e.Ba+t,3)},"%m":e=>i(e.ya+1,2),"%M":e=>i(e.Ma,2),"%n":()=>"\\n","%p":e=>0<=e.xa&&12>e.xa?"AM":"PM","%S":e=>i(e.Na,2),"%t":()=>"\\t","%u":e=>e.pa||7,"%U":e=>i(Math.floor((e.ua+7-e.pa)/7),2),"%V":e=>{var t=Math.floor((e.ua+7-(e.pa+6)%7)/7);if(2>=(e.pa+371-e.ua-2)%7&&t++,t)53==t&&(4==(n=(e.pa+371-e.ua)%7)||3==n&&te(e.va)||(t=1));else{t=52;var n=(e.pa+7-e.ua-1)%7;(4==n||5==n&&te(e.va%400-1))&&t++}return i(t,2)},"%w":e=>e.pa,"%W":e=>i(Math.floor((e.ua+7-(e.pa+6)%7)/7),2),"%y":e=>(e.va+1900).toString().substring(2),"%Y":e=>e.va+1900,"%z":e=>{var t=0<=(e=e.La);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Oa,"%%":()=>"%"},n=n.replace(/%%/g,"\\0\\0"),l)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),l[c](r)));return c=function(e){var t=Array(Z(e)+1);return ee(e,t,0,t.length),t}(n=n.replace(/\\0\\0/g,"%")),c.length>t?0:(_.set(c,e>>>0),c.length-1)}function fe(e){try{e()}catch(e){B(e)}}var he=0,ge=null,me=0,ye=[],be={},ve={},we=0,$e=null,xe=[];var Se={n:function(e,t,n){return function(e){return function(e){if(!I){if(0===he){var t=!1,n=!1;e(((e=0)=>{if(!I&&(me=e,t=!0,n)){he=2,fe((()=>Me(ge))),"undefined"!=typeof Browser&&Browser.Aa.Da&&Browser.Aa.resume(),e=!1;try{var r=(0,x[ve[A[ge+8>>2>>>0]]])()}catch(t){r=t,e=!0}var a=!1;if(!ge){var i=$e;i&&($e=null,(e?i.reject:i.resolve)(r),a=!0)}if(e&&!a)throw r}})),n=!0,t||(he=1,ge=function(){var e=Oe(65548),t=e+12;C[e>>2>>>0]=t,C[e+4>>2>>>0]=t+65536,t=ye[0];var n=be[t];return void 0===n&&(n=we++,be[t]=n,ve[n]=t),A[e+8>>2>>>0]=n,e}(),"undefined"!=typeof Browser&&Browser.Aa.Da&&Browser.Aa.pause(),fe((()=>ke(ge))))}else 2===he?(he=0,fe(Re),Ae(ge),ge=null,xe.forEach((e=>{if(!I)try{if(e(),!w)try{S=S=e=S,w||(a.onExit&&a.onExit(e),I=!0),c(e,new F(e))}catch(e){e instanceof F||"unwind"==e||c(1,e)}}catch(e){e instanceof F||"unwind"==e||c(1,e)}}))):B(`invalid state: ${he}`);return me}}((t=>{e().then(t)}))}((async()=>{await a.Fa(e,t,n)}))},a:function(e,t,n){throw new K(e>>>=0).Ka(t>>>0,n>>>0),e},g:function(){return 0},J:function(){},A:function(){},C:function(){},L:function(){return 0},H:function(){},D:function(){},G:function(){},l:function(){},B:function(){},y:function(){},I:function(){},z:function(){},m:()=>!0,q:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),A[n>>2>>>0]=e.getUTCSeconds(),A[n+4>>2>>>0]=e.getUTCMinutes(),A[n+8>>2>>>0]=e.getUTCHours(),A[n+12>>2>>>0]=e.getUTCDate(),A[n+16>>2>>>0]=e.getUTCMonth(),A[n+20>>2>>>0]=e.getUTCFullYear()-1900,A[n+24>>2>>>0]=e.getUTCDay(),A[n+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),A[n>>2>>>0]=e.getSeconds(),A[n+4>>2>>>0]=e.getMinutes(),A[n+8>>2>>>0]=e.getHours(),A[n+12>>2>>>0]=e.getDate(),A[n+16>>2>>>0]=e.getMonth(),A[n+20>>2>>>0]=e.getFullYear()-1900,A[n+24>>2>>>0]=e.getDay(),A[n+28>>2>>>0]=(te(e.getFullYear())?ne:re)[e.getMonth()]+e.getDate()-1|0,A[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();A[n+32>>2>>>0]=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t))},s:function(e){e>>>=0;var t=new Date(A[e+20>>2>>>0]+1900,A[e+16>>2>>>0],A[e+12>>2>>>0],A[e+8>>2>>>0],A[e+4>>2>>>0],A[e>>2>>>0],0),n=A[e+32>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(i,a);return 0>n?A[e+32>>2>>>0]=Number(a!=i&&o==r):0<n!=(o==r)&&(a=Math.max(i,a),t.setTime(t.getTime()+6e4*((0<n?o:a)-r))),A[e+24>>2>>>0]=t.getDay(),A[e+28>>2>>>0]=(te(t.getFullYear())?ne:re)[t.getMonth()]+t.getDate()-1|0,A[e>>2>>>0]=t.getSeconds(),A[e+4>>2>>>0]=t.getMinutes(),A[e+8>>2>>>0]=t.getHours(),A[e+12>>2>>>0]=t.getDate(),A[e+16>>2>>>0]=t.getMonth(),A[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Ce((H=e,1<=+Math.abs(H)?0<H?+Math.floor(H/4294967296)>>>0:~~+Math.ceil((H-+(~~H>>>0))/4294967296)>>>0:0)),e>>>0},o:function(){return-52},p:function(){},w:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:"GMT"}n>>>=0;var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var s=o.getTimezoneOffset();C[e>>>0>>2>>>0]=60*Math.max(a,s),A[t>>>0>>2>>>0]=Number(a!=s),e=r(i),t=r(o),e=ae(e),t=ae(t),s<a?(C[n>>2>>>0]=e,C[n+4>>2>>>0]=t):(C[n>>2>>>0]=t,C[n+4>>2>>>0]=e)},e:()=>{B("")},b:function(e,t,n){return e>>>=0,t=oe(t>>>0,n>>>0),V[e].apply(null,t)},i:function(e,t,n){return e>>>=0,t=oe(t>>>0,n>>>0),V[e].apply(null,t)},h:function(){return Date.now()},x:function(){return 4294901760},c:()=>performance.now(),K:function(e,t,n){return t>>>=0,O.copyWithin(e>>>0>>>0,t>>>0,t+(n>>>0)>>>0)},u:function(e){e>>>=0;var t=O.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math;r=Math.max(e,r);e:{a=a.min.call(a,4294901760,r+(65536-r%65536)%65536)-$.buffer.byteLength+65535>>>16;try{$.grow(a),E();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},E:function(e,t){e>>>=0,t>>>=0;var n=0;return ue().forEach((function(r,a){var i=t+n;for(a=C[e+4*a>>2>>>0]=i,i=0;i<r.length;++i)_[a++>>0>>>0]=r.charCodeAt(i);_[a>>0>>>0]=0,n+=r.length+1})),0},F:function(e,t){e>>>=0,t>>>=0;var n=ue();C[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),C[t>>2>>>0]=r,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var a=0,i=0;i<n;i++){var o=C[t>>2>>>0],s=C[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=O[o+u>>>0],c=le[e];0===l||10===l?((1===e?b:v)(X(c,0)),c.length=0):c.push(l)}a+=s}return C[r>>2>>>0]=a,0},v:pe,d:function(e,t,n,r){return pe(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e){if(e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){ye.push(t);try{return r.apply(null,arguments)}finally{I||(ye.pop()===t||B(),ge&&1===he&&0===ye.length&&(he=0,fe(Pe),"undefined"!=typeof Fibers&&Fibers.Ua()))}}:r}(t);return n}(e=e.exports),x=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),$=x.M,E(),P.unshift(x.N),z--,a.monitorRunDependencies&&a.monitorRunDependencies(z),0==z&&(null!==j&&(clearInterval(j),j=null),G)){var t=G;G=null,t()}return e}var t={a:Se};if(z++,a.monitorRunDependencies&&a.monitorRunDependencies(z),a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(e){v("Module.instantiateWasm callback failed with error: "+e),r(e)}(function(e,t){var n=D;return y||"function"!=typeof WebAssembly.instantiateStreaming||W(n)||n.startsWith("file://")||f||"function"!=typeof fetch?L(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return v("wasm streaming compile failed: "+r),v("falling back to ArrayBuffer instantiation"),L(n,e,t)}))))})(t,(function(t){e(t.instance)})).catch(r)}(),a._OrtInit=(e,t)=>(a._OrtInit=x.O)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=x.P)(e,t),a._OrtCreateSessionOptions=(e,t,n,r,i,o,s,u,l,c)=>(a._OrtCreateSessionOptions=x.Q)(e,t,n,r,i,o,s,u,l,c),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=x.R)(e,t),a._OrtAddSessionConfigEntry=(e,t,n)=>(a._OrtAddSessionConfigEntry=x.S)(e,t,n),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=x.T)(e),a._OrtCreateSession=(e,t,n)=>(a._OrtCreateSession=x.U)(e,t,n),a._OrtReleaseSession=e=>(a._OrtReleaseSession=x.V)(e),a._OrtGetInputOutputCount=(e,t,n)=>(a._OrtGetInputOutputCount=x.W)(e,t,n),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=x.X)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=x.Y)(e,t),a._OrtFree=e=>(a._OrtFree=x.Z)(e),a._OrtCreateTensor=(e,t,n,r,i)=>(a._OrtCreateTensor=x._)(e,t,n,r,i),a._OrtGetTensorData=(e,t,n,r,i)=>(a._OrtGetTensorData=x.$)(e,t,n,r,i),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=x.aa)(e),a._OrtCreateRunOptions=(e,t,n,r)=>(a._OrtCreateRunOptions=x.ba)(e,t,n,r),a._OrtAddRunConfigEntry=(e,t,n)=>(a._OrtAddRunConfigEntry=x.ca)(e,t,n),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=x.da)(e),a._OrtRun=(e,t,n,r,i,o,s,u)=>(a._OrtRun=x.ea)(e,t,n,r,i,o,s,u),a._OrtEndProfiling=e=>(a._OrtEndProfiling=x.fa)(e),a._JsepOutput=(e,t,n)=>(a._JsepOutput=x.ga)(e,t,n),a._JsepGetNodeName=e=>(a._JsepGetNodeName=x.ha)(e);var _e,Oe=a._malloc=e=>(Oe=a._malloc=x.ia)(e),Ae=a._free=e=>(Ae=a._free=x.ja)(e),Ce=e=>(Ce=x.la)(e),Te=()=>(Te=x.ma)(),Ie=e=>(Ie=x.na)(e),Ee=e=>(Ee=x.oa)(e),ke=e=>(ke=x.qa)(e),Pe=()=>(Pe=x.ra)(),Me=e=>(Me=x.sa)(e),Re=()=>(Re=x.ta)();function De(){function e(){if(!_e&&(_e=!0,a.calledRun=!0,!I)){if(q(P),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;){var e=a.postRun.shift();M.unshift(e)}q(M)}}if(!(0<z)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)R();q(k),0<z||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),e()}),1)):e())}}if(a.___start_em_js=892058,a.___stop_em_js=892219,a.stackAlloc=Ee,a.stackSave=Te,a.stackRestore=Ie,a.UTF8ToString=Q,a.stringToUTF8=(e,t,n)=>ee(e,O,t,n),a.lengthBytesUTF8=Z,G=function e(){_e||De(),_e||(G=e)},a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return De(),e.ready});e.exports=r},4154:e=>{"use strict";e.exports=\'"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\n\'},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},6449:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}(()=>{"use strict";const e=n(1259),t=n(263);self.onmessage=n=>{switch(n.data.type){case"init-wasm":try{(0,t.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:"init-wasm"})),(e=>postMessage({type:"init-wasm",err:e})))}catch(e){postMessage({type:"init-wasm",err:e})}break;case"init-ort":try{(0,e.initRuntime)(n.data.in).then((()=>postMessage({type:"init-ort"})),(e=>postMessage({type:"init-ort",err:e}))),postMessage({type:"init-ort"})}catch(e){postMessage({type:"init-ort",err:e})}break;case"create_allocate":try{const{model:t}=n.data.in,r=(0,e.createSessionAllocate)(t);postMessage({type:"create_allocate",out:r})}catch(e){postMessage({type:"create_allocate",err:e})}break;case"create_finalize":try{const{modeldata:t,options:r}=n.data.in,a=(0,e.createSessionFinalize)(t,r);postMessage({type:"create_finalize",out:a})}catch(e){postMessage({type:"create_finalize",err:e})}break;case"create":try{const{model:t,options:r}=n.data.in,a=(0,e.createSession)(t,r);postMessage({type:"create",out:a})}catch(e){postMessage({type:"create",err:e})}break;case"release":try{const t=n.data.in;(0,e.releaseSession)(t),postMessage({type:"release"})}catch(e){postMessage({type:"release",err:e})}break;case"run":try{const{sessionId:t,inputIndices:r,inputs:a,outputIndices:i,options:o}=n.data.in;(0,e.run)(t,r,a,i,o).then((t=>{postMessage({type:"run",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:"run",err:e})}))}catch(e){postMessage({type:"run",err:e})}break;case"end-profiling":try{const t=n.data.in;(0,e.endProfiling)(t),postMessage({type:"end-profiling"})}catch(e){postMessage({type:"end-profiling",err:e})}}}})()})();\n',"Worker",void 0,void 0)}},6614:e=>{e.exports=function(e,t,n,r){var o=self||window;try{try{var a;try{a=new o.Blob([e])}catch(t){(a=new(o.BlobBuilder||o.WebKitBlobBuilder||o.MozBlobBuilder||o.MSBlobBuilder)).append(e),a=a.getBlob()}var i=o.URL||o.webkitURL,s=i.createObjectURL(a),l=new o[t](s,n);return i.revokeObjectURL(s),l}catch(r){return new o[t]("data:application/javascript,".concat(encodeURIComponent(e)),n)}}catch(e){if(!r)throw Error("Inline worker is not supported");return new o[t](r,n)}}},2446:(e,t,n)=>{var r,o,a,i=n(2100),s=i.Reader,l=i.Writer,u=i.util,c=i.roots.default||(i.roots.default={});c.onnx=((a={}).Version=(r={},(o=Object.create(r))[r[0]="_START_VERSION"]=0,o[r[1]="IR_VERSION_2017_10_10"]=1,o[r[2]="IR_VERSION_2017_10_30"]=2,o[r[3]="IR_VERSION_2017_11_3"]=3,o[r[4]="IR_VERSION_2019_1_22"]=4,o[r[5]="IR_VERSION_2019_3_18"]=5,o[r[6]="IR_VERSION_2019_9_19"]=6,o[r[7]="IR_VERSION_2020_5_8"]=7,o[r[8]="IR_VERSION_2021_7_30"]=8,o[r[9]="IR_VERSION"]=9,o),a.AttributeProto=function(){function e(e){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.s=u.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=u.emptyArray,e.prototype.ints=u.emptyArray,e.prototype.strings=u.emptyArray,e.prototype.tensors=u.emptyArray,e.prototype.graphs=u.emptyArray,e.prototype.sparseTensors=u.emptyArray,e.prototype.typeProtos=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.f&&Object.hasOwnProperty.call(e,"f")&&t.uint32(21).float(e.f),null!=e.i&&Object.hasOwnProperty.call(e,"i")&&t.uint32(24).int64(e.i),null!=e.s&&Object.hasOwnProperty.call(e,"s")&&t.uint32(34).bytes(e.s),null!=e.t&&Object.hasOwnProperty.call(e,"t")&&c.onnx.TensorProto.encode(e.t,t.uint32(42).fork()).ldelim(),null!=e.g&&Object.hasOwnProperty.call(e,"g")&&c.onnx.GraphProto.encode(e.g,t.uint32(50).fork()).ldelim(),null!=e.floats&&e.floats.length){t.uint32(58).fork();for(var n=0;n<e.floats.length;++n)t.float(e.floats[n]);t.ldelim()}if(null!=e.ints&&e.ints.length){for(t.uint32(66).fork(),n=0;n<e.ints.length;++n)t.int64(e.ints[n]);t.ldelim()}if(null!=e.strings&&e.strings.length)for(n=0;n<e.strings.length;++n)t.uint32(74).bytes(e.strings[n]);if(null!=e.tensors&&e.tensors.length)for(n=0;n<e.tensors.length;++n)c.onnx.TensorProto.encode(e.tensors[n],t.uint32(82).fork()).ldelim();if(null!=e.graphs&&e.graphs.length)for(n=0;n<e.graphs.length;++n)c.onnx.GraphProto.encode(e.graphs[n],t.uint32(90).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(106).string(e.docString),null!=e.tp&&Object.hasOwnProperty.call(e,"tp")&&c.onnx.TypeProto.encode(e.tp,t.uint32(114).fork()).ldelim(),null!=e.typeProtos&&e.typeProtos.length)for(n=0;n<e.typeProtos.length;++n)c.onnx.TypeProto.encode(e.typeProtos[n],t.uint32(122).fork()).ldelim();if(null!=e.type&&Object.hasOwnProperty.call(e,"type")&&t.uint32(160).int32(e.type),null!=e.refAttrName&&Object.hasOwnProperty.call(e,"refAttrName")&&t.uint32(170).string(e.refAttrName),null!=e.sparseTensor&&Object.hasOwnProperty.call(e,"sparseTensor")&&c.onnx.SparseTensorProto.encode(e.sparseTensor,t.uint32(178).fork()).ldelim(),null!=e.sparseTensors&&e.sparseTensors.length)for(n=0;n<e.sparseTensors.length;++n)c.onnx.SparseTensorProto.encode(e.sparseTensors[n],t.uint32(186).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.AttributeProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.name=e.string();break;case 21:r.refAttrName=e.string();break;case 13:r.docString=e.string();break;case 20:r.type=e.int32();break;case 2:r.f=e.float();break;case 3:r.i=e.int64();break;case 4:r.s=e.bytes();break;case 5:r.t=c.onnx.TensorProto.decode(e,e.uint32());break;case 6:r.g=c.onnx.GraphProto.decode(e,e.uint32());break;case 22:r.sparseTensor=c.onnx.SparseTensorProto.decode(e,e.uint32());break;case 14:r.tp=c.onnx.TypeProto.decode(e,e.uint32());break;case 7:if(r.floats&&r.floats.length||(r.floats=[]),2==(7&o))for(var a=e.uint32()+e.pos;e.pos<a;)r.floats.push(e.float());else r.floats.push(e.float());break;case 8:if(r.ints&&r.ints.length||(r.ints=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.ints.push(e.int64());else r.ints.push(e.int64());break;case 9:r.strings&&r.strings.length||(r.strings=[]),r.strings.push(e.bytes());break;case 10:r.tensors&&r.tensors.length||(r.tensors=[]),r.tensors.push(c.onnx.TensorProto.decode(e,e.uint32()));break;case 11:r.graphs&&r.graphs.length||(r.graphs=[]),r.graphs.push(c.onnx.GraphProto.decode(e,e.uint32()));break;case 23:r.sparseTensors&&r.sparseTensors.length||(r.sparseTensors=[]),r.sparseTensors.push(c.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 15:r.typeProtos&&r.typeProtos.length||(r.typeProtos=[]),r.typeProtos.push(c.onnx.TypeProto.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&!u.isString(e.refAttrName))return"refAttrName: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString))return"docString: string expected";if(null!=e.type&&e.hasOwnProperty("type"))switch(e.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:}if(null!=e.f&&e.hasOwnProperty("f")&&"number"!=typeof e.f)return"f: number expected";if(null!=e.i&&e.hasOwnProperty("i")&&!(u.isInteger(e.i)||e.i&&u.isInteger(e.i.low)&&u.isInteger(e.i.high)))return"i: integer|Long expected";if(null!=e.s&&e.hasOwnProperty("s")&&!(e.s&&"number"==typeof e.s.length||u.isString(e.s)))return"s: buffer expected";if(null!=e.t&&e.hasOwnProperty("t")&&(n=c.onnx.TensorProto.verify(e.t)))return"t."+n;if(null!=e.g&&e.hasOwnProperty("g")&&(n=c.onnx.GraphProto.verify(e.g)))return"g."+n;if(null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n=c.onnx.SparseTensorProto.verify(e.sparseTensor)))return"sparseTensor."+n;if(null!=e.tp&&e.hasOwnProperty("tp")&&(n=c.onnx.TypeProto.verify(e.tp)))return"tp."+n;if(null!=e.floats&&e.hasOwnProperty("floats")){if(!Array.isArray(e.floats))return"floats: array expected";for(var t=0;t<e.floats.length;++t)if("number"!=typeof e.floats[t])return"floats: number[] expected"}if(null!=e.ints&&e.hasOwnProperty("ints")){if(!Array.isArray(e.ints))return"ints: array expected";for(t=0;t<e.ints.length;++t)if(!(u.isInteger(e.ints[t])||e.ints[t]&&u.isInteger(e.ints[t].low)&&u.isInteger(e.ints[t].high)))return"ints: integer|Long[] expected"}if(null!=e.strings&&e.hasOwnProperty("strings")){if(!Array.isArray(e.strings))return"strings: array expected";for(t=0;t<e.strings.length;++t)if(!(e.strings[t]&&"number"==typeof e.strings[t].length||u.isString(e.strings[t])))return"strings: buffer[] expected"}if(null!=e.tensors&&e.hasOwnProperty("tensors")){if(!Array.isArray(e.tensors))return"tensors: array expected";for(t=0;t<e.tensors.length;++t)if(n=c.onnx.TensorProto.verify(e.tensors[t]))return"tensors."+n}if(null!=e.graphs&&e.hasOwnProperty("graphs")){if(!Array.isArray(e.graphs))return"graphs: array expected";for(t=0;t<e.graphs.length;++t)if(n=c.onnx.GraphProto.verify(e.graphs[t]))return"graphs."+n}if(null!=e.sparseTensors&&e.hasOwnProperty("sparseTensors")){if(!Array.isArray(e.sparseTensors))return"sparseTensors: array expected";for(t=0;t<e.sparseTensors.length;++t)if(n=c.onnx.SparseTensorProto.verify(e.sparseTensors[t]))return"sparseTensors."+n}if(null!=e.typeProtos&&e.hasOwnProperty("typeProtos")){if(!Array.isArray(e.typeProtos))return"typeProtos: array expected";for(t=0;t<e.typeProtos.length;++t){var n;if(n=c.onnx.TypeProto.verify(e.typeProtos[t]))return"typeProtos."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.AttributeProto)return e;var t=new c.onnx.AttributeProto;switch(null!=e.name&&(t.name=String(e.name)),null!=e.refAttrName&&(t.refAttrName=String(e.refAttrName)),null!=e.docString&&(t.docString=String(e.docString)),e.type){default:if("number"==typeof e.type){t.type=e.type;break}break;case"UNDEFINED":case 0:t.type=0;break;case"FLOAT":case 1:t.type=1;break;case"INT":case 2:t.type=2;break;case"STRING":case 3:t.type=3;break;case"TENSOR":case 4:t.type=4;break;case"GRAPH":case 5:t.type=5;break;case"SPARSE_TENSOR":case 11:t.type=11;break;case"TYPE_PROTO":case 13:t.type=13;break;case"FLOATS":case 6:t.type=6;break;case"INTS":case 7:t.type=7;break;case"STRINGS":case 8:t.type=8;break;case"TENSORS":case 9:t.type=9;break;case"GRAPHS":case 10:t.type=10;break;case"SPARSE_TENSORS":case 12:t.type=12;break;case"TYPE_PROTOS":case 14:t.type=14}if(null!=e.f&&(t.f=Number(e.f)),null!=e.i&&(u.Long?(t.i=u.Long.fromValue(e.i)).unsigned=!1:"string"==typeof e.i?t.i=parseInt(e.i,10):"number"==typeof e.i?t.i=e.i:"object"==typeof e.i&&(t.i=new u.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber())),null!=e.s&&("string"==typeof e.s?u.base64.decode(e.s,t.s=u.newBuffer(u.base64.length(e.s)),0):e.s.length>=0&&(t.s=e.s)),null!=e.t){if("object"!=typeof e.t)throw TypeError(".onnx.AttributeProto.t: object expected");t.t=c.onnx.TensorProto.fromObject(e.t)}if(null!=e.g){if("object"!=typeof e.g)throw TypeError(".onnx.AttributeProto.g: object expected");t.g=c.onnx.GraphProto.fromObject(e.g)}if(null!=e.sparseTensor){if("object"!=typeof e.sparseTensor)throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");t.sparseTensor=c.onnx.SparseTensorProto.fromObject(e.sparseTensor)}if(null!=e.tp){if("object"!=typeof e.tp)throw TypeError(".onnx.AttributeProto.tp: object expected");t.tp=c.onnx.TypeProto.fromObject(e.tp)}if(e.floats){if(!Array.isArray(e.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");t.floats=[];for(var n=0;n<e.floats.length;++n)t.floats[n]=Number(e.floats[n])}if(e.ints){if(!Array.isArray(e.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for(t.ints=[],n=0;n<e.ints.length;++n)u.Long?(t.ints[n]=u.Long.fromValue(e.ints[n])).unsigned=!1:"string"==typeof e.ints[n]?t.ints[n]=parseInt(e.ints[n],10):"number"==typeof e.ints[n]?t.ints[n]=e.ints[n]:"object"==typeof e.ints[n]&&(t.ints[n]=new u.LongBits(e.ints[n].low>>>0,e.ints[n].high>>>0).toNumber())}if(e.strings){if(!Array.isArray(e.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for(t.strings=[],n=0;n<e.strings.length;++n)"string"==typeof e.strings[n]?u.base64.decode(e.strings[n],t.strings[n]=u.newBuffer(u.base64.length(e.strings[n])),0):e.strings[n].length>=0&&(t.strings[n]=e.strings[n])}if(e.tensors){if(!Array.isArray(e.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for(t.tensors=[],n=0;n<e.tensors.length;++n){if("object"!=typeof e.tensors[n])throw TypeError(".onnx.AttributeProto.tensors: object expected");t.tensors[n]=c.onnx.TensorProto.fromObject(e.tensors[n])}}if(e.graphs){if(!Array.isArray(e.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for(t.graphs=[],n=0;n<e.graphs.length;++n){if("object"!=typeof e.graphs[n])throw TypeError(".onnx.AttributeProto.graphs: object expected");t.graphs[n]=c.onnx.GraphProto.fromObject(e.graphs[n])}}if(e.sparseTensors){if(!Array.isArray(e.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");for(t.sparseTensors=[],n=0;n<e.sparseTensors.length;++n){if("object"!=typeof e.sparseTensors[n])throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");t.sparseTensors[n]=c.onnx.SparseTensorProto.fromObject(e.sparseTensors[n])}}if(e.typeProtos){if(!Array.isArray(e.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");for(t.typeProtos=[],n=0;n<e.typeProtos.length;++n){if("object"!=typeof e.typeProtos[n])throw TypeError(".onnx.AttributeProto.typeProtos: object expected");t.typeProtos[n]=c.onnx.TypeProto.fromObject(e.typeProtos[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.floats=[],n.ints=[],n.strings=[],n.tensors=[],n.graphs=[],n.typeProtos=[],n.sparseTensors=[]),t.defaults){if(n.name="",n.f=0,u.Long){var r=new u.Long(0,0,!1);n.i=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.i=t.longs===String?"0":0;t.bytes===String?n.s="":(n.s=[],t.bytes!==Array&&(n.s=u.newBuffer(n.s))),n.t=null,n.g=null,n.docString="",n.tp=null,n.type=t.enums===String?"UNDEFINED":0,n.refAttrName="",n.sparseTensor=null}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.f&&e.hasOwnProperty("f")&&(n.f=t.json&&!isFinite(e.f)?String(e.f):e.f),null!=e.i&&e.hasOwnProperty("i")&&("number"==typeof e.i?n.i=t.longs===String?String(e.i):e.i:n.i=t.longs===String?u.Long.prototype.toString.call(e.i):t.longs===Number?new u.LongBits(e.i.low>>>0,e.i.high>>>0).toNumber():e.i),null!=e.s&&e.hasOwnProperty("s")&&(n.s=t.bytes===String?u.base64.encode(e.s,0,e.s.length):t.bytes===Array?Array.prototype.slice.call(e.s):e.s),null!=e.t&&e.hasOwnProperty("t")&&(n.t=c.onnx.TensorProto.toObject(e.t,t)),null!=e.g&&e.hasOwnProperty("g")&&(n.g=c.onnx.GraphProto.toObject(e.g,t)),e.floats&&e.floats.length){n.floats=[];for(var o=0;o<e.floats.length;++o)n.floats[o]=t.json&&!isFinite(e.floats[o])?String(e.floats[o]):e.floats[o]}if(e.ints&&e.ints.length)for(n.ints=[],o=0;o<e.ints.length;++o)"number"==typeof e.ints[o]?n.ints[o]=t.longs===String?String(e.ints[o]):e.ints[o]:n.ints[o]=t.longs===String?u.Long.prototype.toString.call(e.ints[o]):t.longs===Number?new u.LongBits(e.ints[o].low>>>0,e.ints[o].high>>>0).toNumber():e.ints[o];if(e.strings&&e.strings.length)for(n.strings=[],o=0;o<e.strings.length;++o)n.strings[o]=t.bytes===String?u.base64.encode(e.strings[o],0,e.strings[o].length):t.bytes===Array?Array.prototype.slice.call(e.strings[o]):e.strings[o];if(e.tensors&&e.tensors.length)for(n.tensors=[],o=0;o<e.tensors.length;++o)n.tensors[o]=c.onnx.TensorProto.toObject(e.tensors[o],t);if(e.graphs&&e.graphs.length)for(n.graphs=[],o=0;o<e.graphs.length;++o)n.graphs[o]=c.onnx.GraphProto.toObject(e.graphs[o],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.tp&&e.hasOwnProperty("tp")&&(n.tp=c.onnx.TypeProto.toObject(e.tp,t)),e.typeProtos&&e.typeProtos.length)for(n.typeProtos=[],o=0;o<e.typeProtos.length;++o)n.typeProtos[o]=c.onnx.TypeProto.toObject(e.typeProtos[o],t);if(null!=e.type&&e.hasOwnProperty("type")&&(n.type=t.enums===String?void 0===c.onnx.AttributeProto.AttributeType[e.type]?e.type:c.onnx.AttributeProto.AttributeType[e.type]:e.type),null!=e.refAttrName&&e.hasOwnProperty("refAttrName")&&(n.refAttrName=e.refAttrName),null!=e.sparseTensor&&e.hasOwnProperty("sparseTensor")&&(n.sparseTensor=c.onnx.SparseTensorProto.toObject(e.sparseTensor,t)),e.sparseTensors&&e.sparseTensors.length)for(n.sparseTensors=[],o=0;o<e.sparseTensors.length;++o)n.sparseTensors[o]=c.onnx.SparseTensorProto.toObject(e.sparseTensors[o],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.AttributeProto"},e.AttributeType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="INT"]=2,t[e[3]="STRING"]=3,t[e[4]="TENSOR"]=4,t[e[5]="GRAPH"]=5,t[e[11]="SPARSE_TENSOR"]=11,t[e[13]="TYPE_PROTO"]=13,t[e[6]="FLOATS"]=6,t[e[7]="INTS"]=7,t[e[8]="STRINGS"]=8,t[e[9]="TENSORS"]=9,t[e[10]="GRAPHS"]=10,t[e[12]="SPARSE_TENSORS"]=12,t[e[14]="TYPE_PROTOS"]=14,t}(),e}(),a.ValueInfoProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.type&&Object.hasOwnProperty.call(e,"type")&&c.onnx.TypeProto.encode(e.type,t.uint32(18).fork()).ldelim(),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(26).string(e.docString),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.ValueInfoProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.name=e.string();break;case 2:r.type=c.onnx.TypeProto.decode(e,e.uint32());break;case 3:r.docString=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.type&&e.hasOwnProperty("type")){var t=c.onnx.TypeProto.verify(e.type);if(t)return"type."+t}return null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.ValueInfoProto)return e;var t=new c.onnx.ValueInfoProto;if(null!=e.name&&(t.name=String(e.name)),null!=e.type){if("object"!=typeof e.type)throw TypeError(".onnx.ValueInfoProto.type: object expected");t.type=c.onnx.TypeProto.fromObject(e.type)}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.name="",n.type=null,n.docString=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.type&&e.hasOwnProperty("type")&&(n.type=c.onnx.TypeProto.toObject(e.type,t)),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ValueInfoProto"},e}(),a.NodeProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.input=u.emptyArray,e.prototype.output=u.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=u.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(10).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(18).string(e.output[n]);if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(26).string(e.name),null!=e.opType&&Object.hasOwnProperty.call(e,"opType")&&t.uint32(34).string(e.opType),null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)c.onnx.AttributeProto.encode(e.attribute[n],t.uint32(42).fork()).ldelim();return null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(58).string(e.domain),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.NodeProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 2:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 3:r.name=e.string();break;case 4:r.opType=e.string();break;case 7:r.domain=e.string();break;case 5:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(c.onnx.AttributeProto.decode(e,e.uint32()));break;case 6:r.docString=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!u.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!u.isString(e.output[t]))return"output: string[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.opType&&e.hasOwnProperty("opType")&&!u.isString(e.opType))return"opType: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!u.isString(e.domain))return"domain: string expected";if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t){var n=c.onnx.AttributeProto.verify(e.attribute[t]);if(n)return"attribute."+n}}return null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString)?"docString: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.NodeProto)return e;var t=new c.onnx.NodeProto;if(e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.NodeProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.NodeProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(null!=e.name&&(t.name=String(e.name)),null!=e.opType&&(t.opType=String(e.opType)),null!=e.domain&&(t.domain=String(e.domain)),e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n){if("object"!=typeof e.attribute[n])throw TypeError(".onnx.NodeProto.attribute: object expected");t.attribute[n]=c.onnx.AttributeProto.fromObject(e.attribute[n])}}return null!=e.docString&&(t.docString=String(e.docString)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[]),t.defaults&&(n.name="",n.opType="",n.docString="",n.domain=""),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.opType&&e.hasOwnProperty("opType")&&(n.opType=e.opType),e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=c.onnx.AttributeProto.toObject(e.attribute[r],t);return null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.NodeProto"},e}(),a.TrainingInfoProto=function(){function e(e){if(this.initializationBinding=[],this.updateBinding=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=u.emptyArray,e.prototype.updateBinding=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.initialization&&Object.hasOwnProperty.call(e,"initialization")&&c.onnx.GraphProto.encode(e.initialization,t.uint32(10).fork()).ldelim(),null!=e.algorithm&&Object.hasOwnProperty.call(e,"algorithm")&&c.onnx.GraphProto.encode(e.algorithm,t.uint32(18).fork()).ldelim(),null!=e.initializationBinding&&e.initializationBinding.length)for(var n=0;n<e.initializationBinding.length;++n)c.onnx.StringStringEntryProto.encode(e.initializationBinding[n],t.uint32(26).fork()).ldelim();if(null!=e.updateBinding&&e.updateBinding.length)for(n=0;n<e.updateBinding.length;++n)c.onnx.StringStringEntryProto.encode(e.updateBinding[n],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TrainingInfoProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.initialization=c.onnx.GraphProto.decode(e,e.uint32());break;case 2:r.algorithm=c.onnx.GraphProto.decode(e,e.uint32());break;case 3:r.initializationBinding&&r.initializationBinding.length||(r.initializationBinding=[]),r.initializationBinding.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 4:r.updateBinding&&r.updateBinding.length||(r.updateBinding=[]),r.updateBinding.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.initialization&&e.hasOwnProperty("initialization")&&(n=c.onnx.GraphProto.verify(e.initialization)))return"initialization."+n;if(null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n=c.onnx.GraphProto.verify(e.algorithm)))return"algorithm."+n;if(null!=e.initializationBinding&&e.hasOwnProperty("initializationBinding")){if(!Array.isArray(e.initializationBinding))return"initializationBinding: array expected";for(var t=0;t<e.initializationBinding.length;++t)if(n=c.onnx.StringStringEntryProto.verify(e.initializationBinding[t]))return"initializationBinding."+n}if(null!=e.updateBinding&&e.hasOwnProperty("updateBinding")){if(!Array.isArray(e.updateBinding))return"updateBinding: array expected";for(t=0;t<e.updateBinding.length;++t){var n;if(n=c.onnx.StringStringEntryProto.verify(e.updateBinding[t]))return"updateBinding."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TrainingInfoProto)return e;var t=new c.onnx.TrainingInfoProto;if(null!=e.initialization){if("object"!=typeof e.initialization)throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");t.initialization=c.onnx.GraphProto.fromObject(e.initialization)}if(null!=e.algorithm){if("object"!=typeof e.algorithm)throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");t.algorithm=c.onnx.GraphProto.fromObject(e.algorithm)}if(e.initializationBinding){if(!Array.isArray(e.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");t.initializationBinding=[];for(var n=0;n<e.initializationBinding.length;++n){if("object"!=typeof e.initializationBinding[n])throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");t.initializationBinding[n]=c.onnx.StringStringEntryProto.fromObject(e.initializationBinding[n])}}if(e.updateBinding){if(!Array.isArray(e.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");for(t.updateBinding=[],n=0;n<e.updateBinding.length;++n){if("object"!=typeof e.updateBinding[n])throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");t.updateBinding[n]=c.onnx.StringStringEntryProto.fromObject(e.updateBinding[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.initializationBinding=[],n.updateBinding=[]),t.defaults&&(n.initialization=null,n.algorithm=null),null!=e.initialization&&e.hasOwnProperty("initialization")&&(n.initialization=c.onnx.GraphProto.toObject(e.initialization,t)),null!=e.algorithm&&e.hasOwnProperty("algorithm")&&(n.algorithm=c.onnx.GraphProto.toObject(e.algorithm,t)),e.initializationBinding&&e.initializationBinding.length){n.initializationBinding=[];for(var r=0;r<e.initializationBinding.length;++r)n.initializationBinding[r]=c.onnx.StringStringEntryProto.toObject(e.initializationBinding[r],t)}if(e.updateBinding&&e.updateBinding.length)for(n.updateBinding=[],r=0;r<e.updateBinding.length;++r)n.updateBinding[r]=c.onnx.StringStringEntryProto.toObject(e.updateBinding[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TrainingInfoProto"},e}(),a.ModelProto=function(){function e(e){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.irVersion=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=u.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=u.emptyArray,e.prototype.trainingInfo=u.emptyArray,e.prototype.functions=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.irVersion&&Object.hasOwnProperty.call(e,"irVersion")&&t.uint32(8).int64(e.irVersion),null!=e.producerName&&Object.hasOwnProperty.call(e,"producerName")&&t.uint32(18).string(e.producerName),null!=e.producerVersion&&Object.hasOwnProperty.call(e,"producerVersion")&&t.uint32(26).string(e.producerVersion),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(34).string(e.domain),null!=e.modelVersion&&Object.hasOwnProperty.call(e,"modelVersion")&&t.uint32(40).int64(e.modelVersion),null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(50).string(e.docString),null!=e.graph&&Object.hasOwnProperty.call(e,"graph")&&c.onnx.GraphProto.encode(e.graph,t.uint32(58).fork()).ldelim(),null!=e.opsetImport&&e.opsetImport.length)for(var n=0;n<e.opsetImport.length;++n)c.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(66).fork()).ldelim();if(null!=e.metadataProps&&e.metadataProps.length)for(n=0;n<e.metadataProps.length;++n)c.onnx.StringStringEntryProto.encode(e.metadataProps[n],t.uint32(114).fork()).ldelim();if(null!=e.trainingInfo&&e.trainingInfo.length)for(n=0;n<e.trainingInfo.length;++n)c.onnx.TrainingInfoProto.encode(e.trainingInfo[n],t.uint32(162).fork()).ldelim();if(null!=e.functions&&e.functions.length)for(n=0;n<e.functions.length;++n)c.onnx.FunctionProto.encode(e.functions[n],t.uint32(202).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.ModelProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.irVersion=e.int64();break;case 8:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(c.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 2:r.producerName=e.string();break;case 3:r.producerVersion=e.string();break;case 4:r.domain=e.string();break;case 5:r.modelVersion=e.int64();break;case 6:r.docString=e.string();break;case 7:r.graph=c.onnx.GraphProto.decode(e,e.uint32());break;case 14:r.metadataProps&&r.metadataProps.length||(r.metadataProps=[]),r.metadataProps.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 20:r.trainingInfo&&r.trainingInfo.length||(r.trainingInfo=[]),r.trainingInfo.push(c.onnx.TrainingInfoProto.decode(e,e.uint32()));break;case 25:r.functions&&r.functions.length||(r.functions=[]),r.functions.push(c.onnx.FunctionProto.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&!(u.isInteger(e.irVersion)||e.irVersion&&u.isInteger(e.irVersion.low)&&u.isInteger(e.irVersion.high)))return"irVersion: integer|Long expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(var t=0;t<e.opsetImport.length;++t)if(n=c.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}if(null!=e.producerName&&e.hasOwnProperty("producerName")&&!u.isString(e.producerName))return"producerName: string expected";if(null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&!u.isString(e.producerVersion))return"producerVersion: string expected";if(null!=e.domain&&e.hasOwnProperty("domain")&&!u.isString(e.domain))return"domain: string expected";if(null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&!(u.isInteger(e.modelVersion)||e.modelVersion&&u.isInteger(e.modelVersion.low)&&u.isInteger(e.modelVersion.high)))return"modelVersion: integer|Long expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString))return"docString: string expected";if(null!=e.graph&&e.hasOwnProperty("graph")&&(n=c.onnx.GraphProto.verify(e.graph)))return"graph."+n;if(null!=e.metadataProps&&e.hasOwnProperty("metadataProps")){if(!Array.isArray(e.metadataProps))return"metadataProps: array expected";for(t=0;t<e.metadataProps.length;++t)if(n=c.onnx.StringStringEntryProto.verify(e.metadataProps[t]))return"metadataProps."+n}if(null!=e.trainingInfo&&e.hasOwnProperty("trainingInfo")){if(!Array.isArray(e.trainingInfo))return"trainingInfo: array expected";for(t=0;t<e.trainingInfo.length;++t)if(n=c.onnx.TrainingInfoProto.verify(e.trainingInfo[t]))return"trainingInfo."+n}if(null!=e.functions&&e.hasOwnProperty("functions")){if(!Array.isArray(e.functions))return"functions: array expected";for(t=0;t<e.functions.length;++t){var n;if(n=c.onnx.FunctionProto.verify(e.functions[t]))return"functions."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.ModelProto)return e;var t=new c.onnx.ModelProto;if(null!=e.irVersion&&(u.Long?(t.irVersion=u.Long.fromValue(e.irVersion)).unsigned=!1:"string"==typeof e.irVersion?t.irVersion=parseInt(e.irVersion,10):"number"==typeof e.irVersion?t.irVersion=e.irVersion:"object"==typeof e.irVersion&&(t.irVersion=new u.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber())),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");t.opsetImport=[];for(var n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.ModelProto.opsetImport: object expected");t.opsetImport[n]=c.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}if(null!=e.producerName&&(t.producerName=String(e.producerName)),null!=e.producerVersion&&(t.producerVersion=String(e.producerVersion)),null!=e.domain&&(t.domain=String(e.domain)),null!=e.modelVersion&&(u.Long?(t.modelVersion=u.Long.fromValue(e.modelVersion)).unsigned=!1:"string"==typeof e.modelVersion?t.modelVersion=parseInt(e.modelVersion,10):"number"==typeof e.modelVersion?t.modelVersion=e.modelVersion:"object"==typeof e.modelVersion&&(t.modelVersion=new u.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber())),null!=e.docString&&(t.docString=String(e.docString)),null!=e.graph){if("object"!=typeof e.graph)throw TypeError(".onnx.ModelProto.graph: object expected");t.graph=c.onnx.GraphProto.fromObject(e.graph)}if(e.metadataProps){if(!Array.isArray(e.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for(t.metadataProps=[],n=0;n<e.metadataProps.length;++n){if("object"!=typeof e.metadataProps[n])throw TypeError(".onnx.ModelProto.metadataProps: object expected");t.metadataProps[n]=c.onnx.StringStringEntryProto.fromObject(e.metadataProps[n])}}if(e.trainingInfo){if(!Array.isArray(e.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");for(t.trainingInfo=[],n=0;n<e.trainingInfo.length;++n){if("object"!=typeof e.trainingInfo[n])throw TypeError(".onnx.ModelProto.trainingInfo: object expected");t.trainingInfo[n]=c.onnx.TrainingInfoProto.fromObject(e.trainingInfo[n])}}if(e.functions){if(!Array.isArray(e.functions))throw TypeError(".onnx.ModelProto.functions: array expected");for(t.functions=[],n=0;n<e.functions.length;++n){if("object"!=typeof e.functions[n])throw TypeError(".onnx.ModelProto.functions: object expected");t.functions[n]=c.onnx.FunctionProto.fromObject(e.functions[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.opsetImport=[],n.metadataProps=[],n.trainingInfo=[],n.functions=[]),t.defaults){if(u.Long){var r=new u.Long(0,0,!1);n.irVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.irVersion=t.longs===String?"0":0;n.producerName="",n.producerVersion="",n.domain="",u.Long?(r=new u.Long(0,0,!1),n.modelVersion=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.modelVersion=t.longs===String?"0":0,n.docString="",n.graph=null}if(null!=e.irVersion&&e.hasOwnProperty("irVersion")&&("number"==typeof e.irVersion?n.irVersion=t.longs===String?String(e.irVersion):e.irVersion:n.irVersion=t.longs===String?u.Long.prototype.toString.call(e.irVersion):t.longs===Number?new u.LongBits(e.irVersion.low>>>0,e.irVersion.high>>>0).toNumber():e.irVersion),null!=e.producerName&&e.hasOwnProperty("producerName")&&(n.producerName=e.producerName),null!=e.producerVersion&&e.hasOwnProperty("producerVersion")&&(n.producerVersion=e.producerVersion),null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.modelVersion&&e.hasOwnProperty("modelVersion")&&("number"==typeof e.modelVersion?n.modelVersion=t.longs===String?String(e.modelVersion):e.modelVersion:n.modelVersion=t.longs===String?u.Long.prototype.toString.call(e.modelVersion):t.longs===Number?new u.LongBits(e.modelVersion.low>>>0,e.modelVersion.high>>>0).toNumber():e.modelVersion),null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),null!=e.graph&&e.hasOwnProperty("graph")&&(n.graph=c.onnx.GraphProto.toObject(e.graph,t)),e.opsetImport&&e.opsetImport.length){n.opsetImport=[];for(var o=0;o<e.opsetImport.length;++o)n.opsetImport[o]=c.onnx.OperatorSetIdProto.toObject(e.opsetImport[o],t)}if(e.metadataProps&&e.metadataProps.length)for(n.metadataProps=[],o=0;o<e.metadataProps.length;++o)n.metadataProps[o]=c.onnx.StringStringEntryProto.toObject(e.metadataProps[o],t);if(e.trainingInfo&&e.trainingInfo.length)for(n.trainingInfo=[],o=0;o<e.trainingInfo.length;++o)n.trainingInfo[o]=c.onnx.TrainingInfoProto.toObject(e.trainingInfo[o],t);if(e.functions&&e.functions.length)for(n.functions=[],o=0;o<e.functions.length;++o)n.functions[o]=c.onnx.FunctionProto.toObject(e.functions[o],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.ModelProto"},e}(),a.StringStringEntryProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.key&&Object.hasOwnProperty.call(e,"key")&&t.uint32(10).string(e.key),null!=e.value&&Object.hasOwnProperty.call(e,"value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.StringStringEntryProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.key=e.string();break;case 2:r.value=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!u.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!u.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.StringStringEntryProto)return e;var t=new c.onnx.StringStringEntryProto;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.key="",n.value=""),null!=e.key&&e.hasOwnProperty("key")&&(n.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(n.value=e.value),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.StringStringEntryProto"},e}(),a.TensorAnnotation=function(){function e(e){if(this.quantParameterTensorNames=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.tensorName&&Object.hasOwnProperty.call(e,"tensorName")&&t.uint32(10).string(e.tensorName),null!=e.quantParameterTensorNames&&e.quantParameterTensorNames.length)for(var n=0;n<e.quantParameterTensorNames.length;++n)c.onnx.StringStringEntryProto.encode(e.quantParameterTensorNames[n],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorAnnotation;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.tensorName=e.string();break;case 2:r.quantParameterTensorNames&&r.quantParameterTensorNames.length||(r.quantParameterTensorNames=[]),r.quantParameterTensorNames.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.tensorName&&e.hasOwnProperty("tensorName")&&!u.isString(e.tensorName))return"tensorName: string expected";if(null!=e.quantParameterTensorNames&&e.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(e.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var t=0;t<e.quantParameterTensorNames.length;++t){var n=c.onnx.StringStringEntryProto.verify(e.quantParameterTensorNames[t]);if(n)return"quantParameterTensorNames."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorAnnotation)return e;var t=new c.onnx.TensorAnnotation;if(null!=e.tensorName&&(t.tensorName=String(e.tensorName)),e.quantParameterTensorNames){if(!Array.isArray(e.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");t.quantParameterTensorNames=[];for(var n=0;n<e.quantParameterTensorNames.length;++n){if("object"!=typeof e.quantParameterTensorNames[n])throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");t.quantParameterTensorNames[n]=c.onnx.StringStringEntryProto.fromObject(e.quantParameterTensorNames[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.quantParameterTensorNames=[]),t.defaults&&(n.tensorName=""),null!=e.tensorName&&e.hasOwnProperty("tensorName")&&(n.tensorName=e.tensorName),e.quantParameterTensorNames&&e.quantParameterTensorNames.length){n.quantParameterTensorNames=[];for(var r=0;r<e.quantParameterTensorNames.length;++r)n.quantParameterTensorNames[r]=c.onnx.StringStringEntryProto.toObject(e.quantParameterTensorNames[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorAnnotation"},e}(),a.GraphProto=function(){function e(e){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.node=u.emptyArray,e.prototype.name="",e.prototype.initializer=u.emptyArray,e.prototype.sparseInitializer=u.emptyArray,e.prototype.docString="",e.prototype.input=u.emptyArray,e.prototype.output=u.emptyArray,e.prototype.valueInfo=u.emptyArray,e.prototype.quantizationAnnotation=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.node&&e.node.length)for(var n=0;n<e.node.length;++n)c.onnx.NodeProto.encode(e.node[n],t.uint32(10).fork()).ldelim();if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(18).string(e.name),null!=e.initializer&&e.initializer.length)for(n=0;n<e.initializer.length;++n)c.onnx.TensorProto.encode(e.initializer[n],t.uint32(42).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(82).string(e.docString),null!=e.input&&e.input.length)for(n=0;n<e.input.length;++n)c.onnx.ValueInfoProto.encode(e.input[n],t.uint32(90).fork()).ldelim();if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)c.onnx.ValueInfoProto.encode(e.output[n],t.uint32(98).fork()).ldelim();if(null!=e.valueInfo&&e.valueInfo.length)for(n=0;n<e.valueInfo.length;++n)c.onnx.ValueInfoProto.encode(e.valueInfo[n],t.uint32(106).fork()).ldelim();if(null!=e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n=0;n<e.quantizationAnnotation.length;++n)c.onnx.TensorAnnotation.encode(e.quantizationAnnotation[n],t.uint32(114).fork()).ldelim();if(null!=e.sparseInitializer&&e.sparseInitializer.length)for(n=0;n<e.sparseInitializer.length;++n)c.onnx.SparseTensorProto.encode(e.sparseInitializer[n],t.uint32(122).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.GraphProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.node&&r.node.length||(r.node=[]),r.node.push(c.onnx.NodeProto.decode(e,e.uint32()));break;case 2:r.name=e.string();break;case 5:r.initializer&&r.initializer.length||(r.initializer=[]),r.initializer.push(c.onnx.TensorProto.decode(e,e.uint32()));break;case 15:r.sparseInitializer&&r.sparseInitializer.length||(r.sparseInitializer=[]),r.sparseInitializer.push(c.onnx.SparseTensorProto.decode(e,e.uint32()));break;case 10:r.docString=e.string();break;case 11:r.input&&r.input.length||(r.input=[]),r.input.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 12:r.output&&r.output.length||(r.output=[]),r.output.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 13:r.valueInfo&&r.valueInfo.length||(r.valueInfo=[]),r.valueInfo.push(c.onnx.ValueInfoProto.decode(e,e.uint32()));break;case 14:r.quantizationAnnotation&&r.quantizationAnnotation.length||(r.quantizationAnnotation=[]),r.quantizationAnnotation.push(c.onnx.TensorAnnotation.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(var t=0;t<e.node.length;++t)if(n=c.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.initializer&&e.hasOwnProperty("initializer")){if(!Array.isArray(e.initializer))return"initializer: array expected";for(t=0;t<e.initializer.length;++t)if(n=c.onnx.TensorProto.verify(e.initializer[t]))return"initializer."+n}if(null!=e.sparseInitializer&&e.hasOwnProperty("sparseInitializer")){if(!Array.isArray(e.sparseInitializer))return"sparseInitializer: array expected";for(t=0;t<e.sparseInitializer.length;++t)if(n=c.onnx.SparseTensorProto.verify(e.sparseInitializer[t]))return"sparseInitializer."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString))return"docString: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(t=0;t<e.input.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.input[t]))return"input."+n}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.output[t]))return"output."+n}if(null!=e.valueInfo&&e.hasOwnProperty("valueInfo")){if(!Array.isArray(e.valueInfo))return"valueInfo: array expected";for(t=0;t<e.valueInfo.length;++t)if(n=c.onnx.ValueInfoProto.verify(e.valueInfo[t]))return"valueInfo."+n}if(null!=e.quantizationAnnotation&&e.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(e.quantizationAnnotation))return"quantizationAnnotation: array expected";for(t=0;t<e.quantizationAnnotation.length;++t){var n;if(n=c.onnx.TensorAnnotation.verify(e.quantizationAnnotation[t]))return"quantizationAnnotation."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.GraphProto)return e;var t=new c.onnx.GraphProto;if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.GraphProto.node: array expected");t.node=[];for(var n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.GraphProto.node: object expected");t.node[n]=c.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.name&&(t.name=String(e.name)),e.initializer){if(!Array.isArray(e.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for(t.initializer=[],n=0;n<e.initializer.length;++n){if("object"!=typeof e.initializer[n])throw TypeError(".onnx.GraphProto.initializer: object expected");t.initializer[n]=c.onnx.TensorProto.fromObject(e.initializer[n])}}if(e.sparseInitializer){if(!Array.isArray(e.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");for(t.sparseInitializer=[],n=0;n<e.sparseInitializer.length;++n){if("object"!=typeof e.sparseInitializer[n])throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");t.sparseInitializer[n]=c.onnx.SparseTensorProto.fromObject(e.sparseInitializer[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.GraphProto.input: array expected");for(t.input=[],n=0;n<e.input.length;++n){if("object"!=typeof e.input[n])throw TypeError(".onnx.GraphProto.input: object expected");t.input[n]=c.onnx.ValueInfoProto.fromObject(e.input[n])}}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.GraphProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n){if("object"!=typeof e.output[n])throw TypeError(".onnx.GraphProto.output: object expected");t.output[n]=c.onnx.ValueInfoProto.fromObject(e.output[n])}}if(e.valueInfo){if(!Array.isArray(e.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for(t.valueInfo=[],n=0;n<e.valueInfo.length;++n){if("object"!=typeof e.valueInfo[n])throw TypeError(".onnx.GraphProto.valueInfo: object expected");t.valueInfo[n]=c.onnx.ValueInfoProto.fromObject(e.valueInfo[n])}}if(e.quantizationAnnotation){if(!Array.isArray(e.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for(t.quantizationAnnotation=[],n=0;n<e.quantizationAnnotation.length;++n){if("object"!=typeof e.quantizationAnnotation[n])throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");t.quantizationAnnotation[n]=c.onnx.TensorAnnotation.fromObject(e.quantizationAnnotation[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.node=[],n.initializer=[],n.input=[],n.output=[],n.valueInfo=[],n.quantizationAnnotation=[],n.sparseInitializer=[]),t.defaults&&(n.name="",n.docString=""),e.node&&e.node.length){n.node=[];for(var r=0;r<e.node.length;++r)n.node[r]=c.onnx.NodeProto.toObject(e.node[r],t)}if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.initializer&&e.initializer.length)for(n.initializer=[],r=0;r<e.initializer.length;++r)n.initializer[r]=c.onnx.TensorProto.toObject(e.initializer[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.input&&e.input.length)for(n.input=[],r=0;r<e.input.length;++r)n.input[r]=c.onnx.ValueInfoProto.toObject(e.input[r],t);if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=c.onnx.ValueInfoProto.toObject(e.output[r],t);if(e.valueInfo&&e.valueInfo.length)for(n.valueInfo=[],r=0;r<e.valueInfo.length;++r)n.valueInfo[r]=c.onnx.ValueInfoProto.toObject(e.valueInfo[r],t);if(e.quantizationAnnotation&&e.quantizationAnnotation.length)for(n.quantizationAnnotation=[],r=0;r<e.quantizationAnnotation.length;++r)n.quantizationAnnotation[r]=c.onnx.TensorAnnotation.toObject(e.quantizationAnnotation[r],t);if(e.sparseInitializer&&e.sparseInitializer.length)for(n.sparseInitializer=[],r=0;r<e.sparseInitializer.length;++r)n.sparseInitializer[r]=c.onnx.SparseTensorProto.toObject(e.sparseInitializer[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.GraphProto"},e}(),a.TensorProto=function(){function e(e){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dims=u.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=u.emptyArray,e.prototype.int32Data=u.emptyArray,e.prototype.stringData=u.emptyArray,e.prototype.int64Data=u.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=u.newBuffer([]),e.prototype.externalData=u.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=u.emptyArray,e.prototype.uint64Data=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.dims&&e.dims.length){t.uint32(10).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}if(null!=e.dataType&&Object.hasOwnProperty.call(e,"dataType")&&t.uint32(16).int32(e.dataType),null!=e.segment&&Object.hasOwnProperty.call(e,"segment")&&c.onnx.TensorProto.Segment.encode(e.segment,t.uint32(26).fork()).ldelim(),null!=e.floatData&&e.floatData.length){for(t.uint32(34).fork(),n=0;n<e.floatData.length;++n)t.float(e.floatData[n]);t.ldelim()}if(null!=e.int32Data&&e.int32Data.length){for(t.uint32(42).fork(),n=0;n<e.int32Data.length;++n)t.int32(e.int32Data[n]);t.ldelim()}if(null!=e.stringData&&e.stringData.length)for(n=0;n<e.stringData.length;++n)t.uint32(50).bytes(e.stringData[n]);if(null!=e.int64Data&&e.int64Data.length){for(t.uint32(58).fork(),n=0;n<e.int64Data.length;++n)t.int64(e.int64Data[n]);t.ldelim()}if(null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(66).string(e.name),null!=e.rawData&&Object.hasOwnProperty.call(e,"rawData")&&t.uint32(74).bytes(e.rawData),null!=e.doubleData&&e.doubleData.length){for(t.uint32(82).fork(),n=0;n<e.doubleData.length;++n)t.double(e.doubleData[n]);t.ldelim()}if(null!=e.uint64Data&&e.uint64Data.length){for(t.uint32(90).fork(),n=0;n<e.uint64Data.length;++n)t.uint64(e.uint64Data[n]);t.ldelim()}if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(98).string(e.docString),null!=e.externalData&&e.externalData.length)for(n=0;n<e.externalData.length;++n)c.onnx.StringStringEntryProto.encode(e.externalData[n],t.uint32(106).fork()).ldelim();return null!=e.dataLocation&&Object.hasOwnProperty.call(e,"dataLocation")&&t.uint32(112).int32(e.dataLocation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&o))for(var a=e.uint32()+e.pos;e.pos<a;)r.dims.push(e.int64());else r.dims.push(e.int64());break;case 2:r.dataType=e.int32();break;case 3:r.segment=c.onnx.TensorProto.Segment.decode(e,e.uint32());break;case 4:if(r.floatData&&r.floatData.length||(r.floatData=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.floatData.push(e.float());else r.floatData.push(e.float());break;case 5:if(r.int32Data&&r.int32Data.length||(r.int32Data=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.int32Data.push(e.int32());else r.int32Data.push(e.int32());break;case 6:r.stringData&&r.stringData.length||(r.stringData=[]),r.stringData.push(e.bytes());break;case 7:if(r.int64Data&&r.int64Data.length||(r.int64Data=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.int64Data.push(e.int64());else r.int64Data.push(e.int64());break;case 8:r.name=e.string();break;case 12:r.docString=e.string();break;case 9:r.rawData=e.bytes();break;case 13:r.externalData&&r.externalData.length||(r.externalData=[]),r.externalData.push(c.onnx.StringStringEntryProto.decode(e,e.uint32()));break;case 14:r.dataLocation=e.int32();break;case 10:if(r.doubleData&&r.doubleData.length||(r.doubleData=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.doubleData.push(e.double());else r.doubleData.push(e.double());break;case 11:if(r.uint64Data&&r.uint64Data.length||(r.uint64Data=[]),2==(7&o))for(a=e.uint32()+e.pos;e.pos<a;)r.uint64Data.push(e.uint64());else r.uint64Data.push(e.uint64());break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var t=0;t<e.dims.length;++t)if(!(u.isInteger(e.dims[t])||e.dims[t]&&u.isInteger(e.dims[t].low)&&u.isInteger(e.dims[t].high)))return"dims: integer|Long[] expected"}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&!u.isInteger(e.dataType))return"dataType: integer expected";if(null!=e.segment&&e.hasOwnProperty("segment")&&(n=c.onnx.TensorProto.Segment.verify(e.segment)))return"segment."+n;if(null!=e.floatData&&e.hasOwnProperty("floatData")){if(!Array.isArray(e.floatData))return"floatData: array expected";for(t=0;t<e.floatData.length;++t)if("number"!=typeof e.floatData[t])return"floatData: number[] expected"}if(null!=e.int32Data&&e.hasOwnProperty("int32Data")){if(!Array.isArray(e.int32Data))return"int32Data: array expected";for(t=0;t<e.int32Data.length;++t)if(!u.isInteger(e.int32Data[t]))return"int32Data: integer[] expected"}if(null!=e.stringData&&e.hasOwnProperty("stringData")){if(!Array.isArray(e.stringData))return"stringData: array expected";for(t=0;t<e.stringData.length;++t)if(!(e.stringData[t]&&"number"==typeof e.stringData[t].length||u.isString(e.stringData[t])))return"stringData: buffer[] expected"}if(null!=e.int64Data&&e.hasOwnProperty("int64Data")){if(!Array.isArray(e.int64Data))return"int64Data: array expected";for(t=0;t<e.int64Data.length;++t)if(!(u.isInteger(e.int64Data[t])||e.int64Data[t]&&u.isInteger(e.int64Data[t].low)&&u.isInteger(e.int64Data[t].high)))return"int64Data: integer|Long[] expected"}if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString))return"docString: string expected";if(null!=e.rawData&&e.hasOwnProperty("rawData")&&!(e.rawData&&"number"==typeof e.rawData.length||u.isString(e.rawData)))return"rawData: buffer expected";if(null!=e.externalData&&e.hasOwnProperty("externalData")){if(!Array.isArray(e.externalData))return"externalData: array expected";for(t=0;t<e.externalData.length;++t){var n;if(n=c.onnx.StringStringEntryProto.verify(e.externalData[t]))return"externalData."+n}}if(null!=e.dataLocation&&e.hasOwnProperty("dataLocation"))switch(e.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(null!=e.doubleData&&e.hasOwnProperty("doubleData")){if(!Array.isArray(e.doubleData))return"doubleData: array expected";for(t=0;t<e.doubleData.length;++t)if("number"!=typeof e.doubleData[t])return"doubleData: number[] expected"}if(null!=e.uint64Data&&e.hasOwnProperty("uint64Data")){if(!Array.isArray(e.uint64Data))return"uint64Data: array expected";for(t=0;t<e.uint64Data.length;++t)if(!(u.isInteger(e.uint64Data[t])||e.uint64Data[t]&&u.isInteger(e.uint64Data[t].low)&&u.isInteger(e.uint64Data[t].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorProto)return e;var t=new c.onnx.TensorProto;if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.TensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)u.Long?(t.dims[n]=u.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new u.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}if(null!=e.dataType&&(t.dataType=0|e.dataType),null!=e.segment){if("object"!=typeof e.segment)throw TypeError(".onnx.TensorProto.segment: object expected");t.segment=c.onnx.TensorProto.Segment.fromObject(e.segment)}if(e.floatData){if(!Array.isArray(e.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for(t.floatData=[],n=0;n<e.floatData.length;++n)t.floatData[n]=Number(e.floatData[n])}if(e.int32Data){if(!Array.isArray(e.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for(t.int32Data=[],n=0;n<e.int32Data.length;++n)t.int32Data[n]=0|e.int32Data[n]}if(e.stringData){if(!Array.isArray(e.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for(t.stringData=[],n=0;n<e.stringData.length;++n)"string"==typeof e.stringData[n]?u.base64.decode(e.stringData[n],t.stringData[n]=u.newBuffer(u.base64.length(e.stringData[n])),0):e.stringData[n].length>=0&&(t.stringData[n]=e.stringData[n])}if(e.int64Data){if(!Array.isArray(e.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for(t.int64Data=[],n=0;n<e.int64Data.length;++n)u.Long?(t.int64Data[n]=u.Long.fromValue(e.int64Data[n])).unsigned=!1:"string"==typeof e.int64Data[n]?t.int64Data[n]=parseInt(e.int64Data[n],10):"number"==typeof e.int64Data[n]?t.int64Data[n]=e.int64Data[n]:"object"==typeof e.int64Data[n]&&(t.int64Data[n]=new u.LongBits(e.int64Data[n].low>>>0,e.int64Data[n].high>>>0).toNumber())}if(null!=e.name&&(t.name=String(e.name)),null!=e.docString&&(t.docString=String(e.docString)),null!=e.rawData&&("string"==typeof e.rawData?u.base64.decode(e.rawData,t.rawData=u.newBuffer(u.base64.length(e.rawData)),0):e.rawData.length>=0&&(t.rawData=e.rawData)),e.externalData){if(!Array.isArray(e.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for(t.externalData=[],n=0;n<e.externalData.length;++n){if("object"!=typeof e.externalData[n])throw TypeError(".onnx.TensorProto.externalData: object expected");t.externalData[n]=c.onnx.StringStringEntryProto.fromObject(e.externalData[n])}}switch(e.dataLocation){default:if("number"==typeof e.dataLocation){t.dataLocation=e.dataLocation;break}break;case"DEFAULT":case 0:t.dataLocation=0;break;case"EXTERNAL":case 1:t.dataLocation=1}if(e.doubleData){if(!Array.isArray(e.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for(t.doubleData=[],n=0;n<e.doubleData.length;++n)t.doubleData[n]=Number(e.doubleData[n])}if(e.uint64Data){if(!Array.isArray(e.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for(t.uint64Data=[],n=0;n<e.uint64Data.length;++n)u.Long?(t.uint64Data[n]=u.Long.fromValue(e.uint64Data[n])).unsigned=!0:"string"==typeof e.uint64Data[n]?t.uint64Data[n]=parseInt(e.uint64Data[n],10):"number"==typeof e.uint64Data[n]?t.uint64Data[n]=e.uint64Data[n]:"object"==typeof e.uint64Data[n]&&(t.uint64Data[n]=new u.LongBits(e.uint64Data[n].low>>>0,e.uint64Data[n].high>>>0).toNumber(!0))}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[],n.floatData=[],n.int32Data=[],n.stringData=[],n.int64Data=[],n.doubleData=[],n.uint64Data=[],n.externalData=[]),t.defaults&&(n.dataType=0,n.segment=null,n.name="",t.bytes===String?n.rawData="":(n.rawData=[],t.bytes!==Array&&(n.rawData=u.newBuffer(n.rawData))),n.docString="",n.dataLocation=t.enums===String?"DEFAULT":0),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?u.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new u.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}if(null!=e.dataType&&e.hasOwnProperty("dataType")&&(n.dataType=e.dataType),null!=e.segment&&e.hasOwnProperty("segment")&&(n.segment=c.onnx.TensorProto.Segment.toObject(e.segment,t)),e.floatData&&e.floatData.length)for(n.floatData=[],r=0;r<e.floatData.length;++r)n.floatData[r]=t.json&&!isFinite(e.floatData[r])?String(e.floatData[r]):e.floatData[r];if(e.int32Data&&e.int32Data.length)for(n.int32Data=[],r=0;r<e.int32Data.length;++r)n.int32Data[r]=e.int32Data[r];if(e.stringData&&e.stringData.length)for(n.stringData=[],r=0;r<e.stringData.length;++r)n.stringData[r]=t.bytes===String?u.base64.encode(e.stringData[r],0,e.stringData[r].length):t.bytes===Array?Array.prototype.slice.call(e.stringData[r]):e.stringData[r];if(e.int64Data&&e.int64Data.length)for(n.int64Data=[],r=0;r<e.int64Data.length;++r)"number"==typeof e.int64Data[r]?n.int64Data[r]=t.longs===String?String(e.int64Data[r]):e.int64Data[r]:n.int64Data[r]=t.longs===String?u.Long.prototype.toString.call(e.int64Data[r]):t.longs===Number?new u.LongBits(e.int64Data[r].low>>>0,e.int64Data[r].high>>>0).toNumber():e.int64Data[r];if(null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),null!=e.rawData&&e.hasOwnProperty("rawData")&&(n.rawData=t.bytes===String?u.base64.encode(e.rawData,0,e.rawData.length):t.bytes===Array?Array.prototype.slice.call(e.rawData):e.rawData),e.doubleData&&e.doubleData.length)for(n.doubleData=[],r=0;r<e.doubleData.length;++r)n.doubleData[r]=t.json&&!isFinite(e.doubleData[r])?String(e.doubleData[r]):e.doubleData[r];if(e.uint64Data&&e.uint64Data.length)for(n.uint64Data=[],r=0;r<e.uint64Data.length;++r)"number"==typeof e.uint64Data[r]?n.uint64Data[r]=t.longs===String?String(e.uint64Data[r]):e.uint64Data[r]:n.uint64Data[r]=t.longs===String?u.Long.prototype.toString.call(e.uint64Data[r]):t.longs===Number?new u.LongBits(e.uint64Data[r].low>>>0,e.uint64Data[r].high>>>0).toNumber(!0):e.uint64Data[r];if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.externalData&&e.externalData.length)for(n.externalData=[],r=0;r<e.externalData.length;++r)n.externalData[r]=c.onnx.StringStringEntryProto.toObject(e.externalData[r],t);return null!=e.dataLocation&&e.hasOwnProperty("dataLocation")&&(n.dataLocation=t.enums===String?void 0===c.onnx.TensorProto.DataLocation[e.dataLocation]?e.dataLocation:c.onnx.TensorProto.DataLocation[e.dataLocation]:e.dataLocation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto"},e.DataType=function(){var e={},t=Object.create(e);return t[e[0]="UNDEFINED"]=0,t[e[1]="FLOAT"]=1,t[e[2]="UINT8"]=2,t[e[3]="INT8"]=3,t[e[4]="UINT16"]=4,t[e[5]="INT16"]=5,t[e[6]="INT32"]=6,t[e[7]="INT64"]=7,t[e[8]="STRING"]=8,t[e[9]="BOOL"]=9,t[e[10]="FLOAT16"]=10,t[e[11]="DOUBLE"]=11,t[e[12]="UINT32"]=12,t[e[13]="UINT64"]=13,t[e[14]="COMPLEX64"]=14,t[e[15]="COMPLEX128"]=15,t[e[16]="BFLOAT16"]=16,t[e[17]="FLOAT8E4M3FN"]=17,t[e[18]="FLOAT8E4M3FNUZ"]=18,t[e[19]="FLOAT8E5M2"]=19,t[e[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.begin=u.Long?u.Long.fromBits(0,0,!1):0,e.prototype.end=u.Long?u.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.begin&&Object.hasOwnProperty.call(e,"begin")&&t.uint32(8).int64(e.begin),null!=e.end&&Object.hasOwnProperty.call(e,"end")&&t.uint32(16).int64(e.end),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorProto.Segment;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.begin=e.int64();break;case 2:r.end=e.int64();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.begin&&e.hasOwnProperty("begin")&&!(u.isInteger(e.begin)||e.begin&&u.isInteger(e.begin.low)&&u.isInteger(e.begin.high))?"begin: integer|Long expected":null!=e.end&&e.hasOwnProperty("end")&&!(u.isInteger(e.end)||e.end&&u.isInteger(e.end.low)&&u.isInteger(e.end.high))?"end: integer|Long expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TensorProto.Segment)return e;var t=new c.onnx.TensorProto.Segment;return null!=e.begin&&(u.Long?(t.begin=u.Long.fromValue(e.begin)).unsigned=!1:"string"==typeof e.begin?t.begin=parseInt(e.begin,10):"number"==typeof e.begin?t.begin=e.begin:"object"==typeof e.begin&&(t.begin=new u.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber())),null!=e.end&&(u.Long?(t.end=u.Long.fromValue(e.end)).unsigned=!1:"string"==typeof e.end?t.end=parseInt(e.end,10):"number"==typeof e.end?t.end=e.end:"object"==typeof e.end&&(t.end=new u.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults){if(u.Long){var r=new u.Long(0,0,!1);n.begin=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.begin=t.longs===String?"0":0;u.Long?(r=new u.Long(0,0,!1),n.end=t.longs===String?r.toString():t.longs===Number?r.toNumber():r):n.end=t.longs===String?"0":0}return null!=e.begin&&e.hasOwnProperty("begin")&&("number"==typeof e.begin?n.begin=t.longs===String?String(e.begin):e.begin:n.begin=t.longs===String?u.Long.prototype.toString.call(e.begin):t.longs===Number?new u.LongBits(e.begin.low>>>0,e.begin.high>>>0).toNumber():e.begin),null!=e.end&&e.hasOwnProperty("end")&&("number"==typeof e.end?n.end=t.longs===String?String(e.end):e.end:n.end=t.longs===String?u.Long.prototype.toString.call(e.end):t.longs===Number?new u.LongBits(e.end.low>>>0,e.end.high>>>0).toNumber():e.end),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorProto.Segment"},e}(),e.DataLocation=function(){var e={},t=Object.create(e);return t[e[0]="DEFAULT"]=0,t[e[1]="EXTERNAL"]=1,t}(),e}(),a.SparseTensorProto=function(){function e(e){if(this.dims=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.values&&Object.hasOwnProperty.call(e,"values")&&c.onnx.TensorProto.encode(e.values,t.uint32(10).fork()).ldelim(),null!=e.indices&&Object.hasOwnProperty.call(e,"indices")&&c.onnx.TensorProto.encode(e.indices,t.uint32(18).fork()).ldelim(),null!=e.dims&&e.dims.length){t.uint32(26).fork();for(var n=0;n<e.dims.length;++n)t.int64(e.dims[n]);t.ldelim()}return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.SparseTensorProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.values=c.onnx.TensorProto.decode(e,e.uint32());break;case 2:r.indices=c.onnx.TensorProto.decode(e,e.uint32());break;case 3:if(r.dims&&r.dims.length||(r.dims=[]),2==(7&o))for(var a=e.uint32()+e.pos;e.pos<a;)r.dims.push(e.int64());else r.dims.push(e.int64());break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t;if(null!=e.values&&e.hasOwnProperty("values")&&(t=c.onnx.TensorProto.verify(e.values)))return"values."+t;if(null!=e.indices&&e.hasOwnProperty("indices")&&(t=c.onnx.TensorProto.verify(e.indices)))return"indices."+t;if(null!=e.dims&&e.hasOwnProperty("dims")){if(!Array.isArray(e.dims))return"dims: array expected";for(var n=0;n<e.dims.length;++n)if(!(u.isInteger(e.dims[n])||e.dims[n]&&u.isInteger(e.dims[n].low)&&u.isInteger(e.dims[n].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(e){if(e instanceof c.onnx.SparseTensorProto)return e;var t=new c.onnx.SparseTensorProto;if(null!=e.values){if("object"!=typeof e.values)throw TypeError(".onnx.SparseTensorProto.values: object expected");t.values=c.onnx.TensorProto.fromObject(e.values)}if(null!=e.indices){if("object"!=typeof e.indices)throw TypeError(".onnx.SparseTensorProto.indices: object expected");t.indices=c.onnx.TensorProto.fromObject(e.indices)}if(e.dims){if(!Array.isArray(e.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");t.dims=[];for(var n=0;n<e.dims.length;++n)u.Long?(t.dims[n]=u.Long.fromValue(e.dims[n])).unsigned=!1:"string"==typeof e.dims[n]?t.dims[n]=parseInt(e.dims[n],10):"number"==typeof e.dims[n]?t.dims[n]=e.dims[n]:"object"==typeof e.dims[n]&&(t.dims[n]=new u.LongBits(e.dims[n].low>>>0,e.dims[n].high>>>0).toNumber())}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dims=[]),t.defaults&&(n.values=null,n.indices=null),null!=e.values&&e.hasOwnProperty("values")&&(n.values=c.onnx.TensorProto.toObject(e.values,t)),null!=e.indices&&e.hasOwnProperty("indices")&&(n.indices=c.onnx.TensorProto.toObject(e.indices,t)),e.dims&&e.dims.length){n.dims=[];for(var r=0;r<e.dims.length;++r)"number"==typeof e.dims[r]?n.dims[r]=t.longs===String?String(e.dims[r]):e.dims[r]:n.dims[r]=t.longs===String?u.Long.prototype.toString.call(e.dims[r]):t.longs===Number?new u.LongBits(e.dims[r].low>>>0,e.dims[r].high>>>0).toNumber():e.dims[r]}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.SparseTensorProto"},e}(),a.TensorShapeProto=function(){function e(e){if(this.dim=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.dim=u.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.dim&&e.dim.length)for(var n=0;n<e.dim.length;++n)c.onnx.TensorShapeProto.Dimension.encode(e.dim[n],t.uint32(10).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorShapeProto;e.pos<n;){var o=e.uint32();o>>>3==1?(r.dim&&r.dim.length||(r.dim=[]),r.dim.push(c.onnx.TensorShapeProto.Dimension.decode(e,e.uint32()))):e.skipType(7&o)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.dim&&e.hasOwnProperty("dim")){if(!Array.isArray(e.dim))return"dim: array expected";for(var t=0;t<e.dim.length;++t){var n=c.onnx.TensorShapeProto.Dimension.verify(e.dim[t]);if(n)return"dim."+n}}return null},e.fromObject=function(e){if(e instanceof c.onnx.TensorShapeProto)return e;var t=new c.onnx.TensorShapeProto;if(e.dim){if(!Array.isArray(e.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");t.dim=[];for(var n=0;n<e.dim.length;++n){if("object"!=typeof e.dim[n])throw TypeError(".onnx.TensorShapeProto.dim: object expected");t.dim[n]=c.onnx.TensorShapeProto.Dimension.fromObject(e.dim[n])}}return t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.dim=[]),e.dim&&e.dim.length){n.dim=[];for(var r=0;r<e.dim.length;++r)n.dim[r]=c.onnx.TensorShapeProto.Dimension.toObject(e.dim[r],t)}return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto"},e.Dimension=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.dimValue=null,e.prototype.dimParam=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:u.oneOfGetter(t=["dimValue","dimParam"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.dimValue&&Object.hasOwnProperty.call(e,"dimValue")&&t.uint32(8).int64(e.dimValue),null!=e.dimParam&&Object.hasOwnProperty.call(e,"dimParam")&&t.uint32(18).string(e.dimParam),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(26).string(e.denotation),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TensorShapeProto.Dimension;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.dimValue=e.int64();break;case 2:r.dimParam=e.string();break;case 3:r.denotation=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.dimValue&&e.hasOwnProperty("dimValue")&&(t.value=1,!(u.isInteger(e.dimValue)||e.dimValue&&u.isInteger(e.dimValue.low)&&u.isInteger(e.dimValue.high))))return"dimValue: integer|Long expected";if(null!=e.dimParam&&e.hasOwnProperty("dimParam")){if(1===t.value)return"value: multiple values";if(t.value=1,!u.isString(e.dimParam))return"dimParam: string expected"}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!u.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TensorShapeProto.Dimension)return e;var t=new c.onnx.TensorShapeProto.Dimension;return null!=e.dimValue&&(u.Long?(t.dimValue=u.Long.fromValue(e.dimValue)).unsigned=!1:"string"==typeof e.dimValue?t.dimValue=parseInt(e.dimValue,10):"number"==typeof e.dimValue?t.dimValue=e.dimValue:"object"==typeof e.dimValue&&(t.dimValue=new u.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber())),null!=e.dimParam&&(t.dimParam=String(e.dimParam)),null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.dimValue&&e.hasOwnProperty("dimValue")&&("number"==typeof e.dimValue?n.dimValue=t.longs===String?String(e.dimValue):e.dimValue:n.dimValue=t.longs===String?u.Long.prototype.toString.call(e.dimValue):t.longs===Number?new u.LongBits(e.dimValue.low>>>0,e.dimValue.high>>>0).toNumber():e.dimValue,t.oneofs&&(n.value="dimValue")),null!=e.dimParam&&e.hasOwnProperty("dimParam")&&(n.dimParam=e.dimParam,t.oneofs&&(n.value="dimParam")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TensorShapeProto.Dimension"},e}(),e}(),a.TypeProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}var t;return e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="",Object.defineProperty(e.prototype,"value",{get:u.oneOfGetter(t=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:u.oneOfSetter(t)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.tensorType&&Object.hasOwnProperty.call(e,"tensorType")&&c.onnx.TypeProto.Tensor.encode(e.tensorType,t.uint32(10).fork()).ldelim(),null!=e.sequenceType&&Object.hasOwnProperty.call(e,"sequenceType")&&c.onnx.TypeProto.Sequence.encode(e.sequenceType,t.uint32(34).fork()).ldelim(),null!=e.mapType&&Object.hasOwnProperty.call(e,"mapType")&&c.onnx.TypeProto.Map.encode(e.mapType,t.uint32(42).fork()).ldelim(),null!=e.denotation&&Object.hasOwnProperty.call(e,"denotation")&&t.uint32(50).string(e.denotation),null!=e.sparseTensorType&&Object.hasOwnProperty.call(e,"sparseTensorType")&&c.onnx.TypeProto.SparseTensor.encode(e.sparseTensorType,t.uint32(66).fork()).ldelim(),null!=e.optionalType&&Object.hasOwnProperty.call(e,"optionalType")&&c.onnx.TypeProto.Optional.encode(e.optionalType,t.uint32(74).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.tensorType=c.onnx.TypeProto.Tensor.decode(e,e.uint32());break;case 4:r.sequenceType=c.onnx.TypeProto.Sequence.decode(e,e.uint32());break;case 5:r.mapType=c.onnx.TypeProto.Map.decode(e,e.uint32());break;case 9:r.optionalType=c.onnx.TypeProto.Optional.decode(e,e.uint32());break;case 8:r.sparseTensorType=c.onnx.TypeProto.SparseTensor.decode(e,e.uint32());break;case 6:r.denotation=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";var t={};if(null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(t.value=1,n=c.onnx.TypeProto.Tensor.verify(e.tensorType)))return"tensorType."+n;if(null!=e.sequenceType&&e.hasOwnProperty("sequenceType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Sequence.verify(e.sequenceType))return"sequenceType."+n}if(null!=e.mapType&&e.hasOwnProperty("mapType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Map.verify(e.mapType))return"mapType."+n}if(null!=e.optionalType&&e.hasOwnProperty("optionalType")){if(1===t.value)return"value: multiple values";if(t.value=1,n=c.onnx.TypeProto.Optional.verify(e.optionalType))return"optionalType."+n}if(null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")){if(1===t.value)return"value: multiple values";var n;if(t.value=1,n=c.onnx.TypeProto.SparseTensor.verify(e.sparseTensorType))return"sparseTensorType."+n}return null!=e.denotation&&e.hasOwnProperty("denotation")&&!u.isString(e.denotation)?"denotation: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto)return e;var t=new c.onnx.TypeProto;if(null!=e.tensorType){if("object"!=typeof e.tensorType)throw TypeError(".onnx.TypeProto.tensorType: object expected");t.tensorType=c.onnx.TypeProto.Tensor.fromObject(e.tensorType)}if(null!=e.sequenceType){if("object"!=typeof e.sequenceType)throw TypeError(".onnx.TypeProto.sequenceType: object expected");t.sequenceType=c.onnx.TypeProto.Sequence.fromObject(e.sequenceType)}if(null!=e.mapType){if("object"!=typeof e.mapType)throw TypeError(".onnx.TypeProto.mapType: object expected");t.mapType=c.onnx.TypeProto.Map.fromObject(e.mapType)}if(null!=e.optionalType){if("object"!=typeof e.optionalType)throw TypeError(".onnx.TypeProto.optionalType: object expected");t.optionalType=c.onnx.TypeProto.Optional.fromObject(e.optionalType)}if(null!=e.sparseTensorType){if("object"!=typeof e.sparseTensorType)throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");t.sparseTensorType=c.onnx.TypeProto.SparseTensor.fromObject(e.sparseTensorType)}return null!=e.denotation&&(t.denotation=String(e.denotation)),t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.denotation=""),null!=e.tensorType&&e.hasOwnProperty("tensorType")&&(n.tensorType=c.onnx.TypeProto.Tensor.toObject(e.tensorType,t),t.oneofs&&(n.value="tensorType")),null!=e.sequenceType&&e.hasOwnProperty("sequenceType")&&(n.sequenceType=c.onnx.TypeProto.Sequence.toObject(e.sequenceType,t),t.oneofs&&(n.value="sequenceType")),null!=e.mapType&&e.hasOwnProperty("mapType")&&(n.mapType=c.onnx.TypeProto.Map.toObject(e.mapType,t),t.oneofs&&(n.value="mapType")),null!=e.denotation&&e.hasOwnProperty("denotation")&&(n.denotation=e.denotation),null!=e.sparseTensorType&&e.hasOwnProperty("sparseTensorType")&&(n.sparseTensorType=c.onnx.TypeProto.SparseTensor.toObject(e.sparseTensorType,t),t.oneofs&&(n.value="sparseTensorType")),null!=e.optionalType&&e.hasOwnProperty("optionalType")&&(n.optionalType=c.onnx.TypeProto.Optional.toObject(e.optionalType,t),t.oneofs&&(n.value="optionalType")),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto"},e.Tensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&c.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Tensor;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=c.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!u.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=c.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Tensor)return e;var t=new c.onnx.TypeProto.Tensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");t.shape=c.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=c.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Tensor"},e}(),e.Sequence=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&c.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Sequence;e.pos<n;){var o=e.uint32();o>>>3==1?r.elemType=c.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&o)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=c.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Sequence)return e;var t=new c.onnx.TypeProto.Sequence;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");t.elemType=c.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=c.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Sequence"},e}(),e.Map=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.keyType=0,e.prototype.valueType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.keyType&&Object.hasOwnProperty.call(e,"keyType")&&t.uint32(8).int32(e.keyType),null!=e.valueType&&Object.hasOwnProperty.call(e,"valueType")&&c.onnx.TypeProto.encode(e.valueType,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Map;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.keyType=e.int32();break;case 2:r.valueType=c.onnx.TypeProto.decode(e,e.uint32());break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.keyType&&e.hasOwnProperty("keyType")&&!u.isInteger(e.keyType))return"keyType: integer expected";if(null!=e.valueType&&e.hasOwnProperty("valueType")){var t=c.onnx.TypeProto.verify(e.valueType);if(t)return"valueType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Map)return e;var t=new c.onnx.TypeProto.Map;if(null!=e.keyType&&(t.keyType=0|e.keyType),null!=e.valueType){if("object"!=typeof e.valueType)throw TypeError(".onnx.TypeProto.Map.valueType: object expected");t.valueType=c.onnx.TypeProto.fromObject(e.valueType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.keyType=0,n.valueType=null),null!=e.keyType&&e.hasOwnProperty("keyType")&&(n.keyType=e.keyType),null!=e.valueType&&e.hasOwnProperty("valueType")&&(n.valueType=c.onnx.TypeProto.toObject(e.valueType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Map"},e}(),e.Optional=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&c.onnx.TypeProto.encode(e.elemType,t.uint32(10).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.Optional;e.pos<n;){var o=e.uint32();o>>>3==1?r.elemType=c.onnx.TypeProto.decode(e,e.uint32()):e.skipType(7&o)}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")){var t=c.onnx.TypeProto.verify(e.elemType);if(t)return"elemType."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.Optional)return e;var t=new c.onnx.TypeProto.Optional;if(null!=e.elemType){if("object"!=typeof e.elemType)throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");t.elemType=c.onnx.TypeProto.fromObject(e.elemType)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=c.onnx.TypeProto.toObject(e.elemType,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.Optional"},e}(),e.SparseTensor=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.elemType=0,e.prototype.shape=null,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.elemType&&Object.hasOwnProperty.call(e,"elemType")&&t.uint32(8).int32(e.elemType),null!=e.shape&&Object.hasOwnProperty.call(e,"shape")&&c.onnx.TensorShapeProto.encode(e.shape,t.uint32(18).fork()).ldelim(),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.TypeProto.SparseTensor;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.elemType=e.int32();break;case 2:r.shape=c.onnx.TensorShapeProto.decode(e,e.uint32());break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.elemType&&e.hasOwnProperty("elemType")&&!u.isInteger(e.elemType))return"elemType: integer expected";if(null!=e.shape&&e.hasOwnProperty("shape")){var t=c.onnx.TensorShapeProto.verify(e.shape);if(t)return"shape."+t}return null},e.fromObject=function(e){if(e instanceof c.onnx.TypeProto.SparseTensor)return e;var t=new c.onnx.TypeProto.SparseTensor;if(null!=e.elemType&&(t.elemType=0|e.elemType),null!=e.shape){if("object"!=typeof e.shape)throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");t.shape=c.onnx.TensorShapeProto.fromObject(e.shape)}return t},e.toObject=function(e,t){t||(t={});var n={};return t.defaults&&(n.elemType=0,n.shape=null),null!=e.elemType&&e.hasOwnProperty("elemType")&&(n.elemType=e.elemType),null!=e.shape&&e.hasOwnProperty("shape")&&(n.shape=c.onnx.TensorShapeProto.toObject(e.shape,t)),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.TypeProto.SparseTensor"},e}(),e}(),a.OperatorSetIdProto=function(){function e(e){if(e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.domain="",e.prototype.version=u.Long?u.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=l.create()),null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(10).string(e.domain),null!=e.version&&Object.hasOwnProperty.call(e,"version")&&t.uint32(16).int64(e.version),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.OperatorSetIdProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.domain=e.string();break;case 2:r.version=e.int64();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!=typeof e||null===e?"object expected":null!=e.domain&&e.hasOwnProperty("domain")&&!u.isString(e.domain)?"domain: string expected":null!=e.version&&e.hasOwnProperty("version")&&!(u.isInteger(e.version)||e.version&&u.isInteger(e.version.low)&&u.isInteger(e.version.high))?"version: integer|Long expected":null},e.fromObject=function(e){if(e instanceof c.onnx.OperatorSetIdProto)return e;var t=new c.onnx.OperatorSetIdProto;return null!=e.domain&&(t.domain=String(e.domain)),null!=e.version&&(u.Long?(t.version=u.Long.fromValue(e.version)).unsigned=!1:"string"==typeof e.version?t.version=parseInt(e.version,10):"number"==typeof e.version?t.version=e.version:"object"==typeof e.version&&(t.version=new u.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var n={};if(t.defaults)if(n.domain="",u.Long){var r=new u.Long(0,0,!1);n.version=t.longs===String?r.toString():t.longs===Number?r.toNumber():r}else n.version=t.longs===String?"0":0;return null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),null!=e.version&&e.hasOwnProperty("version")&&("number"==typeof e.version?n.version=t.longs===String?String(e.version):e.version:n.version=t.longs===String?u.Long.prototype.toString.call(e.version):t.longs===Number?new u.LongBits(e.version.low>>>0,e.version.high>>>0).toNumber():e.version),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.OperatorSetIdProto"},e}(),a.OperatorStatus=function(){var e={},t=Object.create(e);return t[e[0]="EXPERIMENTAL"]=0,t[e[1]="STABLE"]=1,t}(),a.FunctionProto=function(){function e(e){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],e)for(var t=Object.keys(e),n=0;n<t.length;++n)null!=e[t[n]]&&(this[t[n]]=e[t[n]])}return e.prototype.name="",e.prototype.input=u.emptyArray,e.prototype.output=u.emptyArray,e.prototype.attribute=u.emptyArray,e.prototype.attributeProto=u.emptyArray,e.prototype.node=u.emptyArray,e.prototype.docString="",e.prototype.opsetImport=u.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=l.create()),null!=e.name&&Object.hasOwnProperty.call(e,"name")&&t.uint32(10).string(e.name),null!=e.input&&e.input.length)for(var n=0;n<e.input.length;++n)t.uint32(34).string(e.input[n]);if(null!=e.output&&e.output.length)for(n=0;n<e.output.length;++n)t.uint32(42).string(e.output[n]);if(null!=e.attribute&&e.attribute.length)for(n=0;n<e.attribute.length;++n)t.uint32(50).string(e.attribute[n]);if(null!=e.node&&e.node.length)for(n=0;n<e.node.length;++n)c.onnx.NodeProto.encode(e.node[n],t.uint32(58).fork()).ldelim();if(null!=e.docString&&Object.hasOwnProperty.call(e,"docString")&&t.uint32(66).string(e.docString),null!=e.opsetImport&&e.opsetImport.length)for(n=0;n<e.opsetImport.length;++n)c.onnx.OperatorSetIdProto.encode(e.opsetImport[n],t.uint32(74).fork()).ldelim();if(null!=e.domain&&Object.hasOwnProperty.call(e,"domain")&&t.uint32(82).string(e.domain),null!=e.attributeProto&&e.attributeProto.length)for(n=0;n<e.attributeProto.length;++n)c.onnx.AttributeProto.encode(e.attributeProto[n],t.uint32(90).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof s||(e=s.create(e));for(var n=void 0===t?e.len:e.pos+t,r=new c.onnx.FunctionProto;e.pos<n;){var o=e.uint32();switch(o>>>3){case 1:r.name=e.string();break;case 4:r.input&&r.input.length||(r.input=[]),r.input.push(e.string());break;case 5:r.output&&r.output.length||(r.output=[]),r.output.push(e.string());break;case 6:r.attribute&&r.attribute.length||(r.attribute=[]),r.attribute.push(e.string());break;case 11:r.attributeProto&&r.attributeProto.length||(r.attributeProto=[]),r.attributeProto.push(c.onnx.AttributeProto.decode(e,e.uint32()));break;case 7:r.node&&r.node.length||(r.node=[]),r.node.push(c.onnx.NodeProto.decode(e,e.uint32()));break;case 8:r.docString=e.string();break;case 9:r.opsetImport&&r.opsetImport.length||(r.opsetImport=[]),r.opsetImport.push(c.onnx.OperatorSetIdProto.decode(e,e.uint32()));break;case 10:r.domain=e.string();break;default:e.skipType(7&o)}}return r},e.decodeDelimited=function(e){return e instanceof s||(e=new s(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!=typeof e||null===e)return"object expected";if(null!=e.name&&e.hasOwnProperty("name")&&!u.isString(e.name))return"name: string expected";if(null!=e.input&&e.hasOwnProperty("input")){if(!Array.isArray(e.input))return"input: array expected";for(var t=0;t<e.input.length;++t)if(!u.isString(e.input[t]))return"input: string[] expected"}if(null!=e.output&&e.hasOwnProperty("output")){if(!Array.isArray(e.output))return"output: array expected";for(t=0;t<e.output.length;++t)if(!u.isString(e.output[t]))return"output: string[] expected"}if(null!=e.attribute&&e.hasOwnProperty("attribute")){if(!Array.isArray(e.attribute))return"attribute: array expected";for(t=0;t<e.attribute.length;++t)if(!u.isString(e.attribute[t]))return"attribute: string[] expected"}if(null!=e.attributeProto&&e.hasOwnProperty("attributeProto")){if(!Array.isArray(e.attributeProto))return"attributeProto: array expected";for(t=0;t<e.attributeProto.length;++t)if(n=c.onnx.AttributeProto.verify(e.attributeProto[t]))return"attributeProto."+n}if(null!=e.node&&e.hasOwnProperty("node")){if(!Array.isArray(e.node))return"node: array expected";for(t=0;t<e.node.length;++t)if(n=c.onnx.NodeProto.verify(e.node[t]))return"node."+n}if(null!=e.docString&&e.hasOwnProperty("docString")&&!u.isString(e.docString))return"docString: string expected";if(null!=e.opsetImport&&e.hasOwnProperty("opsetImport")){if(!Array.isArray(e.opsetImport))return"opsetImport: array expected";for(t=0;t<e.opsetImport.length;++t){var n;if(n=c.onnx.OperatorSetIdProto.verify(e.opsetImport[t]))return"opsetImport."+n}}return null!=e.domain&&e.hasOwnProperty("domain")&&!u.isString(e.domain)?"domain: string expected":null},e.fromObject=function(e){if(e instanceof c.onnx.FunctionProto)return e;var t=new c.onnx.FunctionProto;if(null!=e.name&&(t.name=String(e.name)),e.input){if(!Array.isArray(e.input))throw TypeError(".onnx.FunctionProto.input: array expected");t.input=[];for(var n=0;n<e.input.length;++n)t.input[n]=String(e.input[n])}if(e.output){if(!Array.isArray(e.output))throw TypeError(".onnx.FunctionProto.output: array expected");for(t.output=[],n=0;n<e.output.length;++n)t.output[n]=String(e.output[n])}if(e.attribute){if(!Array.isArray(e.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");for(t.attribute=[],n=0;n<e.attribute.length;++n)t.attribute[n]=String(e.attribute[n])}if(e.attributeProto){if(!Array.isArray(e.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");for(t.attributeProto=[],n=0;n<e.attributeProto.length;++n){if("object"!=typeof e.attributeProto[n])throw TypeError(".onnx.FunctionProto.attributeProto: object expected");t.attributeProto[n]=c.onnx.AttributeProto.fromObject(e.attributeProto[n])}}if(e.node){if(!Array.isArray(e.node))throw TypeError(".onnx.FunctionProto.node: array expected");for(t.node=[],n=0;n<e.node.length;++n){if("object"!=typeof e.node[n])throw TypeError(".onnx.FunctionProto.node: object expected");t.node[n]=c.onnx.NodeProto.fromObject(e.node[n])}}if(null!=e.docString&&(t.docString=String(e.docString)),e.opsetImport){if(!Array.isArray(e.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");for(t.opsetImport=[],n=0;n<e.opsetImport.length;++n){if("object"!=typeof e.opsetImport[n])throw TypeError(".onnx.FunctionProto.opsetImport: object expected");t.opsetImport[n]=c.onnx.OperatorSetIdProto.fromObject(e.opsetImport[n])}}return null!=e.domain&&(t.domain=String(e.domain)),t},e.toObject=function(e,t){t||(t={});var n={};if((t.arrays||t.defaults)&&(n.input=[],n.output=[],n.attribute=[],n.node=[],n.opsetImport=[],n.attributeProto=[]),t.defaults&&(n.name="",n.docString="",n.domain=""),null!=e.name&&e.hasOwnProperty("name")&&(n.name=e.name),e.input&&e.input.length){n.input=[];for(var r=0;r<e.input.length;++r)n.input[r]=e.input[r]}if(e.output&&e.output.length)for(n.output=[],r=0;r<e.output.length;++r)n.output[r]=e.output[r];if(e.attribute&&e.attribute.length)for(n.attribute=[],r=0;r<e.attribute.length;++r)n.attribute[r]=e.attribute[r];if(e.node&&e.node.length)for(n.node=[],r=0;r<e.node.length;++r)n.node[r]=c.onnx.NodeProto.toObject(e.node[r],t);if(null!=e.docString&&e.hasOwnProperty("docString")&&(n.docString=e.docString),e.opsetImport&&e.opsetImport.length)for(n.opsetImport=[],r=0;r<e.opsetImport.length;++r)n.opsetImport[r]=c.onnx.OperatorSetIdProto.toObject(e.opsetImport[r],t);if(null!=e.domain&&e.hasOwnProperty("domain")&&(n.domain=e.domain),e.attributeProto&&e.attributeProto.length)for(n.attributeProto=[],r=0;r<e.attributeProto.length;++r)n.attributeProto[r]=c.onnx.AttributeProto.toObject(e.attributeProto[r],t);return n},e.prototype.toJSON=function(){return this.constructor.toObject(this,i.util.toJSONOptions)},e.getTypeUrl=function(e){return void 0===e&&(e="type.googleapis.com"),e+"/onnx.FunctionProto"},e}(),a),e.exports=c},5711:(e,t,n)=>{var r,o=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e={}){function t(){return I.buffer!=F.buffer&&N(),F}function o(){return I.buffer!=F.buffer&&N(),R}function a(){return I.buffer!=F.buffer&&N(),z}function i(){return I.buffer!=F.buffer&&N(),L}function s(){return I.buffer!=F.buffer&&N(),j}var l,u,c=e;c.ready=new Promise(((e,t)=>{l=e,u=t})),c.jsepInit=(e,t,n,r,o,a,i,s)=>{c.Jb=e,c.pb=t,c.rb=n,c.bb=r,c.qb=o,c.xa=a,c.sb=i,c.tb=s,c.jsepOnRunStart=e=>{if(c.jsepRunPromise=new Promise((e=>{c.ub=e})),c.Va)throw Error("Session already started");c.Va={sessionId:e,errors:[]}},c.jsepOnRunEnd=e=>{if(c.Va.sessionId!==e)throw Error("Session ID mismatch");const t=c.Va.errors;return c.Va=null,0===t.length?Promise.resolve():new Promise(((e,n)=>{Promise.all(t).then((t=>{0<(t=t.filter((e=>e))).length?n(Error(t.join("\n"))):e()}),(e=>{n(e)}))}))}};var p,d,h,f=Object.assign({},c),g="./this.program",_=(e,t)=>{throw t},m="object"==typeof window,b="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=c.ENVIRONMENT_IS_PTHREAD||!1,x="";function v(e){return c.locateFile?c.locateFile(e,x):x+e}if(y){var T=n(1384),k=n(908);let t;x=b?k.dirname(x)+"/":__dirname+"/",p=(e,t)=>(e=e.startsWith("file://")?new URL(e):k.normalize(e),T.readFileSync(e,t?void 0:"utf8")),h=e=>((e=p(e,!0)).buffer||(e=new Uint8Array(e)),e),d=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):k.normalize(e),T.readFile(e,r?void 0:"utf8",((e,o)=>{e?n(e):t(r?o.buffer:o)}))},!c.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),_=(e,t)=>{throw process.exitCode=e,t},c.inspect=()=>"[Emscripten Module object]";try{t=n(9925)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}__webpack_require__.g.Worker=t.Worker}else(m||b)&&(b?x=self.location.href:"undefined"!=typeof document&&document.currentScript&&(x=document.currentScript.src),r&&(x=r),x=0!==x.indexOf("blob:")?x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):"",y||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},b&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),d=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(__webpack_require__.g.performance=n(6953).performance);var S=console.log.bind(console),$=console.error.bind(console);y&&(S=(...e)=>T.writeSync(1,e.join(" ")+"\n"),$=(...e)=>T.writeSync(2,e.join(" ")+"\n"));var P,A=c.print||S,O=c.printErr||$;Object.assign(c,f),f=null,c.thisProgram&&(g=c.thisProgram),c.quit&&(_=c.quit),c.wasmBinary&&(P=c.wasmBinary);var M=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var I,C,E,D,F,R,z,L,j,B=!1;function N(){var e=I.buffer;c.HEAP8=F=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=R=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=L=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=j=new Float64Array(e)}var G=c.INITIAL_MEMORY||16777216;if(5242880<=G||ee("INITIAL_MEMORY should be larger than STACK_SIZE, was "+G+"! (STACK_SIZE=5242880)"),w)I=c.wasmMemory;else if(c.wasmMemory)I=c.wasmMemory;else if(!((I=new WebAssembly.Memory({initial:G/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw O("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&O("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");N(),G=I.buffer.byteLength;var V=[],U=[],W=[],q=0;function H(){return M||0<q}var K,X=0,Y=null,Q=null;function J(){X++,c.monitorRunDependencies&&c.monitorRunDependencies(X)}function Z(){if(X--,c.monitorRunDependencies&&c.monitorRunDependencies(X),0==X&&(null!==Y&&(clearInterval(Y),Y=null),Q)){var e=Q;Q=null,e()}}function ee(e){throw c.onAbort&&c.onAbort(e),O(e="Aborted("+e+")"),B=!0,D=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function te(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){if(e==K&&P)return new Uint8Array(P);if(h)return h(e);throw"both async and sync fetching of the wasm failed"}function re(e,t,n){return function(e){if(!P&&(m||b)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>ne(e)));if(d)return new Promise(((t,n)=>{d(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>ne(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{O("failed to asynchronously prepare wasm: "+e),ee(e)}))}te(K="ort-wasm-simd-threaded.wasm")||(K=v(K));var oe,ae={882844:e=>{c.ub?.(e)},882885:e=>c.pb(e),882918:e=>c.rb(e),882950:(e,t,n)=>{c.bb(e,t,n,!0)},882989:(e,t,n)=>{c.bb(e,t,n)},883022:e=>{c.xa("Abs",e,void 0)},883073:e=>{c.xa("Neg",e,void 0)},883124:e=>{c.xa("Floor",e,void 0)},883177:e=>{c.xa("Ceil",e,void 0)},883229:e=>{c.xa("Reciprocal",e,void 0)},883287:e=>{c.xa("Sqrt",e,void 0)},883339:e=>{c.xa("Exp",e,void 0)},883390:e=>{c.xa("Erf",e,void 0)},883441:e=>{c.xa("Sigmoid",e,void 0)},883496:e=>{c.xa("Log",e,void 0)},883547:e=>{c.xa("Sin",e,void 0)},883598:e=>{c.xa("Cos",e,void 0)},883649:e=>{c.xa("Tan",e,void 0)},883700:e=>{c.xa("Asin",e,void 0)},883752:e=>{c.xa("Acos",e,void 0)},883804:e=>{c.xa("Atan",e,void 0)},883856:e=>{c.xa("Sinh",e,void 0)},883908:e=>{c.xa("Cosh",e,void 0)},883960:e=>{c.xa("Asinh",e,void 0)},884013:e=>{c.xa("Acosh",e,void 0)},884066:e=>{c.xa("Atanh",e,void 0)},884119:e=>{c.xa("Tanh",e,void 0)},884171:e=>{c.xa("Not",e,void 0)},884222:(e,t,n)=>{c.xa("ClipV10",e,{min:t,max:n})},884294:e=>{c.xa("Clip",e,void 0)},884346:(e,t)=>{c.xa("Elu",e,{alpha:t})},884404:e=>{c.xa("Relu",e,void 0)},884456:(e,t)=>{c.xa("LeakyRelu",e,{alpha:t})},884520:(e,t)=>{c.xa("ThresholdedRelu",e,{alpha:t})},884590:(e,t)=>{c.xa("Cast",e,{to:t})},884648:e=>{c.xa("Add",e,void 0)},884699:e=>{c.xa("Sub",e,void 0)},884750:e=>{c.xa("Mul",e,void 0)},884801:e=>{c.xa("Div",e,void 0)},884852:e=>{c.xa("Pow",e,void 0)},884903:e=>{c.xa("Equal",e,void 0)},884956:e=>{c.xa("Greater",e,void 0)},885011:e=>{c.xa("GreaterOrEqual",e,void 0)},885073:e=>{c.xa("Less",e,void 0)},885125:e=>{c.xa("LessOrEqual",e,void 0)},885184:(e,t,n,r,o)=>{c.xa("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},885348:(e,t,n,r,o)=>{c.xa("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},885511:(e,t,n,r,o)=>{c.xa("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},885674:(e,t,n,r,o)=>{c.xa("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},885838:(e,t,n,r,o)=>{c.xa("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886001:(e,t,n,r,o)=>{c.xa("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886163:(e,t,n,r,o)=>{c.xa("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886325:(e,t,n,r,o)=>{c.xa("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886491:(e,t,n,r,o)=>{c.xa("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886660:(e,t,n,r,o)=>{c.xa("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},886829:(e,t,n)=>{c.xa("Transpose",e,{perm:t?Array.from(a().subarray(n>>>0,n+t>>>0)):[]})},886942:(e,n,r,o,a,i,s,l,u,p)=>{c.xa("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:o,kernel_shape:[a],pads:[i,s],strides:[l],w_is_const:()=>!!t()[p>>>0]})},887170:(e,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,o],group:a,kernel_shape:[i,s],pads:[l,u,p,d],strides:[h,f],w_is_const:()=>!!t()[_>>>0]})},887429:(e,n,r,o,a,i,s,l,u,p)=>{c.xa("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:o,kernel_shape:[a],pads:[i,s],strides:[l],w_is_const:()=>!!t()[p>>>0]})},887657:(e,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("Conv",e,{format:g?"NHWC":"NCHW",auto_pad:n,dilations:[r,o],group:a,kernel_shape:[i,s],pads:[l,u,p,d],strides:[h,f],w_is_const:()=>!!t()[_>>>0]})},887916:(e,n,r,o,i,s,l,u,p,d,h,f,g,_)=>{c.xa("ConvTranspose",e,{format:p?"NHWC":"NCHW",autoPad:n,dilations:[r],group:o,kernel_shape:[i],pads:[s,l],strides:[u],wIsConst:()=>!!t()[d>>>0],outputPadding:h?Array.from(a().subarray(f>>>0,f+h>>>0)):[],outputShape:g?Array.from(a().subarray(_>>>0,_+g>>>0)):[]})},888296:(e,n,r,o,i,s,l,u,p,d,h,f,g)=>{c.xa("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,r+2>>>0)),group:o,kernelShape:Array.from(a().subarray(i>>>0,i+2>>>0)),pads:Array.from(a().subarray(s>>>0,s+4>>>0)),strides:Array.from(a().subarray(l>>>0,l+2>>>0)),wIsConst:()=>!!t()[p>>>0],outputPadding:0<d?Array.from(a().subarray(h>>>0,h+d>>>0)):[],outputShape:0<f?Array.from(a().subarray(g>>>0,g+f>>>0)):[]})},888819:(e,n,r,o,i,s,l,u,p,d,h,f,g,_)=>{c.xa("ConvTranspose",e,{format:p?"NHWC":"NCHW",autoPad:n,dilations:[r],group:o,kernel_shape:[i],pads:[s,l],strides:[u],wIsConst:()=>!!t()[d>>>0],outputPadding:h?Array.from(a().subarray(f>>>0,f+h>>>0)):[],outputShape:g?Array.from(a().subarray(_>>>0,_+g>>>0)):[]})},889199:(e,n,r,o,i,s,l,u,p,d,h,f,g)=>{c.xa("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,r+2>>>0)),group:o,kernelShape:Array.from(a().subarray(i>>>0,i+2>>>0)),pads:Array.from(a().subarray(s>>>0,s+4>>>0)),strides:Array.from(a().subarray(l>>>0,l+2>>>0)),wIsConst:()=>!!t()[p>>>0],outputPadding:0<d?Array.from(a().subarray(h>>>0,h+d>>>0)):[],outputShape:0<f?Array.from(a().subarray(g>>>0,g+f>>>0)):[]})},889722:(e,t)=>{c.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},889813:(e,t,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("AveragePool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,i],kernel_shape:[s,l],pads:[u,p,d,h],strides:[f,g]})},890097:(e,t)=>{c.xa("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},890188:(e,t,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("AveragePool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,i],kernel_shape:[s,l],pads:[u,p,d,h],strides:[f,g]})},890472:(e,t)=>{c.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},890559:(e,t,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("MaxPool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,i],kernel_shape:[s,l],pads:[u,p,d,h],strides:[f,g]})},890839:(e,t)=>{c.xa("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},890926:(e,t,n,r,o,a,i,s,l,u,p,d,h,f,g,_)=>{c.xa("MaxPool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[a,i],kernel_shape:[s,l],pads:[u,p,d,h],strides:[f,g]})},891206:(e,t,n,r,o)=>{c.xa("Gemm",e,{alpha:t,beta:n,transA:r,transB:o})},891310:e=>{c.xa("MatMul",e,void 0)},891364:(e,t,n,r)=>{c.xa("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},891472:(e,t,n,r)=>{c.xa("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},891580:(e,t)=>{c.xa("Softmax",e,{axis:t})},891643:(e,t)=>{c.xa("Concat",e,{axis:t})},891703:(e,t,n,r,o)=>{c.xa("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[]})},891848:e=>{c.xa("Expand",e,void 0)},891902:(e,t)=>{c.xa("Gather",e,{axis:Number(t)})},891973:(e,t)=>{c.xa("GatherElements",e,{axis:Number(t)})},892052:(e,t,n,r,o,i,s,l,u,p,d)=>{c.xa("Resize",e,{antialias:t,axes:n?Array.from(a().subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:de(o),cubicCoeffA:i,excludeOutside:s,extrapolationValue:l,keepAspectRatioPolicy:de(u),mode:de(p),nearestMode:de(d)})},892403:(e,t,n,r,o,i,s)=>{c.xa("Slice",e,{starts:t?Array.from(a().subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(a().subarray(o>>>0,o+r>>>0)):[],axes:i?Array.from(a().subarray(s>>>0,s+i>>>0)):[]})},892634:e=>{c.xa("Tile",e,void 0)},892686:(e,t,n)=>{c.xa("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},892793:(e,t,n)=>{c.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},892907:(e,t,n)=>{c.xa("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},893021:e=>{c.xa("Gelu",e,void 0)},893073:(e,t)=>{c.xa("SkipLayerNormalization",e,{epsilon:t})},893154:e=>{c.sb(e)},893188:(e,t)=>c.tb(e,t,c.Va)};function ie(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function se(e){e.terminate(),e.onmessage=()=>{}}function le(e){(e=ge.Ja[e])||ee(),ge.yb(e)}function ue(e){var t=ge.mb();if(!t)return 6;ge.Ra.push(t),ge.Ja[e.Qa]=t,t.Qa=e.Qa;var n={cmd:"run",start_routine:e.zb,arg:e.kb,pthread_ptr:e.Qa};return y&&t.unref(),t.postMessage(n,e.Fb),0}var ce="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,pe=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&ce)return ce.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var o=e[t++];if(128&o){var a=63&e[t++];if(192==(224&o))r+=String.fromCharCode((31&o)<<6|a);else{var i=63&e[t++];65536>(o=224==(240&o)?(15&o)<<12|a<<6|i:(7&o)<<18|a<<12|i<<6|63&e[t++])?r+=String.fromCharCode(o):(o-=65536,r+=String.fromCharCode(55296|o>>10,56320|1023&o))}}else r+=String.fromCharCode(o)}return r},de=(e,t)=>(e>>>=0)?pe(o(),e,t):"";function he(e){if(w)return Xe(1,1,e);D=e,H()||(ge.Ab(),c.onExit&&c.onExit(e),B=!0),_(e,new ie(e))}var fe=e=>{if(D=e,w)throw me(e),"unwind";he(e)},ge={Ua:[],Ra:[],fb:[],Ja:{},Ya:function(){w?ge.ob():ge.nb()},nb:function(){V.unshift((()=>{J(),ge.vb((()=>Z()))}))},ob:function(){ge.receiveObjectTransfer=ge.xb,ge.threadInitTLS=ge.eb,ge.setExitStatus=ge.cb,M=!1},cb:function(e){D=e},Lb:["$terminateWorker"],Ab:function(){for(var e of ge.Ra)se(e);for(e of ge.Ua)se(e);ge.Ua=[],ge.Ra=[],ge.Ja=[]},yb:function(e){var t=e.Qa;delete ge.Ja[t],ge.Ua.push(e),ge.Ra.splice(ge.Ra.indexOf(e),1),e.Qa=0,Ot(t)},xb:function(){},eb:function(){ge.fb.forEach((e=>e()))},wb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=Tt()){var o=ge.Ja[n.Kb];o?o.postMessage(n,n.transferList):O('Internal error! Worker sent a message "'+r+'" to target pthread '+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===r?je():"spawnThread"===r?ue(n):"cleanupThread"===r?le(n.thread):"killThread"===r?(n=n.thread,r=ge.Ja[n],delete ge.Ja[n],se(r),Ot(n),ge.Ra.splice(ge.Ra.indexOf(r),1),r.Qa=0):"cancelThread"===r?ge.Ja[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?c[n.handler](...n.args):r&&O("worker sent an unknown command "+r)},e.onerror=e=>{throw O("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var n,o=[];for(n of["onExit","onAbort","print","printErr"])c.hasOwnProperty(n)&&o.push(n);e.postMessage({cmd:"load",handlers:o,urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:I,wasmModule:E})})),vb:function(e){e()},jb:function(){var e=v("ort-wasm-simd-threaded.worker.js");e=new Worker(e),ge.Ua.push(e)},mb:function(){return 0==ge.Ua.length&&(ge.jb(),ge.wb(ge.Ua[0])),ge.Ua.pop()}};c.PThread=ge;var _e=e=>{for(;0<e.length;)e.shift()(c)};function me(e){if(w)return Xe(2,0,e);fe(e)}function be(e){this.ab=e-24,this.ib=function(e){i()[this.ab+4>>2>>>0]=e},this.hb=function(e){i()[this.ab+8>>2>>>0]=e},this.Ya=function(e,t){this.gb(),this.ib(e),this.hb(t)},this.gb=function(){i()[this.ab+16>>2>>>0]=0}}function ye(e,t,n,r){return w?Xe(3,1,e,t,n,r):we(e,t,n,r)}function we(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,"undefined"==typeof SharedArrayBuffer)return O("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var o=[];return w&&0===o.length?ye(e,t,n,r):(e={zb:n,Qa:e,kb:r,Fb:o},w?(e.Hb="spawnThread",postMessage(e,o),0):ue(e))}function xe(e,t,n){return w?Xe(4,1,e,t,n):0}function ve(e,t){if(w)return Xe(5,1,e,t)}c.establishStackSpace=function(){var e=Tt(),t=a()[e+52>>2>>>0];e=a()[e+56>>2>>>0],Et(t,t-e),Ft(t)},c.invokeEntryPoint=function(e,t){e=zt.apply(null,[e,t]),H()?ge.cb(e):Mt(e)};var Te=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ke=(e,t,n,r)=>{if(!(0<r))return 0;var o=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-o},Se=(e,t,n)=>ke(e,o(),t,n);function $e(e,t){if(w)return Xe(6,1,e,t)}function Pe(e,t,n){if(w)return Xe(7,1,e,t,n)}function Ae(e,t,n){return w?Xe(8,1,e,t,n):0}function Oe(e,t){if(w)return Xe(9,1,e,t)}function Me(e,t,n){if(w)return Xe(10,1,e,t,n)}function Ie(e,t,n,r){if(w)return Xe(11,1,e,t,n,r)}function Ce(e,t,n,r){if(w)return Xe(12,1,e,t,n,r)}function Ee(e,t,n,r){if(w)return Xe(13,1,e,t,n,r)}function De(e){if(w)return Xe(14,1,e)}function Fe(e,t){if(w)return Xe(15,1,e,t)}function Re(e,t,n){if(w)return Xe(16,1,e,t,n)}var ze=e=>{if(!B)try{if(e(),!H())try{w?Mt(D):fe(D)}catch(e){e instanceof ie||"unwind"==e||_(1,e)}}catch(e){e instanceof ie||"unwind"==e||_(1,e)}};function Le(e){e>>>=0,"function"==typeof Atomics.Gb&&(Atomics.Gb(a(),e>>2,e).value.then(je),e+=128,Atomics.store(a(),e>>2,1))}function je(){var e=Tt();e&&(Le(e),ze((()=>It())))}c.__emscripten_thread_mailbox_await=Le,c.checkMailbox=je;var Be=e=>0==e%4&&(0!=e%100||0==e%400),Ne=[0,31,60,91,121,152,182,213,244,274,305,335],Ge=[0,31,59,90,120,151,181,212,243,273,304,334];function Ve(e,t,n,r,o,a,i,s){return w?Xe(17,1,e,t,n,r,o,a,i,s):-52}function Ue(e,t,n,r,o,a,i){if(w)return Xe(18,1,e,t,n,r,o,a,i)}var We=e=>{var t=Te(e)+1,n=kt(t);return n&&Se(e,n,t),n},qe=[],He=(e,t)=>{var n;for(qe.length=0,t>>=2;n=o()[e++>>>0];)t+=105!=n&t,qe.push(105==n?a()[t>>>0]:s()[t++>>>1]),++t;return qe},Ke=e=>{var t=Dt();return e=e(),Ft(t),e};function Xe(e,t){var n=arguments.length-2,r=arguments;return Ke((()=>{for(var o=Rt(8*n),a=o>>3,i=0;i<n;i++){var l=r[2+i];s()[a+i>>>0]=l}return At(e,n,o,t)}))}var Ye,Qe=[],Je={},Ze=()=>{if(!Ye){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"};for(e in Je)void 0===Je[e]?delete t[e]:t[e]=Je[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Ye=n}return Ye};function et(e,n){if(w)return Xe(19,1,e,n);e>>>=0,n>>>=0;var r=0;return Ze().forEach((function(o,a){var s=n+r;for(a=i()[e+4*a>>2>>>0]=s,s=0;s<o.length;++s)t()[a++>>0>>>0]=o.charCodeAt(s);t()[a>>0>>>0]=0,r+=o.length+1})),0}function tt(e,t){if(w)return Xe(20,1,e,t);e>>>=0,t>>>=0;var n=Ze();i()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2>>>0]=r,0}function nt(e){return w?Xe(21,1,e):52}function rt(e,t,n,r){return w?Xe(22,1,e,t,n,r):52}function ot(e,t,n,r,o){return w?Xe(23,1,e,t,n,r,o):70}var at=[null,[],[]];function it(e,t,n,r){if(w)return Xe(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var a=0,s=0;s<n;s++){var l=i()[t>>2>>>0],u=i()[t+4>>2>>>0];t+=8;for(var c=0;c<u;c++){var p=o()[l+c>>>0],d=at[e];0===p||10===p?((1===e?A:O)(pe(d,0)),d.length=0):d.push(p)}a+=u}return i()[r>>2>>>0]=a,0}var st=[31,29,31,30,31,30,31,31,30,31,30,31],lt=[31,28,31,30,31,30,31,31,30,31,30,31],ut=(e,n)=>{t().set(e,n>>>0)};function ct(e,t,n,r){function o(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function i(e,t){return o(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function l(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Sa;for(e=new Date(new Date(e.Ta+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Be(e.getFullYear())?st:lt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=l(new Date(e.getFullYear(),0,4)),n=l(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;var c=a()[r+40>>2>>>0];for(var p in r={Db:a()[r>>2>>>0],Cb:a()[r+4>>2>>>0],Wa:a()[r+8>>2>>>0],$a:a()[r+12>>2>>>0],Xa:a()[r+16>>2>>>0],Ta:a()[r+20>>2>>>0],Pa:a()[r+24>>2>>>0],Sa:a()[r+28>>2>>>0],Mb:a()[r+32>>2>>>0],Bb:a()[r+36>>2>>>0],Eb:c?de(c):""},n=de(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(p,"g"),c[p]);var d="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),h="January February March April May June July August September October November December".split(" ");for(p in c={"%a":e=>d[e.Pa].substring(0,3),"%A":e=>d[e.Pa],"%b":e=>h[e.Xa].substring(0,3),"%B":e=>h[e.Xa],"%C":e=>i((e.Ta+1900)/100|0,2),"%d":e=>i(e.$a,2),"%e":e=>o(e.$a,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>i(e.Wa,2),"%I":e=>(0==(e=e.Wa)?e=12:12<e&&(e-=12),i(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Xa-1;t+=(Be(e.Ta+1900)?st:lt)[n++]);return i(e.$a+t,3)},"%m":e=>i(e.Xa+1,2),"%M":e=>i(e.Cb,2),"%n":()=>"\n","%p":e=>0<=e.Wa&&12>e.Wa?"AM":"PM","%S":e=>i(e.Db,2),"%t":()=>"\t","%u":e=>e.Pa||7,"%U":e=>i(Math.floor((e.Sa+7-e.Pa)/7),2),"%V":e=>{var t=Math.floor((e.Sa+7-(e.Pa+6)%7)/7);if(2>=(e.Pa+371-e.Sa-2)%7&&t++,t)53==t&&(4==(n=(e.Pa+371-e.Sa)%7)||3==n&&Be(e.Ta)||(t=1));else{t=52;var n=(e.Pa+7-e.Sa-1)%7;(4==n||5==n&&Be(e.Ta%400-1))&&t++}return i(t,2)},"%w":e=>e.Pa,"%W":e=>i(Math.floor((e.Sa+7-(e.Pa+6)%7)/7),2),"%y":e=>(e.Ta+1900).toString().substring(2),"%Y":e=>e.Ta+1900,"%z":e=>{var t=0<=(e=e.Bb);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Eb,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),c)n.includes(p)&&(n=n.replace(new RegExp(p,"g"),c[p](r)));return p=function(e){var t=Array(Te(e)+1);return ke(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),p.length>t?0:(ut(p,e),p.length-1)}function pt(e){try{e()}catch(e){ee(e)}}var dt=0,ht=null,ft=0,gt=[],_t={},mt={},bt=0,yt=null,wt=[];ge.Ya();var xt=[null,he,me,ye,xe,ve,$e,Pe,Ae,Oe,Me,Ie,Ce,Ee,De,Fe,Re,Ve,Ue,et,tt,nt,rt,ot,it],vt={r:function(e,t,n){return function(e){return function(e){if(!B){if(0===dt){var t=!1,n=!1;e(((e=0)=>{if(!B&&(ft=e,t=!0,n)){dt=2,pt((()=>Bt(ht))),"undefined"!=typeof Browser&&Browser.Za.lb&&Browser.Za.resume(),e=!1;try{var r=function(){var e=a()[ht+8>>2>>>0];return e=C[mt[e]],--q,e()}()}catch(t){r=t,e=!0}var o=!1;if(!ht){var i=yt;i&&(yt=null,(e?i.reject:i.resolve)(r),o=!0)}if(e&&!o)throw r}})),n=!0,t||(dt=1,ht=function(){var e=kt(65548),t=e+12;i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=t+65536,t=gt[0];var n=_t[t];return void 0===n&&(n=bt++,_t[t]=n,mt[n]=t),t=n,a()[e+8>>2>>>0]=t,e}(),"undefined"!=typeof Browser&&Browser.Za.lb&&Browser.Za.pause(),pt((()=>Lt(ht))))}else 2===dt?(dt=0,pt(Nt),St(ht),ht=null,wt.forEach((e=>ze(e)))):ee(`invalid state: ${dt}`);return ft}}((t=>{e().then(t)}))}((async()=>{await c.qb(e,t,n)}))},b:function(e,t,n){throw new be(e>>>=0).Ya(t>>>0,n>>>0),e},O:function(e){$t(e>>>0,!b,1,!m,131072,!1),ge.eb()},l:function(e){e>>>=0,w?postMessage({cmd:"cleanupThread",thread:e}):le(e)},J:we,i:xe,U:ve,F:$e,H:Pe,V:Ae,S:Oe,K:Me,R:Ie,p:Ce,G:Ee,D:De,T:Fe,E:Re,q:()=>!0,B:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>je())):w?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=ge.Ja[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Le,X:function(e){y&&ge.Ja[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),a()[n>>2>>>0]=e.getUTCSeconds(),a()[n+4>>2>>>0]=e.getUTCMinutes(),a()[n+8>>2>>>0]=e.getUTCHours(),a()[n+12>>2>>>0]=e.getUTCDate(),a()[n+16>>2>>>0]=e.getUTCMonth(),a()[n+20>>2>>>0]=e.getUTCFullYear()-1900,a()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),a()[n>>2>>>0]=e.getSeconds(),a()[n+4>>2>>>0]=e.getMinutes(),a()[n+8>>2>>>0]=e.getHours(),a()[n+12>>2>>>0]=e.getDate(),a()[n+16>>2>>>0]=e.getMonth(),a()[n+20>>2>>>0]=e.getFullYear()-1900,a()[n+24>>2>>>0]=e.getDay(),t=(Be(e.getFullYear())?Ne:Ge)[e.getMonth()]+e.getDate()-1|0,a()[n+28>>2>>>0]=t,a()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t)),a()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),n=a()[e+32>>2>>>0],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(i,o);return 0>n?a()[e+32>>2>>>0]=Number(o!=i&&s==r):0<n!=(s==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),a()[e+24>>2>>>0]=t.getDay(),n=(Be(t.getFullYear())?Ne:Ge)[t.getMonth()]+t.getDate()-1|0,a()[e+28>>2>>>0]=n,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Ct((oe=e,1<=+Math.abs(oe)?0<oe?+Math.floor(oe/4294967296)>>>0:~~+Math.ceil((oe-+(~~oe>>>0))/4294967296)>>>0:0)),e>>>0},s:Ve,t:Ue,z:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var o=(new Date).getFullYear(),s=new Date(o,0,1),l=new Date(o,6,1);o=s.getTimezoneOffset();var u=l.getTimezoneOffset(),c=Math.max(o,u);i()[e>>2>>>0]=60*c,a()[t>>2>>>0]=Number(o!=u),e=r(s),t=r(l),e=We(e),t=We(t),u<o?(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t):(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e)},d:()=>{ee("")},c:function(e,t,n){return e>>>=0,t=He(t>>>0,n>>>0),ae[e].apply(null,t)},k:function(e,t,n){return e>>>=0,t=He(t>>>0,n>>>0),ae[e].apply(null,t)},m:function(){},j:function(){return Date.now()},W:()=>{throw q+=1,"unwind"},C:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return y?n(3993).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,r){for(ge.Ib=t>>>0,Qe.length=n,t=r>>>0>>3,r=0;r<n;r++)Qe[r]=s()[t+r>>>0];return(0>e?ae[-e-1]:xt[e]).apply(null,Qe)},y:function(e){e>>>=0;var t=o().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math;r=Math.max(e,r);e:{a=a.min.call(a,4294901760,r+(65536-r%65536)%65536)-I.buffer.byteLength+65535>>>16;try{I.grow(a),N();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},P:et,Q:tt,I:fe,h:nt,o:rt,x:ot,n:it,a:I||c.wasmMemory,A:ct,e:function(e,t,n,r){return ct(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){gt.push(t);try{return r.apply(null,arguments)}finally{B||(gt.pop()===t||ee(),ht&&1===dt&&0===gt.length&&(dt=0,q+=1,pt(jt),"undefined"!=typeof Fibers&&Fibers.Nb()))}}:r}(t);return n}(e=e.exports),C=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),ge.fb.push(C.wa),U.unshift(C.Y),E=t,Z(),e}var t={a:vt};if(J(),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){O("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var n=K;return P||"function"!=typeof WebAssembly.instantiateStreaming||te(n)||n.startsWith("file://")||y||"function"!=typeof fetch?re(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return O("wasm streaming compile failed: "+r),O("falling back to ArrayBuffer instantiation"),re(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)}(),c._OrtInit=(e,t)=>(c._OrtInit=C.Z)(e,t),c._OrtGetLastError=(e,t)=>(c._OrtGetLastError=C._)(e,t),c._OrtCreateSessionOptions=(e,t,n,r,o,a,i,s,l,u)=>(c._OrtCreateSessionOptions=C.$)(e,t,n,r,o,a,i,s,l,u),c._OrtAppendExecutionProvider=(e,t)=>(c._OrtAppendExecutionProvider=C.aa)(e,t),c._OrtAddSessionConfigEntry=(e,t,n)=>(c._OrtAddSessionConfigEntry=C.ba)(e,t,n),c._OrtReleaseSessionOptions=e=>(c._OrtReleaseSessionOptions=C.ca)(e),c._OrtCreateSession=(e,t,n)=>(c._OrtCreateSession=C.da)(e,t,n),c._OrtReleaseSession=e=>(c._OrtReleaseSession=C.ea)(e),c._OrtGetInputOutputCount=(e,t,n)=>(c._OrtGetInputOutputCount=C.fa)(e,t,n),c._OrtGetInputName=(e,t)=>(c._OrtGetInputName=C.ga)(e,t),c._OrtGetOutputName=(e,t)=>(c._OrtGetOutputName=C.ha)(e,t),c._OrtFree=e=>(c._OrtFree=C.ia)(e),c._OrtCreateTensor=(e,t,n,r,o)=>(c._OrtCreateTensor=C.ja)(e,t,n,r,o),c._OrtGetTensorData=(e,t,n,r,o)=>(c._OrtGetTensorData=C.ka)(e,t,n,r,o),c._OrtReleaseTensor=e=>(c._OrtReleaseTensor=C.la)(e),c._OrtCreateRunOptions=(e,t,n,r)=>(c._OrtCreateRunOptions=C.ma)(e,t,n,r),c._OrtAddRunConfigEntry=(e,t,n)=>(c._OrtAddRunConfigEntry=C.na)(e,t,n),c._OrtReleaseRunOptions=e=>(c._OrtReleaseRunOptions=C.oa)(e),c._OrtRun=(e,t,n,r,o,a,i,s)=>(c._OrtRun=C.pa)(e,t,n,r,o,a,i,s),c._OrtEndProfiling=e=>(c._OrtEndProfiling=C.qa)(e),c._JsepOutput=(e,t,n)=>(c._JsepOutput=C.ra)(e,t,n),c._JsepGetNodeName=e=>(c._JsepGetNodeName=C.sa)(e);var Tt=c._pthread_self=()=>(Tt=c._pthread_self=C.ta)(),kt=c._malloc=e=>(kt=c._malloc=C.ua)(e),St=c._free=e=>(St=c._free=C.va)(e);c.__emscripten_tls_init=()=>(c.__emscripten_tls_init=C.wa)();var $t=c.__emscripten_thread_init=(e,t,n,r,o,a)=>($t=c.__emscripten_thread_init=C.ya)(e,t,n,r,o,a);c.__emscripten_thread_crashed=()=>(c.__emscripten_thread_crashed=C.za)();var Pt,At=(e,t,n,r)=>(At=C.Aa)(e,t,n,r),Ot=e=>(Ot=C.Ba)(e),Mt=c.__emscripten_thread_exit=e=>(Mt=c.__emscripten_thread_exit=C.Ca)(e),It=c.__emscripten_check_mailbox=()=>(It=c.__emscripten_check_mailbox=C.Da)(),Ct=e=>(Ct=C.Ea)(e),Et=(e,t)=>(Et=C.Fa)(e,t),Dt=()=>(Dt=C.Ga)(),Ft=e=>(Ft=C.Ha)(e),Rt=e=>(Rt=C.Ia)(e),zt=c.dynCall_ii=(e,t)=>(zt=c.dynCall_ii=C.Ka)(e,t),Lt=e=>(Lt=C.La)(e),jt=()=>(jt=C.Ma)(),Bt=e=>(Bt=C.Na)(e),Nt=()=>(Nt=C.Oa)();function Gt(){function e(){if(!Pt&&(Pt=!0,c.calledRun=!0,!B)&&(w||_e(U),l(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!w)){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();W.unshift(e)}_e(W)}}if(!(0<X))if(w)l(c),w||_e(U),startWorker(c);else{if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)V.unshift(c.preRun.shift());_e(V),0<X||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),e()}),1)):e())}}if(c.___start_em_js=893254,c.___stop_em_js=893415,c.keepRuntimeAlive=H,c.wasmMemory=I,c.stackAlloc=Rt,c.stackSave=Dt,c.stackRestore=Ft,c.UTF8ToString=de,c.stringToUTF8=Se,c.lengthBytesUTF8=Te,c.ExitStatus=ie,c.PThread=ge,Q=function e(){Pt||Gt(),Pt||(Q=e)},c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return Gt(),e.ready});e.exports=o},9377:(e,t,n)=>{var r,o=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e={}){var t,o,a=e;a.ready=new Promise(((e,n)=>{t=e,o=n})),a.jsepInit=(e,t,n,r,o,i,s,l)=>{a.Sa=e,a.Ea=t,a.Ga=n,a.Ca=r,a.Fa=o,a.ka=i,a.Ha=s,a.Ia=l,a.jsepOnRunStart=e=>{if(a.jsepRunPromise=new Promise((e=>{a.Ja=e})),a.wa)throw Error("Session already started");a.wa={sessionId:e,errors:[]}},a.jsepOnRunEnd=e=>{if(a.wa.sessionId!==e)throw Error("Session ID mismatch");const t=a.wa.errors;return a.wa=null,0===t.length?Promise.resolve():new Promise(((e,n)=>{Promise.all(t).then((t=>{0<(t=t.filter((e=>e))).length?n(Error(t.join("\n"))):e()}),(e=>{n(e)}))}))}};var i,s,l,u=Object.assign({},a),c="./this.program",p=(e,t)=>{throw t},d="object"==typeof window,h="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";if(f){var _=n(1384),m=n(908);g=h?m.dirname(g)+"/":__dirname+"/",i=(e,t)=>(e=e.startsWith("file://")?new URL(e):m.normalize(e),_.readFileSync(e,t?void 0:"utf8")),l=e=>((e=i(e,!0)).buffer||(e=new Uint8Array(e)),e),s=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):m.normalize(e),_.readFile(e,r?void 0:"utf8",((e,o)=>{e?n(e):t(r?o.buffer:o)}))},!a.thisProgram&&1<process.argv.length&&(c=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),p=(e,t)=>{throw process.exitCode=e,t},a.inspect=()=>"[Emscripten Module object]"}else(d||h)&&(h?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),s=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var b,y=a.print||console.log.bind(console),w=a.printErr||console.error.bind(console);Object.assign(a,u),u=null,a.thisProgram&&(c=a.thisProgram),a.quit&&(p=a.quit),a.wasmBinary&&(b=a.wasmBinary);var x=a.noExitRuntime||!0;"object"!=typeof WebAssembly&&B("no native wasm support detected");var v,T,k,S,$,P,A,O,M=!1;function I(){var e=v.buffer;a.HEAP8=S=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=P=new Int32Array(e),a.HEAPU8=$=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=A=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=O=new Float64Array(e)}var C=[],E=[],D=[];function F(){var e=a.preRun.shift();C.unshift(e)}var R,z=0,L=null,j=null;function B(e){throw a.onAbort&&a.onAbort(e),w(e="Aborted("+e+")"),M=!0,k=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),o(e),e}function N(e){return e.startsWith("data:application/octet-stream;base64,")}if(!N(R="ort-wasm-simd.wasm")){var G=R;R=a.locateFile?a.locateFile(G,g):g+G}function V(e){if(e==R&&b)return new Uint8Array(b);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}function U(e,t,n){return function(e){if(!b&&(d||h)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>V(e)));if(s)return new Promise(((t,n)=>{s(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>V(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{w("failed to asynchronously prepare wasm: "+e),B(e)}))}var W,q={881648:e=>{a.Ja?.(e)},881689:e=>a.Ea(e),881722:e=>a.Ga(e),881754:(e,t,n)=>{a.Ca(e,t,n,!0)},881793:(e,t,n)=>{a.Ca(e,t,n)},881826:e=>{a.ka("Abs",e,void 0)},881877:e=>{a.ka("Neg",e,void 0)},881928:e=>{a.ka("Floor",e,void 0)},881981:e=>{a.ka("Ceil",e,void 0)},882033:e=>{a.ka("Reciprocal",e,void 0)},882091:e=>{a.ka("Sqrt",e,void 0)},882143:e=>{a.ka("Exp",e,void 0)},882194:e=>{a.ka("Erf",e,void 0)},882245:e=>{a.ka("Sigmoid",e,void 0)},882300:e=>{a.ka("Log",e,void 0)},882351:e=>{a.ka("Sin",e,void 0)},882402:e=>{a.ka("Cos",e,void 0)},882453:e=>{a.ka("Tan",e,void 0)},882504:e=>{a.ka("Asin",e,void 0)},882556:e=>{a.ka("Acos",e,void 0)},882608:e=>{a.ka("Atan",e,void 0)},882660:e=>{a.ka("Sinh",e,void 0)},882712:e=>{a.ka("Cosh",e,void 0)},882764:e=>{a.ka("Asinh",e,void 0)},882817:e=>{a.ka("Acosh",e,void 0)},882870:e=>{a.ka("Atanh",e,void 0)},882923:e=>{a.ka("Tanh",e,void 0)},882975:e=>{a.ka("Not",e,void 0)},883026:(e,t,n)=>{a.ka("ClipV10",e,{min:t,max:n})},883098:e=>{a.ka("Clip",e,void 0)},883150:(e,t)=>{a.ka("Elu",e,{alpha:t})},883208:e=>{a.ka("Relu",e,void 0)},883260:(e,t)=>{a.ka("LeakyRelu",e,{alpha:t})},883324:(e,t)=>{a.ka("ThresholdedRelu",e,{alpha:t})},883394:(e,t)=>{a.ka("Cast",e,{to:t})},883452:e=>{a.ka("Add",e,void 0)},883503:e=>{a.ka("Sub",e,void 0)},883554:e=>{a.ka("Mul",e,void 0)},883605:e=>{a.ka("Div",e,void 0)},883656:e=>{a.ka("Pow",e,void 0)},883707:e=>{a.ka("Equal",e,void 0)},883760:e=>{a.ka("Greater",e,void 0)},883815:e=>{a.ka("GreaterOrEqual",e,void 0)},883877:e=>{a.ka("Less",e,void 0)},883929:e=>{a.ka("LessOrEqual",e,void 0)},883988:(e,t,n,r,o)=>{a.ka("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884152:(e,t,n,r,o)=>{a.ka("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884315:(e,t,n,r,o)=>{a.ka("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884478:(e,t,n,r,o)=>{a.ka("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884642:(e,t,n,r,o)=>{a.ka("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884805:(e,t,n,r,o)=>{a.ka("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},884967:(e,t,n,r,o)=>{a.ka("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},885129:(e,t,n,r,o)=>{a.ka("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},885295:(e,t,n,r,o)=>{a.ka("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},885464:(e,t,n,r,o)=>{a.ka("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},885633:(e,t,n)=>{a.ka("Transpose",e,{perm:t?Array.from(P.subarray(n>>>0,n+t>>>0)):[]})},885746:(e,t,n,r,o,i,s,l,u,c)=>{a.ka("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[o],pads:[i,s],strides:[l],w_is_const:()=>!!S[c>>>0]})},885974:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g)=>{a.ka("Conv",e,{format:f?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:o,kernel_shape:[i,s],pads:[l,u,c,p],strides:[d,h],w_is_const:()=>!!S[g>>>0]})},886233:(e,t,n,r,o,i,s,l,u,c)=>{a.ka("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[o],pads:[i,s],strides:[l],w_is_const:()=>!!S[c>>>0]})},886461:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g)=>{a.ka("Conv",e,{format:f?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:o,kernel_shape:[i,s],pads:[l,u,c,p],strides:[d,h],w_is_const:()=>!!S[g>>>0]})},886720:(e,t,n,r,o,i,s,l,u,c,p,d,h,f)=>{a.ka("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[o],pads:[i,s],strides:[l],wIsConst:()=>!!S[c>>>0],outputPadding:p?Array.from(P.subarray(d>>>0,d+p>>>0)):[],outputShape:h?Array.from(P.subarray(f>>>0,f+h>>>0)):[]})},887100:(e,t,n,r,o,i,s,l,u,c,p,d,h)=>{a.ka("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(P.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(P.subarray(o>>>0,o+2>>>0)),pads:Array.from(P.subarray(i>>>0,i+4>>>0)),strides:Array.from(P.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!S[u>>>0],outputPadding:0<c?Array.from(P.subarray(p>>>0,p+c>>>0)):[],outputShape:0<d?Array.from(P.subarray(h>>>0,h+d>>>0)):[]})},887623:(e,t,n,r,o,i,s,l,u,c,p,d,h,f)=>{a.ka("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[o],pads:[i,s],strides:[l],wIsConst:()=>!!S[c>>>0],outputPadding:p?Array.from(P.subarray(d>>>0,d+p>>>0)):[],outputShape:h?Array.from(P.subarray(f>>>0,f+h>>>0)):[]})},888003:(e,t,n,r,o,i,s,l,u,c,p,d,h)=>{a.ka("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(P.subarray(n>>>0,n+2>>>0)),group:r,kernelShape:Array.from(P.subarray(o>>>0,o+2>>>0)),pads:Array.from(P.subarray(i>>>0,i+4>>>0)),strides:Array.from(P.subarray(s>>>0,s+2>>>0)),wIsConst:()=>!!S[u>>>0],outputPadding:0<c?Array.from(P.subarray(p>>>0,p+c>>>0)):[],outputShape:0<d?Array.from(P.subarray(h>>>0,h+d>>>0)):[]})},888526:(e,t)=>{a.ka("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},888617:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g,_)=>{a.ka("AveragePool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[i,s],kernel_shape:[l,u],pads:[c,p,d,h],strides:[f,g]})},888901:(e,t)=>{a.ka("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},888992:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g,_)=>{a.ka("AveragePool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[i,s],kernel_shape:[l,u],pads:[c,p,d,h],strides:[f,g]})},889276:(e,t)=>{a.ka("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},889363:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g,_)=>{a.ka("MaxPool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[i,s],kernel_shape:[l,u],pads:[c,p,d,h],strides:[f,g]})},889643:(e,t)=>{a.ka("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},889730:(e,t,n,r,o,i,s,l,u,c,p,d,h,f,g,_)=>{a.ka("MaxPool",e,{format:_?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:[i,s],kernel_shape:[l,u],pads:[c,p,d,h],strides:[f,g]})},890010:(e,t,n,r,o)=>{a.ka("Gemm",e,{alpha:t,beta:n,transA:r,transB:o})},890114:e=>{a.ka("MatMul",e,void 0)},890168:(e,t,n,r)=>{a.ka("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},890276:(e,t,n,r)=>{a.ka("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},890384:(e,t)=>{a.ka("Softmax",e,{axis:t})},890447:(e,t)=>{a.ka("Concat",e,{axis:t})},890507:(e,t,n,r,o)=>{a.ka("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[]})},890652:e=>{a.ka("Expand",e,void 0)},890706:(e,t)=>{a.ka("Gather",e,{axis:Number(t)})},890777:(e,t)=>{a.ka("GatherElements",e,{axis:Number(t)})},890856:(e,t,n,r,o,i,s,l,u,c,p)=>{a.ka("Resize",e,{antialias:t,axes:n?Array.from(P.subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:Z(o),cubicCoeffA:i,excludeOutside:s,extrapolationValue:l,keepAspectRatioPolicy:Z(u),mode:Z(c),nearestMode:Z(p)})},891207:(e,t,n,r,o,i,s)=>{a.ka("Slice",e,{starts:t?Array.from(P.subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(P.subarray(o>>>0,o+r>>>0)):[],axes:i?Array.from(P.subarray(s>>>0,s+i>>>0)):[]})},891438:e=>{a.ka("Tile",e,void 0)},891490:(e,t,n)=>{a.ka("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},891597:(e,t,n)=>{a.ka("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},891711:(e,t,n)=>{a.ka("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},891825:e=>{a.ka("Gelu",e,void 0)},891877:(e,t)=>{a.ka("SkipLayerNormalization",e,{epsilon:t})},891958:e=>{a.Ha(e)},891992:(e,t)=>a.Ia(e,t,a.wa)};function H(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var K=e=>{for(;0<e.length;)e.shift()(a)};function X(e){this.za=e-24,this.Ra=function(e){A[this.za+4>>2>>>0]=e},this.Qa=function(e){A[this.za+8>>2>>>0]=e},this.Ka=function(e,t){this.Pa(),this.Ra(e),this.Qa(t)},this.Pa=function(){A[this.za+16>>2>>>0]=0}}var Y,Q="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,J=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Q)return Q.decode(e.subarray(t,n));for(r="";t<n;){var o=e[t++];if(128&o){var a=63&e[t++];if(192==(224&o))r+=String.fromCharCode((31&o)<<6|a);else{var i=63&e[t++];65536>(o=224==(240&o)?(15&o)<<12|a<<6|i:(7&o)<<18|a<<12|i<<6|63&e[t++])?r+=String.fromCharCode(o):(o-=65536,r+=String.fromCharCode(55296|o>>10,56320|1023&o))}}else r+=String.fromCharCode(o)}return r},Z=(e,t)=>(e>>>=0)?J($,e,t):"",ee=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},te=(e,t,n,r)=>{if(!(0<r))return 0;var o=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-o},ne=e=>0==e%4&&(0!=e%100||0==e%400),re=[0,31,60,91,121,152,182,213,244,274,305,335],oe=[0,31,59,90,120,151,181,212,243,273,304,334],ae=e=>{var t=ee(e)+1,n=$e(t);return n&&te(e,$,n,t),n},ie=[],se=(e,t)=>{var n;for(ie.length=0,t>>=2;n=$[e++>>>0];)t+=105!=n&t,ie.push(105==n?P[t>>>0]:O[t++>>>1]),++t;return ie},le={},ue=()=>{if(!Y){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:c||"./this.program"};for(e in le)void 0===le[e]?delete t[e]:t[e]=le[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Y=n}return Y},ce=[null,[],[]],pe=[31,29,31,30,31,30,31,31,30,31,30,31],de=[31,28,31,30,31,30,31,31,30,31,30,31];function he(e,t,n,r){function o(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return o(e,t,"0")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.ua;for(e=new Date(new Date(e.va+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(ne(e.getFullYear())?pe:de)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=i(t,e)?0>=i(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var u=P[40+(r>>>=0)>>2>>>0];for(var c in r={Na:P[r>>2>>>0],Ma:P[r+4>>2>>>0],xa:P[r+8>>2>>>0],Ba:P[r+12>>2>>>0],ya:P[r+16>>2>>>0],va:P[r+20>>2>>>0],pa:P[r+24>>2>>>0],ua:P[r+28>>2>>>0],Ta:P[r+32>>2>>>0],La:P[r+36>>2>>>0],Oa:u?Z(u):""},n=Z(n),u={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(c,"g"),u[c]);var p="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),d="January February March April May June July August September October November December".split(" ");for(c in u={"%a":e=>p[e.pa].substring(0,3),"%A":e=>p[e.pa],"%b":e=>d[e.ya].substring(0,3),"%B":e=>d[e.ya],"%C":e=>a((e.va+1900)/100|0,2),"%d":e=>a(e.Ba,2),"%e":e=>o(e.Ba,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>a(e.xa,2),"%I":e=>(0==(e=e.xa)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.ya-1;t+=(ne(e.va+1900)?pe:de)[n++]);return a(e.Ba+t,3)},"%m":e=>a(e.ya+1,2),"%M":e=>a(e.Ma,2),"%n":()=>"\n","%p":e=>0<=e.xa&&12>e.xa?"AM":"PM","%S":e=>a(e.Na,2),"%t":()=>"\t","%u":e=>e.pa||7,"%U":e=>a(Math.floor((e.ua+7-e.pa)/7),2),"%V":e=>{var t=Math.floor((e.ua+7-(e.pa+6)%7)/7);if(2>=(e.pa+371-e.ua-2)%7&&t++,t)53==t&&(4==(n=(e.pa+371-e.ua)%7)||3==n&&ne(e.va)||(t=1));else{t=52;var n=(e.pa+7-e.ua-1)%7;(4==n||5==n&&ne(e.va%400-1))&&t++}return a(t,2)},"%w":e=>e.pa,"%W":e=>a(Math.floor((e.ua+7-(e.pa+6)%7)/7),2),"%y":e=>(e.va+1900).toString().substring(2),"%Y":e=>e.va+1900,"%z":e=>{var t=0<=(e=e.La);return e=Math.abs(e)/60,(t?"+":"-")+String("0000"+(e/60*100+e%60)).slice(-4)},"%Z":e=>e.Oa,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),u)n.includes(c)&&(n=n.replace(new RegExp(c,"g"),u[c](r)));return c=function(e){var t=Array(ee(e)+1);return te(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),c.length>t?0:(S.set(c,e>>>0),c.length-1)}function fe(e){try{e()}catch(e){B(e)}}var ge=0,_e=null,me=0,be=[],ye={},we={},xe=0,ve=null,Te=[],ke={n:function(e,t,n){return function(e){return function(e){if(!M){if(0===ge){var t=!1,n=!1;e(((e=0)=>{if(!M&&(me=e,t=!0,n)){ge=2,fe((()=>De(_e))),"undefined"!=typeof Browser&&Browser.Aa.Da&&Browser.Aa.resume(),e=!1;try{var r=(0,T[we[P[_e+8>>2>>>0]]])()}catch(t){r=t,e=!0}var o=!1;if(!_e){var a=ve;a&&(ve=null,(e?a.reject:a.resolve)(r),o=!0)}if(e&&!o)throw r}})),n=!0,t||(ge=1,_e=function(){var e=$e(65548),t=e+12;A[e>>2>>>0]=t,A[e+4>>2>>>0]=t+65536,t=be[0];var n=ye[t];return void 0===n&&(n=xe++,ye[t]=n,we[n]=t),P[e+8>>2>>>0]=n,e}(),"undefined"!=typeof Browser&&Browser.Aa.Da&&Browser.Aa.pause(),fe((()=>Ce(_e))))}else 2===ge?(ge=0,fe(Fe),Pe(_e),_e=null,Te.forEach((e=>{if(!M)try{if(e(),!x)try{k=k=e=k,x||(a.onExit&&a.onExit(e),M=!0),p(e,new H(e))}catch(e){e instanceof H||"unwind"==e||p(1,e)}}catch(e){e instanceof H||"unwind"==e||p(1,e)}}))):B(`invalid state: ${ge}`);return me}}((t=>{e().then(t)}))}((async()=>{await a.Fa(e,t,n)}))},a:function(e,t,n){throw new X(e>>>=0).Ka(t>>>0,n>>>0),e},g:function(){return 0},J:function(){},A:function(){},C:function(){},L:function(){return 0},H:function(){},D:function(){},G:function(){},l:function(){},B:function(){},y:function(){},I:function(){},z:function(){},m:()=>!0,q:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),P[n>>2>>>0]=e.getUTCSeconds(),P[n+4>>2>>>0]=e.getUTCMinutes(),P[n+8>>2>>>0]=e.getUTCHours(),P[n+12>>2>>>0]=e.getUTCDate(),P[n+16>>2>>>0]=e.getUTCMonth(),P[n+20>>2>>>0]=e.getUTCFullYear()-1900,P[n+24>>2>>>0]=e.getUTCDay(),P[n+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},r:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),P[n>>2>>>0]=e.getSeconds(),P[n+4>>2>>>0]=e.getMinutes(),P[n+8>>2>>>0]=e.getHours(),P[n+12>>2>>>0]=e.getDate(),P[n+16>>2>>>0]=e.getMonth(),P[n+20>>2>>>0]=e.getFullYear()-1900,P[n+24>>2>>>0]=e.getDay(),P[n+28>>2>>>0]=(ne(e.getFullYear())?re:oe)[e.getMonth()]+e.getDate()-1|0,P[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();P[n+32>>2>>>0]=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t))},s:function(e){e>>>=0;var t=new Date(P[e+20>>2>>>0]+1900,P[e+16>>2>>>0],P[e+12>>2>>>0],P[e+8>>2>>>0],P[e+4>>2>>>0],P[e>>2>>>0],0),n=P[e+32>>2>>>0],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(a,o);return 0>n?P[e+32>>2>>>0]=Number(o!=a&&i==r):0<n!=(i==r)&&(o=Math.max(a,o),t.setTime(t.getTime()+6e4*((0<n?i:o)-r))),P[e+24>>2>>>0]=t.getDay(),P[e+28>>2>>>0]=(ne(t.getFullYear())?re:oe)[t.getMonth()]+t.getDate()-1|0,P[e>>2>>>0]=t.getSeconds(),P[e+4>>2>>>0]=t.getMinutes(),P[e+8>>2>>>0]=t.getHours(),P[e+12>>2>>>0]=t.getDate(),P[e+16>>2>>>0]=t.getMonth(),P[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Ae((W=e,1<=+Math.abs(W)?0<W?+Math.floor(W/4294967296)>>>0:~~+Math.ceil((W-+(~~W>>>0))/4294967296)>>>0:0)),e>>>0},o:function(){return-52},p:function(){},w:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}n>>>=0;var o=(new Date).getFullYear(),a=new Date(o,0,1),i=new Date(o,6,1);o=a.getTimezoneOffset();var s=i.getTimezoneOffset();A[e>>>0>>2>>>0]=60*Math.max(o,s),P[t>>>0>>2>>>0]=Number(o!=s),e=r(a),t=r(i),e=ae(e),t=ae(t),s<o?(A[n>>2>>>0]=e,A[n+4>>2>>>0]=t):(A[n>>2>>>0]=t,A[n+4>>2>>>0]=e)},e:()=>{B("")},b:function(e,t,n){return e>>>=0,t=se(t>>>0,n>>>0),q[e].apply(null,t)},i:function(e,t,n){return e>>>=0,t=se(t>>>0,n>>>0),q[e].apply(null,t)},h:function(){return Date.now()},x:function(){return 4294901760},c:()=>performance.now(),K:function(e,t,n){return t>>>=0,$.copyWithin(e>>>0>>>0,t>>>0,t+(n>>>0)>>>0)},u:function(e){e>>>=0;var t=$.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var o=Math;r=Math.max(e,r);e:{o=o.min.call(o,4294901760,r+(65536-r%65536)%65536)-v.buffer.byteLength+65535>>>16;try{v.grow(o),I();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},E:function(e,t){e>>>=0,t>>>=0;var n=0;return ue().forEach((function(r,o){var a=t+n;for(o=A[e+4*o>>2>>>0]=a,a=0;a<r.length;++a)S[o++>>0>>>0]=r.charCodeAt(a);S[o>>0>>>0]=0,n+=r.length+1})),0},F:function(e,t){e>>>=0,t>>>=0;var n=ue();A[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),A[t>>2>>>0]=r,0},f:()=>52,k:function(){return 52},t:function(){return 70},j:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var o=0,a=0;a<n;a++){var i=A[t>>2>>>0],s=A[t+4>>2>>>0];t+=8;for(var l=0;l<s;l++){var u=$[i+l>>>0],c=ce[e];0===u||10===u?((1===e?y:w)(J(c,0)),c.length=0):c.push(u)}o+=s}return A[r>>2>>>0]=o,0},v:he,d:function(e,t,n,r){return he(e>>>0,t>>>0,n>>>0,r>>>0)}};!function(){function e(e){if(e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){be.push(t);try{return r.apply(null,arguments)}finally{M||(be.pop()===t||B(),_e&&1===ge&&0===be.length&&(ge=0,fe(Ee),"undefined"!=typeof Fibers&&Fibers.Ua()))}}:r}(t);return n}(e=e.exports),T=e=function(e){var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).__errno_location=t(e.__errno_location),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),v=T.M,I(),E.unshift(T.N),z--,a.monitorRunDependencies&&a.monitorRunDependencies(z),0==z&&(null!==L&&(clearInterval(L),L=null),j)){var t=j;j=null,t()}return e}var t={a:ke};if(z++,a.monitorRunDependencies&&a.monitorRunDependencies(z),a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(e){w("Module.instantiateWasm callback failed with error: "+e),o(e)}(function(e,t){var n=R;return b||"function"!=typeof WebAssembly.instantiateStreaming||N(n)||n.startsWith("file://")||f||"function"!=typeof fetch?U(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return w("wasm streaming compile failed: "+r),w("falling back to ArrayBuffer instantiation"),U(n,e,t)}))))})(t,(function(t){e(t.instance)})).catch(o)}(),a._OrtInit=(e,t)=>(a._OrtInit=T.O)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=T.P)(e,t),a._OrtCreateSessionOptions=(e,t,n,r,o,i,s,l,u,c)=>(a._OrtCreateSessionOptions=T.Q)(e,t,n,r,o,i,s,l,u,c),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=T.R)(e,t),a._OrtAddSessionConfigEntry=(e,t,n)=>(a._OrtAddSessionConfigEntry=T.S)(e,t,n),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=T.T)(e),a._OrtCreateSession=(e,t,n)=>(a._OrtCreateSession=T.U)(e,t,n),a._OrtReleaseSession=e=>(a._OrtReleaseSession=T.V)(e),a._OrtGetInputOutputCount=(e,t,n)=>(a._OrtGetInputOutputCount=T.W)(e,t,n),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=T.X)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=T.Y)(e,t),a._OrtFree=e=>(a._OrtFree=T.Z)(e),a._OrtCreateTensor=(e,t,n,r,o)=>(a._OrtCreateTensor=T._)(e,t,n,r,o),a._OrtGetTensorData=(e,t,n,r,o)=>(a._OrtGetTensorData=T.$)(e,t,n,r,o),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=T.aa)(e),a._OrtCreateRunOptions=(e,t,n,r)=>(a._OrtCreateRunOptions=T.ba)(e,t,n,r),a._OrtAddRunConfigEntry=(e,t,n)=>(a._OrtAddRunConfigEntry=T.ca)(e,t,n),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=T.da)(e),a._OrtRun=(e,t,n,r,o,i,s,l)=>(a._OrtRun=T.ea)(e,t,n,r,o,i,s,l),a._OrtEndProfiling=e=>(a._OrtEndProfiling=T.fa)(e),a._JsepOutput=(e,t,n)=>(a._JsepOutput=T.ga)(e,t,n),a._JsepGetNodeName=e=>(a._JsepGetNodeName=T.ha)(e);var Se,$e=a._malloc=e=>($e=a._malloc=T.ia)(e),Pe=a._free=e=>(Pe=a._free=T.ja)(e),Ae=e=>(Ae=T.la)(e),Oe=()=>(Oe=T.ma)(),Me=e=>(Me=T.na)(e),Ie=e=>(Ie=T.oa)(e),Ce=e=>(Ce=T.qa)(e),Ee=()=>(Ee=T.ra)(),De=e=>(De=T.sa)(e),Fe=()=>(Fe=T.ta)();function Re(){function e(){if(!Se&&(Se=!0,a.calledRun=!0,!M)){if(K(E),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;){var e=a.postRun.shift();D.unshift(e)}K(D)}}if(!(0<z)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)F();K(C),0<z||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),e()}),1)):e())}}if(a.___start_em_js=892058,a.___stop_em_js=892219,a.stackAlloc=Ie,a.stackSave=Oe,a.stackRestore=Me,a.UTF8ToString=Z,a.stringToUTF8=(e,t,n)=>te(e,$,t,n),a.lengthBytesUTF8=ee,j=function e(){Se||Re(),Se||(j=e)},a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return Re(),e.ready});e.exports=o},4537:e=>{e.exports=function(e,t){for(var n=new Array(arguments.length-1),r=0,o=2,a=!0;o<arguments.length;)n[r++]=arguments[o++];return new Promise((function(o,i){n[r]=function(e){if(a)if(a=!1,e)i(e);else{for(var t=new Array(arguments.length-1),n=0;n<t.length;)t[n++]=arguments[n];o.apply(null,t)}};try{e.apply(t||null,n)}catch(e){a&&(a=!1,i(e))}}))}},7419:(e,t)=>{var n=t;n.length=function(e){var t=e.length;if(!t)return 0;for(var n=0;--t%4>1&&"="===e.charAt(t);)++n;return Math.ceil(3*e.length)/4-n};for(var r=new Array(64),o=new Array(123),a=0;a<64;)o[r[a]=a<26?a+65:a<52?a+71:a<62?a-4:a-59|43]=a++;n.encode=function(e,t,n){for(var o,a=null,i=[],s=0,l=0;t<n;){var u=e[t++];switch(l){case 0:i[s++]=r[u>>2],o=(3&u)<<4,l=1;break;case 1:i[s++]=r[o|u>>4],o=(15&u)<<2,l=2;break;case 2:i[s++]=r[o|u>>6],i[s++]=r[63&u],l=0}s>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,i)),s=0)}return l&&(i[s++]=r[o],i[s++]=61,1===l&&(i[s++]=61)),a?(s&&a.push(String.fromCharCode.apply(String,i.slice(0,s))),a.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var i="invalid encoding";n.decode=function(e,t,n){for(var r,a=n,s=0,l=0;l<e.length;){var u=e.charCodeAt(l++);if(61===u&&s>1)break;if(void 0===(u=o[u]))throw Error(i);switch(s){case 0:r=u,s=1;break;case 1:t[n++]=r<<2|(48&u)>>4,r=u,s=2;break;case 2:t[n++]=(15&r)<<4|(60&u)>>2,r=u,s=3;break;case 3:t[n++]=(3&r)<<6|u,s=0}}if(1===s)throw Error(i);return n-a},n.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},9211:e=>{function t(){this._listeners={}}e.exports=t,t.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this},t.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var n=this._listeners[e],r=0;r<n.length;)n[r].fn===t?n.splice(r,1):++r;return this},t.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);for(r=0;r<t.length;)t[r].fn.apply(t[r++].ctx,n)}return this}},945:e=>{function t(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),n=new Uint8Array(t.buffer),r=128===n[3];function o(e,r,o){t[0]=e,r[o]=n[0],r[o+1]=n[1],r[o+2]=n[2],r[o+3]=n[3]}function a(e,r,o){t[0]=e,r[o]=n[3],r[o+1]=n[2],r[o+2]=n[1],r[o+3]=n[0]}function i(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],t[0]}function s(e,r){return n[3]=e[r],n[2]=e[r+1],n[1]=e[r+2],n[0]=e[r+3],t[0]}e.writeFloatLE=r?o:a,e.writeFloatBE=r?a:o,e.readFloatLE=r?i:s,e.readFloatBE=r?s:i}():function(){function t(e,t,n,r){var o=t<0?1:0;if(o&&(t=-t),0===t)e(1/t>0?0:2147483648,n,r);else if(isNaN(t))e(2143289344,n,r);else if(t>34028234663852886e22)e((o<<31|2139095040)>>>0,n,r);else if(t<11754943508222875e-54)e((o<<31|Math.round(t/1401298464324817e-60))>>>0,n,r);else{var a=Math.floor(Math.log(t)/Math.LN2);e((o<<31|a+127<<23|8388607&Math.round(t*Math.pow(2,-a)*8388608))>>>0,n,r)}}function i(e,t,n){var r=e(t,n),o=2*(r>>31)+1,a=r>>>23&255,i=8388607&r;return 255===a?i?NaN:o*(1/0):0===a?1401298464324817e-60*o*i:o*Math.pow(2,a-150)*(i+8388608)}e.writeFloatLE=t.bind(null,n),e.writeFloatBE=t.bind(null,r),e.readFloatLE=i.bind(null,o),e.readFloatBE=i.bind(null,a)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),n=new Uint8Array(t.buffer),r=128===n[7];function o(e,r,o){t[0]=e,r[o]=n[0],r[o+1]=n[1],r[o+2]=n[2],r[o+3]=n[3],r[o+4]=n[4],r[o+5]=n[5],r[o+6]=n[6],r[o+7]=n[7]}function a(e,r,o){t[0]=e,r[o]=n[7],r[o+1]=n[6],r[o+2]=n[5],r[o+3]=n[4],r[o+4]=n[3],r[o+5]=n[2],r[o+6]=n[1],r[o+7]=n[0]}function i(e,r){return n[0]=e[r],n[1]=e[r+1],n[2]=e[r+2],n[3]=e[r+3],n[4]=e[r+4],n[5]=e[r+5],n[6]=e[r+6],n[7]=e[r+7],t[0]}function s(e,r){return n[7]=e[r],n[6]=e[r+1],n[5]=e[r+2],n[4]=e[r+3],n[3]=e[r+4],n[2]=e[r+5],n[1]=e[r+6],n[0]=e[r+7],t[0]}e.writeDoubleLE=r?o:a,e.writeDoubleBE=r?a:o,e.readDoubleLE=r?i:s,e.readDoubleBE=r?s:i}():function(){function t(e,t,n,r,o,a){var i=r<0?1:0;if(i&&(r=-r),0===r)e(0,o,a+t),e(1/r>0?0:2147483648,o,a+n);else if(isNaN(r))e(0,o,a+t),e(2146959360,o,a+n);else if(r>17976931348623157e292)e(0,o,a+t),e((i<<31|2146435072)>>>0,o,a+n);else{var s;if(r<22250738585072014e-324)e((s=r/5e-324)>>>0,o,a+t),e((i<<31|s/4294967296)>>>0,o,a+n);else{var l=Math.floor(Math.log(r)/Math.LN2);1024===l&&(l=1023),e(4503599627370496*(s=r*Math.pow(2,-l))>>>0,o,a+t),e((i<<31|l+1023<<20|1048576*s&1048575)>>>0,o,a+n)}}}function i(e,t,n,r,o){var a=e(r,o+t),i=e(r,o+n),s=2*(i>>31)+1,l=i>>>20&2047,u=4294967296*(1048575&i)+a;return 2047===l?u?NaN:s*(1/0):0===l?5e-324*s*u:s*Math.pow(2,l-1075)*(u+4503599627370496)}e.writeDoubleLE=t.bind(null,n,0,4),e.writeDoubleBE=t.bind(null,r,4,0),e.readDoubleLE=i.bind(null,o,0,4),e.readDoubleBE=i.bind(null,a,4,0)}(),e}function n(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}function r(e,t,n){t[n]=e>>>24,t[n+1]=e>>>16&255,t[n+2]=e>>>8&255,t[n+3]=255&e}function o(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function a(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=t(t)},7199:module=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},6662:e=>{e.exports=function(e,t,n){var r=n||8192,o=r>>>1,a=null,i=r;return function(n){if(n<1||n>o)return e(n);i+n>r&&(a=e(r),i=0);var s=t.call(a,i,i+=n);return 7&i&&(i=1+(7|i)),s}}},4997:(e,t)=>{var n=t;n.length=function(e){for(var t=0,n=0,r=0;r<e.length;++r)(n=e.charCodeAt(r))<128?t+=1:n<2048?t+=2:55296==(64512&n)&&56320==(64512&e.charCodeAt(r+1))?(++r,t+=4):t+=3;return t},n.read=function(e,t,n){if(n-t<1)return"";for(var r,o=null,a=[],i=0;t<n;)(r=e[t++])<128?a[i++]=r:r>191&&r<224?a[i++]=(31&r)<<6|63&e[t++]:r>239&&r<365?(r=((7&r)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,a[i++]=55296+(r>>10),a[i++]=56320+(1023&r)):a[i++]=(15&r)<<12|(63&e[t++])<<6|63&e[t++],i>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,a)),i=0);return o?(i&&o.push(String.fromCharCode.apply(String,a.slice(0,i))),o.join("")):String.fromCharCode.apply(String,a.slice(0,i))},n.write=function(e,t,n){for(var r,o,a=n,i=0;i<e.length;++i)(r=e.charCodeAt(i))<128?t[n++]=r:r<2048?(t[n++]=r>>6|192,t[n++]=63&r|128):55296==(64512&r)&&56320==(64512&(o=e.charCodeAt(i+1)))?(r=65536+((1023&r)<<10)+(1023&o),++i,t[n++]=r>>18|240,t[n++]=r>>12&63|128,t[n++]=r>>6&63|128,t[n++]=63&r|128):(t[n++]=r>>12|224,t[n++]=r>>6&63|128,t[n++]=63&r|128);return n-a}},3442:(e,t)=>{t.__esModule=!0;var n=function(){function e(t){if(!t)throw new TypeError("Invalid argument; `value` has no value.");this.value=e.EMPTY,t&&e.isGuid(t)&&(this.value=t)}return e.isGuid=function(t){var n=t.toString();return t&&(t instanceof e||e.validator.test(n))},e.create=function(){return new e([e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-"))},e.createEmpty=function(){return new e("emptyguid")},e.parse=function(t){return new e(t)},e.raw=function(){return[e.gen(2),e.gen(1),e.gen(1),e.gen(1),e.gen(3)].join("-")},e.gen=function(e){for(var t="",n=0;n<e;n++)t+=(65536*(1+Math.random())|0).toString(16).substring(1);return t},e.prototype.equals=function(t){return e.isGuid(t)&&this.value===t.toString()},e.prototype.isEmpty=function(){return this.value===e.EMPTY},e.prototype.toString=function(){return this.value},e.prototype.toJSON=function(){return{value:this.value}},e.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),e.EMPTY="00000000-0000-0000-0000-000000000000",e}();t.Guid=n},2100:(e,t,n)=>{e.exports=n(9482)},9482:(e,t,n)=>{var r=t;function o(){r.util._configure(),r.Writer._configure(r.BufferWriter),r.Reader._configure(r.BufferReader)}r.build="minimal",r.Writer=n(1173),r.BufferWriter=n(3155),r.Reader=n(1408),r.BufferReader=n(593),r.util=n(9693),r.rpc=n(5994),r.roots=n(5054),r.configure=o,o()},1408:(e,t,n)=>{e.exports=l;var r,o=n(9693),a=o.LongBits,i=o.utf8;function s(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function l(e){this.buf=e,this.pos=0,this.len=e.length}var u,c="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new l(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new l(e);throw Error("illegal buffer")},p=function(){return o.Buffer?function(e){return(l.create=function(e){return o.Buffer.isBuffer(e)?new r(e):c(e)})(e)}:c};function d(){var e=new a(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw s(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw s(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function h(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function f(){if(this.pos+8>this.len)throw s(this,8);return new a(h(this.buf,this.pos+=4),h(this.buf,this.pos+=4))}l.create=p(),l.prototype._slice=o.Array.prototype.subarray||o.Array.prototype.slice,l.prototype.uint32=(u=4294967295,function(){if(u=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return u;if(u=(u|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return u;if((this.pos+=5)>this.len)throw this.pos=this.len,s(this,10);return u}),l.prototype.int32=function(){return 0|this.uint32()},l.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},l.prototype.bool=function(){return 0!==this.uint32()},l.prototype.fixed32=function(){if(this.pos+4>this.len)throw s(this,4);return h(this.buf,this.pos+=4)},l.prototype.sfixed32=function(){if(this.pos+4>this.len)throw s(this,4);return 0|h(this.buf,this.pos+=4)},l.prototype.float=function(){if(this.pos+4>this.len)throw s(this,4);var e=o.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},l.prototype.double=function(){if(this.pos+8>this.len)throw s(this,4);var e=o.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},l.prototype.bytes=function(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw s(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,n):t===n?new this.buf.constructor(0):this._slice.call(this.buf,t,n)},l.prototype.string=function(){var e=this.bytes();return i.read(e,0,e.length)},l.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw s(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw s(this)}while(128&this.buf[this.pos++]);return this},l.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},l._configure=function(e){r=e,l.create=p(),r._configure();var t=o.Long?"toLong":"toNumber";o.merge(l.prototype,{int64:function(){return d.call(this)[t](!1)},uint64:function(){return d.call(this)[t](!0)},sint64:function(){return d.call(this).zzDecode()[t](!1)},fixed64:function(){return f.call(this)[t](!0)},sfixed64:function(){return f.call(this)[t](!1)}})}},593:(e,t,n)=>{e.exports=a;var r=n(1408);(a.prototype=Object.create(r.prototype)).constructor=a;var o=n(9693);function a(e){r.call(this,e)}a._configure=function(){o.Buffer&&(a.prototype._slice=o.Buffer.prototype.slice)},a.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},a._configure()},5054:e=>{e.exports={}},5994:(e,t,n)=>{t.Service=n(7948)},7948:(e,t,n)=>{e.exports=o;var r=n(9693);function o(e,t,n){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");r.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(n)}(o.prototype=Object.create(r.EventEmitter.prototype)).constructor=o,o.prototype.rpcCall=function e(t,n,o,a,i){if(!a)throw TypeError("request must be specified");var s=this;if(!i)return r.asPromise(e,s,t,n,o,a);if(s.rpcImpl)try{return s.rpcImpl(t,n[s.requestDelimited?"encodeDelimited":"encode"](a).finish(),(function(e,n){if(e)return s.emit("error",e,t),i(e);if(null!==n){if(!(n instanceof o))try{n=o[s.responseDelimited?"decodeDelimited":"decode"](n)}catch(e){return s.emit("error",e,t),i(e)}return s.emit("data",n,t),i(null,n)}s.end(!0)}))}catch(e){return s.emit("error",e,t),void setTimeout((function(){i(e)}),0)}else setTimeout((function(){i(Error("already ended"))}),0)},o.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},1945:(e,t,n)=>{e.exports=o;var r=n(9693);function o(e,t){this.lo=e>>>0,this.hi=t>>>0}var a=o.zero=new o(0,0);a.toNumber=function(){return 0},a.zzEncode=a.zzDecode=function(){return this},a.length=function(){return 1};var i=o.zeroHash="\0\0\0\0\0\0\0\0";o.fromNumber=function(e){if(0===e)return a;var t=e<0;t&&(e=-e);var n=e>>>0,r=(e-n)/4294967296>>>0;return t&&(r=~r>>>0,n=~n>>>0,++n>4294967295&&(n=0,++r>4294967295&&(r=0))),new o(n,r)},o.from=function(e){if("number"==typeof e)return o.fromNumber(e);if(r.isString(e)){if(!r.Long)return o.fromNumber(parseInt(e,10));e=r.Long.fromString(e)}return e.low||e.high?new o(e.low>>>0,e.high>>>0):a},o.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,n=~this.hi>>>0;return t||(n=n+1>>>0),-(t+4294967296*n)}return this.lo+4294967296*this.hi},o.prototype.toLong=function(e){return r.Long?new r.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var s=String.prototype.charCodeAt;o.fromHash=function(e){return e===i?a:new o((s.call(e,0)|s.call(e,1)<<8|s.call(e,2)<<16|s.call(e,3)<<24)>>>0,(s.call(e,4)|s.call(e,5)<<8|s.call(e,6)<<16|s.call(e,7)<<24)>>>0)},o.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},o.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},o.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},o.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return 0===n?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:n<128?9:10}},9693:function(e,t,n){var r=t;function o(e,t,n){for(var r=Object.keys(t),o=0;o<r.length;++o)void 0!==e[r[o]]&&n||(e[r[o]]=t[r[o]]);return e}function a(e){function t(e,n){if(!(this instanceof t))return new t(e,n);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),n&&o(this,n)}return t.prototype=Object.create(Error.prototype,{constructor:{value:t,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return e},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),t}r.asPromise=n(4537),r.base64=n(7419),r.EventEmitter=n(9211),r.float=n(945),r.inquire=n(7199),r.utf8=n(4997),r.pool=n(6662),r.LongBits=n(1945),r.isNode=Boolean(void 0!==__webpack_require__.g&&__webpack_require__.g&&__webpack_require__.g.process&&__webpack_require__.g.process.versions&&__webpack_require__.g.process.versions.node),r.global=r.isNode&&__webpack_require__.g||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},r.isString=function(e){return"string"==typeof e||e instanceof String},r.isObject=function(e){return e&&"object"==typeof e},r.isset=r.isSet=function(e,t){var n=e[t];return!(null==n||!e.hasOwnProperty(t))&&("object"!=typeof n||(Array.isArray(n)?n.length:Object.keys(n).length)>0)},r.Buffer=function(){try{var e=r.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(e){return"number"==typeof e?r.Buffer?r._Buffer_allocUnsafe(e):new r.Array(e):r.Buffer?r._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},r.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(e){return e?r.LongBits.from(e).toHash():r.LongBits.zeroHash},r.longFromHash=function(e,t){var n=r.LongBits.fromHash(e);return r.Long?r.Long.fromBits(n.lo,n.hi,t):n.toNumber(Boolean(t))},r.merge=o,r.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},r.newError=a,r.ProtocolError=a("ProtocolError"),r.oneOfGetter=function(e){for(var t={},n=0;n<e.length;++n)t[e[n]]=1;return function(){for(var e=Object.keys(this),n=e.length-1;n>-1;--n)if(1===t[e[n]]&&void 0!==this[e[n]]&&null!==this[e[n]])return e[n]}},r.oneOfSetter=function(e){return function(t){for(var n=0;n<e.length;++n)e[n]!==t&&delete this[e[n]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var e=r.Buffer;e?(r._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,n){return new e(t,n)},r._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):r._Buffer_from=r._Buffer_allocUnsafe=null}},1173:(e,t,n)=>{e.exports=p;var r,o=n(9693),a=o.LongBits,i=o.base64,s=o.utf8;function l(e,t,n){this.fn=e,this.len=t,this.next=void 0,this.val=n}function u(){}function c(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function p(){this.len=0,this.head=new l(u,0,0),this.tail=this.head,this.states=null}var d=function(){return o.Buffer?function(){return(p.create=function(){return new r})()}:function(){return new p}};function h(e,t,n){t[n]=255&e}function f(e,t){this.len=e,this.next=void 0,this.val=t}function g(e,t,n){for(;e.hi;)t[n++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[n++]=127&e.lo|128,e.lo=e.lo>>>7;t[n++]=e.lo}function _(e,t,n){t[n]=255&e,t[n+1]=e>>>8&255,t[n+2]=e>>>16&255,t[n+3]=e>>>24}p.create=d(),p.alloc=function(e){return new o.Array(e)},o.Array!==Array&&(p.alloc=o.pool(p.alloc,o.Array.prototype.subarray)),p.prototype._push=function(e,t,n){return this.tail=this.tail.next=new l(e,t,n),this.len+=t,this},f.prototype=Object.create(l.prototype),f.prototype.fn=function(e,t,n){for(;e>127;)t[n++]=127&e|128,e>>>=7;t[n]=e},p.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new f((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},p.prototype.int32=function(e){return e<0?this._push(g,10,a.fromNumber(e)):this.uint32(e)},p.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},p.prototype.uint64=function(e){var t=a.from(e);return this._push(g,t.length(),t)},p.prototype.int64=p.prototype.uint64,p.prototype.sint64=function(e){var t=a.from(e).zzEncode();return this._push(g,t.length(),t)},p.prototype.bool=function(e){return this._push(h,1,e?1:0)},p.prototype.fixed32=function(e){return this._push(_,4,e>>>0)},p.prototype.sfixed32=p.prototype.fixed32,p.prototype.fixed64=function(e){var t=a.from(e);return this._push(_,4,t.lo)._push(_,4,t.hi)},p.prototype.sfixed64=p.prototype.fixed64,p.prototype.float=function(e){return this._push(o.float.writeFloatLE,4,e)},p.prototype.double=function(e){return this._push(o.float.writeDoubleLE,8,e)};var m=o.Array.prototype.set?function(e,t,n){t.set(e,n)}:function(e,t,n){for(var r=0;r<e.length;++r)t[n+r]=e[r]};p.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(h,1,0);if(o.isString(e)){var n=p.alloc(t=i.length(e));i.decode(e,n,0),e=n}return this.uint32(t)._push(m,t,e)},p.prototype.string=function(e){var t=s.length(e);return t?this.uint32(t)._push(s.write,t,e):this._push(h,1,0)},p.prototype.fork=function(){return this.states=new c(this),this.head=this.tail=new l(u,0,0),this.len=0,this},p.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new l(u,0,0),this.len=0),this},p.prototype.ldelim=function(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this},p.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t},p._configure=function(e){r=e,p.create=d(),r._configure()}},3155:(e,t,n)=>{e.exports=a;var r=n(1173);(a.prototype=Object.create(r.prototype)).constructor=a;var o=n(9693);function a(){r.call(this)}function i(e,t,n){e.length<40?o.utf8.write(e,t,n):t.utf8Write?t.utf8Write(e,n):t.write(e,n)}a._configure=function(){a.alloc=o._Buffer_allocUnsafe,a.writeBytesBuffer=o.Buffer&&o.Buffer.prototype instanceof Uint8Array&&"set"===o.Buffer.prototype.set.name?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var r=0;r<e.length;)t[n++]=e[r++]}},a.prototype.bytes=function(e){o.isString(e)&&(e=o._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(a.writeBytesBuffer,t,e),this},a.prototype.string=function(e){var t=o.Buffer.byteLength(e);return this.uint32(t),t&&this._push(i,t,e),this},a._configure()},4154:e=>{e.exports='"use strict";var e={},a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(a){var r=require("worker_threads"),t=r.parentPort;t.on("message",(e=>onmessage({data:e})));var s=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:e=>(0,eval)(s.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>t.postMessage(e),performance:global.performance||{now:Date.now}})}var o=!1,d=function(){var e=Array.prototype.slice.call(arguments).join(" ");a?s.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if("load"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:"loaded"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=(...e)=>{postMessage({cmd:"callHandler",handler:a,args:e})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if("run"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===r.data.target||("checkMailbox"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(d("worker.js received unknown command "+r.data.cmd),d(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\n'},7067:()=>{},1296:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},2806:()=>{},6449:()=>{},2850:()=>{},5381:()=>{},685:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.resolveBackend=t.registerBackend=void 0;const n=new Map,r=[];t.registerBackend=(e,t,o)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createSessionHandler)throw new TypeError("not a valid backend");{const a=n.get(e);if(void 0===a)n.set(e,{backend:t,priority:o});else{if(a.priority>o)return;if(a.priority===o&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${o}`)}if(o>=0){const t=r.indexOf(e);-1!==t&&r.splice(t,1);for(let t=0;t<r.length;t++)if(n.get(r[t]).priority<=o)return void r.splice(t,0,e);r.push(e)}}},t.resolveBackend=async e=>{const t=0===e.length?r:e,o=[];for(const e of t){const t=n.get(e);if(t){if(t.initialized)return t.backend;if(t.aborted)continue;const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init()),await t.initPromise,t.initialized=!0,t.backend}catch(r){n||o.push({name:e,err:r}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${o.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)}},4798:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.registerBackend=void 0;var r=n(685);Object.defineProperty(t,"registerBackend",{enumerable:!0,get:function(){return r.registerBackend}})},3121:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.env=void 0;const r=n(9104);let o="warning";t.env={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);o=e}},get logLevel(){return o}},Object.defineProperty(t.env,"logLevel",{enumerable:!0})},2457:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.env=void 0;const r=n(3121);t.env=r.env},2235:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(4798),t),o(n(2457),t),o(n(3974),t),o(n(963),t),o(n(7852),t)},8036:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InferenceSession=void 0;const r=n(685),o=n(963);class a{constructor(e){this.handler=e}async run(e,t,n){const r={};let a={};if("object"!=typeof e||null===e||e instanceof o.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof o.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const s=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==s.indexOf(n)){const a=t[n];(null===a||a instanceof o.Tensor)&&(e=!0,i=!1,r[n]=a)}if(e){if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else a=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(const e of this.outputNames)r[e]=null;const s=await this.handler.run(e,r,a),l={};for(const e in s)if(Object.hasOwnProperty.call(s,e)){const t=s[e];t instanceof o.Tensor?l[e]=t:l[e]=new o.Tensor(t.type,t.data,t.dims)}return l}async release(){return this.handler.dispose()}static async create(e,t,n,o){let i,s={};if("string"==typeof e){if(i=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,"object"==typeof t&&null!==t)s=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let a=0,l=e.byteLength;if("object"==typeof t&&null!==t)s=t;else if("number"==typeof t){if(a=t,!Number.isSafeInteger(a))throw new RangeError("'byteOffset' must be an integer.");if(a<0||a>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(l=e.byteLength-a,"number"==typeof n){if(l=n,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||a+l>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-a}].`);if("object"==typeof o&&null!==o)s=o;else if(void 0!==o)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");i=new Uint8Array(r,a,l)}}const l=(s.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),u=await(0,r.resolveBackend)(l),c=await u.createSessionHandler(i,s);return new a(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}t.InferenceSession=a},3974:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InferenceSession=void 0;const r=n(8036);t.InferenceSession=r.InferenceSession},7852:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},2350:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tensorToImageData=t.tensorToDataURL=void 0,t.tensorToDataURL=(e,t)=>{const n=document.createElement("canvas");n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let o,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],a=e.dims[3]):(o=e.dims[3],a=e.dims[2]);const i=void 0!==t?.format?t.format:"RGB",s=t?.norm;let l,u;void 0===s||void 0===s.mean?l=[255,255,255,255]:"number"==typeof s.mean?l=[s.mean,s.mean,s.mean,s.mean]:(l=[s.mean[0],s.mean[1],s.mean[2],0],void 0!==s.mean[3]&&(l[3]=s.mean[3])),void 0===s||void 0===s.bias?u=[0,0,0,0]:"number"==typeof s.bias?u=[s.bias,s.bias,s.bias,s.bias]:(u=[s.bias[0],s.bias[1],s.bias[2],0],void 0!==s.bias[3]&&(u[3]=s.bias[3]));const c=a*o;let p=0,d=c,h=2*c,f=-1;"RGBA"===i?(p=0,d=c,h=2*c,f=3*c):"RGB"===i?(p=0,d=c,h=2*c):"RBG"===i&&(p=0,h=c,d=2*c);for(let t=0;t<a;t++)for(let n=0;n<o;n++){const o=(e.data[p++]-u[0])*l[0],a=(e.data[d++]-u[1])*l[1],i=(e.data[h++]-u[2])*l[2],s=-1===f?255:(e.data[f++]-u[3])*l[3];r.fillStyle="rgba("+o+","+a+","+i+","+s+")",r.fillRect(n,t,1,1)}return n.toDataURL()}throw new Error("Can not access image data")},t.tensorToImageData=(e,t)=>{const n=document.createElement("canvas").getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let o,a,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(o=e.dims[2],a=e.dims[1],i=e.dims[3]):(o=e.dims[3],a=e.dims[2],i=e.dims[1]);const s=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let u,c;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?c=[0,0,0,0]:"number"==typeof l.bias?c=[l.bias,l.bias,l.bias,l.bias]:(c=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(c[3]=l.bias[3]));const p=a*o;if(void 0!==t&&(void 0!==t.format&&4===i&&"RGBA"!==t.format||3===i&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const d=4;let h=0,f=1,g=2,_=3,m=0,b=p,y=2*p,w=-1;"RGBA"===s?(m=0,b=p,y=2*p,w=3*p):"RGB"===s?(m=0,b=p,y=2*p):"RBG"===s&&(m=0,y=p,b=2*p),r=n.createImageData(o,a);for(let t=0;t<a*o;h+=d,f+=d,g+=d,_+=d,t++)r.data[h]=(e.data[m++]-c[0])*u[0],r.data[f]=(e.data[b++]-c[1])*u[1],r.data[g]=(e.data[y++]-c[2])*u[2],r.data[_]=-1===w?255:(e.data[w++]-c[3])*u[3]}return r}},4866:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tensorFromPinnedBuffer=t.tensorFromGpuBuffer=t.tensorFromTexture=t.tensorFromImage=t.bufferToTensor=void 0;const r=n(5957);t.bufferToTensor=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:o}=t,a=t.norm??{mean:255,bias:0};let i,s;i="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],s="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const l=void 0!==t.format?t.format:"RGBA",u=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",c=n*o,p="RGBA"===u?new Float32Array(4*c):new Float32Array(3*c);let d=4,h=0,f=1,g=2,_=3,m=0,b=c,y=2*c,w=-1;"RGB"===l&&(d=3,h=0,f=1,g=2,_=-1),"RGBA"===u?w=3*c:"RBG"===u?(m=0,y=c,b=2*c):"BGR"===u&&(y=0,b=c,m=2*c);for(let t=0;t<c;t++,h+=d,g+=d,f+=d,_+=d)p[m++]=(e[h]+s[0])/i[0],p[b++]=(e[f]+s[1])/i[1],p[y++]=(e[g]+s[2])/i[2],-1!==w&&-1!==_&&(p[w++]=(e[_]+s[3])/i[3]);return"RGBA"===u?new r.Tensor("float32",p,[1,4,n,o]):new r.Tensor("float32",p,[1,3,n,o])},t.tensorFromImage=async(e,n)=>{const r="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,o="undefined"!=typeof ImageData&&e instanceof ImageData,a="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,i="string"==typeof e;let s,l=n??{};if(r){const t=document.createElement("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");if(null==r)throw new Error("Can not access image data");{let t=e.height,o=e.width;if(void 0!==n&&void 0!==n.resizedHeight&&void 0!==n.resizedWidth&&(t=n.resizedHeight,o=n.resizedWidth),void 0!==n){if(l=n,void 0!==n.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=t,l.width=o}else l.tensorFormat="RGBA",l.height=t,l.width=o;r.drawImage(e,0,0),s=r.getImageData(0,0,o,t).data}}else{if(!o){if(a){if(void 0===n)throw new Error("Please provide image config with format for Imagebitmap");const r=document.createElement("canvas");r.width=e.width,r.height=e.height;const o=r.getContext("2d");if(null!=o){const n=e.height,r=e.width;return o.drawImage(e,0,0,r,n),s=o.getImageData(0,0,r,n).data,l.height=n,l.width=r,(0,t.bufferToTensor)(s,l)}throw new Error("Can not access image data")}if(i)return new Promise(((n,r)=>{const o=document.createElement("canvas"),a=o.getContext("2d");if(!e||!a)return r();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{o.width=i.width,o.height=i.height,a.drawImage(i,0,0,o.width,o.height);const e=a.getImageData(0,0,o.width,o.height);l.height=o.height,l.width=o.width,n((0,t.bufferToTensor)(e.data,l))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let t,r;if(void 0!==n&&void 0!==n.resizedWidth&&void 0!==n.resizedHeight?(t=n.resizedHeight,r=n.resizedWidth):(t=e.height,r=e.width),void 0!==n&&(l=n),l.format="RGBA",l.height=t,l.width=r,void 0!==n){const n=document.createElement("canvas");n.width=r,n.height=t;const o=n.getContext("2d");if(null==o)throw new Error("Can not access image data");o.putImageData(e,0,0),s=o.getImageData(0,0,r,t).data}else s=e.data}}if(void 0!==s)return(0,t.bufferToTensor)(s,l);throw new Error("Input data provided is not supported - aborted tensor creation")},t.tensorFromTexture=(e,t)=>{const{width:n,height:o,download:a,dispose:i}=t,s=[1,o,n,4];return new r.Tensor({location:"texture",type:"float32",texture:e,dims:s,download:a,dispose:i})},t.tensorFromGpuBuffer=(e,t)=>{const{dataType:n,dims:o,download:a,dispose:i}=t;return new r.Tensor({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:o,download:a,dispose:i})},t.tensorFromPinnedBuffer=(e,t,n)=>new r.Tensor({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})},3990:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checkBigInt=t.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=t.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=void 0,t.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),t.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let n=!1;t.checkBigInt=()=>{if(!n){n=!0;const e="undefined"!=typeof BigInt64Array&&"function"==typeof BigInt64Array.from,r="undefined"!=typeof BigUint64Array&&"function"==typeof BigUint64Array.from;e&&(t.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("int64",BigInt64Array),t.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array,"int64")),r&&(t.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("uint64",BigUint64Array),t.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array,"uint64"))}}},5957:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const r=n(2350),o=n(4866),a=n(3990),i=n(106);t.Tensor=class{constructor(e,t,n){let r,o;if((0,a.checkBigInt)(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,o=e.dims,e.location){case"cpu-pinned":{const t=a.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,s;if("string"==typeof e)if(r=e,s=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=a.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(s=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else{const t=a.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===s)s=[i.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");o=s,this.cpuData=i,this.dataLocation="cpu"}const s=(0,i.calculateSize)(o);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=o,this.size=s}static async fromImage(e,t){return(0,o.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,o.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,o.tensorFromGpuBuffer)(e,t)}static fromPinnedBuffer(e,t,n){return(0,o.tensorFromPinnedBuffer)(e,t,n)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,i.tensorReshape)(this,e)}}},106:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.tensorReshape=t.calculateSize=void 0;const r=n(5957);t.calculateSize=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},t.tensorReshape=(e,t)=>{switch(e.location){case"cpu":return new r.Tensor(e.type,e.data,t);case"cpu-pinned":return new r.Tensor({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new r.Tensor({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new r.Tensor({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},963:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Tensor=void 0;const r=n(5957);t.Tensor=r.Tensor},9104:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0,t.version="1.16.0-dev.20230908-29a818caa0"},1583:(e,t)=>{var n,r=function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}function o(e){var t=Math.clz32(e&-e);return e?31-t:t}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},i={};function s(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,0,!0),o&&(i[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=f)return T}else{if(e<=-g)return k;if(e+1>=g)return v}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=s,n.fromNumber=l,n.fromBits=u;var c=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("number"==typeof t?(n=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?b:m;if((n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return p(e.substring(1),t,n).neg();for(var o=l(c(n,8)),a=m,i=0;i<e.length;i+=8){var s=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+s),n);if(s<8){var d=l(c(n,s));a=a.mul(d).add(l(u))}else a=(a=a.mul(o)).add(l(u))}return a.unsigned=t,a}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=p,n.fromValue=d;var h=4294967296,f=h*h,g=f/2,_=s(1<<24),m=s(0);n.ZERO=m;var b=s(0,!0);n.UZERO=b;var y=s(1);n.ONE=y;var w=s(1,!0);n.UONE=w;var x=s(-1);n.NEG_ONE=x;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var T=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=T;var k=u(0,-2147483648,!1);n.MIN_VALUE=k;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var o=l(c(e,6),this.unsigned),a=this,i="";;){var s=a.div(o),u=(a.sub(s.mul(o)).toInt()>>>0).toString(e);if((a=s).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(y)},S.neg=S.negate,S.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,o=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,l=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=a+(65535&e.low))>>>16,p+=(h+=o+l)>>>16,c+=(p+=n+s)>>>16,c+=t+i,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return this;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return this.unsigned?b:m;if(this.eq(k))return e.isOdd()?k:m;if(e.eq(k))return this.isOdd()?k:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(_)&&e.lt(_))return l(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=65535&this.high,a=this.low>>>16,i=65535&this.low,s=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,g=0,y=0,w=0;return y+=(w+=i*h)>>>16,g+=(y+=a*h)>>>16,y&=65535,g+=(y+=i*p)>>>16,f+=(g+=o*h)>>>16,g&=65535,f+=(g+=a*p)>>>16,g&=65535,f+=(g+=i*c)>>>16,f+=n*h+o*p+a*c+i*s,u((y&=65535)<<16|(w&=65535),(f&=65535)<<16|(g&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,o,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;a=b}else{if(this.eq(k))return e.eq(y)||e.eq(x)?k:e.eq(k)?y:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?y:x:(o=this.sub(e.mul(n)),a=n.add(o.div(e)));if(e.eq(k))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),s=i<=48?1:c(2,i-48),p=l(n),h=p.mul(e);h.isNegative()||h.gt(o);)h=(p=l(n-=s,this.unsigned)).mul(e);p.isZero()&&(p=y),a=a.add(p),o=o.sub(h)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},S.clz=S.countLeadingZeros,S.countTrailingZeros=function(){return this.low?o(this.low):o(this.high)+32},S.ctz=S.countTrailingZeros,S.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):u(32===e?this.high:this.high>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.rotateLeft=function(e){var t;return r(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?u(this.high,this.low,this.unsigned):e<32?(t=32-e,u(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),u(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},S.rotl=S.rotateLeft,S.rotateRight=function(e){var t;return r(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?u(this.high,this.low,this.unsigned):e<32?(t=32-e,u(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),u(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},S.rotr=S.rotateRight,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var $=n;return e.default=$,"default"in e?e.default:e}({});void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)},5686:(e,t,n)=>{n.r(t),n.d(t,{flatbuffers:()=>r});var r={};r.Offset,r.Table,r.SIZEOF_SHORT=2,r.SIZEOF_INT=4,r.FILE_IDENTIFIER_LENGTH=4,r.SIZE_PREFIX_LENGTH=4,r.Encoding={UTF8_BYTES:1,UTF16_STRING:2},r.int32=new Int32Array(2),r.float32=new Float32Array(r.int32.buffer),r.float64=new Float64Array(r.int32.buffer),r.isLittleEndian=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0],r.Long=function(e,t){this.low=0|e,this.high=0|t},r.Long.create=function(e,t){return 0==e&&0==t?r.Long.ZERO:new r.Long(e,t)},r.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},r.Long.prototype.equals=function(e){return this.low==e.low&&this.high==e.high},r.Long.ZERO=new r.Long(0,0),r.Builder=function(e){if(e)t=e;else var t=1024;this.bb=r.ByteBuffer.allocate(t),this.space=t,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},r.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},r.Builder.prototype.forceDefaults=function(e){this.force_defaults=e},r.Builder.prototype.dataBuffer=function(){return this.bb},r.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},r.Builder.prototype.prep=function(e,t){e>this.minalign&&(this.minalign=e);for(var n=1+~(this.bb.capacity()-this.space+t)&e-1;this.space<n+e+t;){var o=this.bb.capacity();this.bb=r.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-o}this.pad(n)},r.Builder.prototype.pad=function(e){for(var t=0;t<e;t++)this.bb.writeInt8(--this.space,0)},r.Builder.prototype.writeInt8=function(e){this.bb.writeInt8(this.space-=1,e)},r.Builder.prototype.writeInt16=function(e){this.bb.writeInt16(this.space-=2,e)},r.Builder.prototype.writeInt32=function(e){this.bb.writeInt32(this.space-=4,e)},r.Builder.prototype.writeInt64=function(e){this.bb.writeInt64(this.space-=8,e)},r.Builder.prototype.writeFloat32=function(e){this.bb.writeFloat32(this.space-=4,e)},r.Builder.prototype.writeFloat64=function(e){this.bb.writeFloat64(this.space-=8,e)},r.Builder.prototype.addInt8=function(e){this.prep(1,0),this.writeInt8(e)},r.Builder.prototype.addInt16=function(e){this.prep(2,0),this.writeInt16(e)},r.Builder.prototype.addInt32=function(e){this.prep(4,0),this.writeInt32(e)},r.Builder.prototype.addInt64=function(e){this.prep(8,0),this.writeInt64(e)},r.Builder.prototype.addFloat32=function(e){this.prep(4,0),this.writeFloat32(e)},r.Builder.prototype.addFloat64=function(e){this.prep(8,0),this.writeFloat64(e)},r.Builder.prototype.addFieldInt8=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt8(t),this.slot(e))},r.Builder.prototype.addFieldInt16=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt16(t),this.slot(e))},r.Builder.prototype.addFieldInt32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt32(t),this.slot(e))},r.Builder.prototype.addFieldInt64=function(e,t,n){!this.force_defaults&&t.equals(n)||(this.addInt64(t),this.slot(e))},r.Builder.prototype.addFieldFloat32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat32(t),this.slot(e))},r.Builder.prototype.addFieldFloat64=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat64(t),this.slot(e))},r.Builder.prototype.addFieldOffset=function(e,t,n){(this.force_defaults||t!=n)&&(this.addOffset(t),this.slot(e))},r.Builder.prototype.addFieldStruct=function(e,t,n){t!=n&&(this.nested(t),this.slot(e))},r.Builder.prototype.nested=function(e){if(e!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},r.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},r.Builder.prototype.slot=function(e){this.vtable[e]=this.offset()},r.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},r.Builder.growByteBuffer=function(e){var t=e.capacity();if(3221225472&t)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=t<<1,o=r.ByteBuffer.allocate(n);return o.setPosition(n-t),o.bytes().set(e.bytes(),n-t),o},r.Builder.prototype.addOffset=function(e){this.prep(r.SIZEOF_INT,0),this.writeInt32(this.offset()-e+r.SIZEOF_INT)},r.Builder.prototype.startObject=function(e){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=e;for(var t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()},r.Builder.prototype.endObject=function(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var e=this.offset(),t=this.vtable_in_use-1;t>=0&&0==this.vtable[t];t--);for(var n=t+1;t>=0;t--)this.addInt16(0!=this.vtable[t]?e-this.vtable[t]:0);this.addInt16(e-this.object_start);var o=(n+2)*r.SIZEOF_SHORT;this.addInt16(o);var a=0,i=this.space;e:for(t=0;t<this.vtables.length;t++){var s=this.bb.capacity()-this.vtables[t];if(o==this.bb.readInt16(s)){for(var l=r.SIZEOF_SHORT;l<o;l+=r.SIZEOF_SHORT)if(this.bb.readInt16(i+l)!=this.bb.readInt16(s+l))continue e;a=this.vtables[t];break}}return a?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,a-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e},r.Builder.prototype.finish=function(e,t,n){var o=n?r.SIZE_PREFIX_LENGTH:0;if(t){var a=t;if(this.prep(this.minalign,r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH+o),a.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var i=r.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(a.charCodeAt(i))}this.prep(this.minalign,r.SIZEOF_INT+o),this.addOffset(e),o&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},r.Builder.prototype.finishSizePrefixed=function(e,t){this.finish(e,t,!0)},r.Builder.prototype.requiredField=function(e,t){var n=this.bb.capacity()-e,r=n-this.bb.readInt32(n);if(0==this.bb.readInt16(r+t))throw new Error("FlatBuffers: field "+t+" must be set")},r.Builder.prototype.startVector=function(e,t,n){this.notNested(),this.vector_num_elems=t,this.prep(r.SIZEOF_INT,e*t),this.prep(n,e*t)},r.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},r.Builder.prototype.createString=function(e){if(e instanceof Uint8Array)var t=e;else{t=[];for(var n=0;n<e.length;){var r,o=e.charCodeAt(n++);(r=o<55296||o>=56320?o:(o<<10)+e.charCodeAt(n++)+-56613888)<128?t.push(r):(r<2048?t.push(r>>6&31|192):(r<65536?t.push(r>>12&15|224):t.push(r>>18&7|240,r>>12&63|128),t.push(r>>6&63|128)),t.push(63&r|128))}}this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length),n=0;for(var a=this.space,i=this.bb.bytes();n<t.length;n++)i[a++]=t[n];return this.endVector()},r.Builder.prototype.createLong=function(e,t){return r.Long.create(e,t)},r.ByteBuffer=function(e){this.bytes_=e,this.position_=0},r.ByteBuffer.allocate=function(e){return new r.ByteBuffer(new Uint8Array(e))},r.ByteBuffer.prototype.clear=function(){this.position_=0},r.ByteBuffer.prototype.bytes=function(){return this.bytes_},r.ByteBuffer.prototype.position=function(){return this.position_},r.ByteBuffer.prototype.setPosition=function(e){this.position_=e},r.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},r.ByteBuffer.prototype.readInt8=function(e){return this.readUint8(e)<<24>>24},r.ByteBuffer.prototype.readUint8=function(e){return this.bytes_[e]},r.ByteBuffer.prototype.readInt16=function(e){return this.readUint16(e)<<16>>16},r.ByteBuffer.prototype.readUint16=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8},r.ByteBuffer.prototype.readInt32=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24},r.ByteBuffer.prototype.readUint32=function(e){return this.readInt32(e)>>>0},r.ByteBuffer.prototype.readInt64=function(e){return new r.Long(this.readInt32(e),this.readInt32(e+4))},r.ByteBuffer.prototype.readUint64=function(e){return new r.Long(this.readUint32(e),this.readUint32(e+4))},r.ByteBuffer.prototype.readFloat32=function(e){return r.int32[0]=this.readInt32(e),r.float32[0]},r.ByteBuffer.prototype.readFloat64=function(e){return r.int32[r.isLittleEndian?0:1]=this.readInt32(e),r.int32[r.isLittleEndian?1:0]=this.readInt32(e+4),r.float64[0]},r.ByteBuffer.prototype.writeInt8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeUint8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeInt16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeUint16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeInt32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeUint32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeInt64=function(e,t){this.writeInt32(e,t.low),this.writeInt32(e+4,t.high)},r.ByteBuffer.prototype.writeUint64=function(e,t){this.writeUint32(e,t.low),this.writeUint32(e+4,t.high)},r.ByteBuffer.prototype.writeFloat32=function(e,t){r.float32[0]=t,this.writeInt32(e,r.int32[0])},r.ByteBuffer.prototype.writeFloat64=function(e,t){r.float64[0]=t,this.writeInt32(e,r.int32[r.isLittleEndian?0:1]),this.writeInt32(e+4,r.int32[r.isLittleEndian?1:0])},r.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var e="",t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)e+=String.fromCharCode(this.readInt8(this.position_+r.SIZEOF_INT+t));return e},r.ByteBuffer.prototype.__offset=function(e,t){var n=e-this.readInt32(e);return t<this.readInt16(n)?this.readInt16(n+t):0},r.ByteBuffer.prototype.__union=function(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e},r.ByteBuffer.prototype.__string=function(e,t){e+=this.readInt32(e);var n=this.readInt32(e),o="",a=0;if(e+=r.SIZEOF_INT,t===r.Encoding.UTF8_BYTES)return this.bytes_.subarray(e,e+n);for(;a<n;){var i,s=this.readUint8(e+a++);if(s<192)i=s;else{var l=this.readUint8(e+a++);if(s<224)i=(31&s)<<6|63&l;else{var u=this.readUint8(e+a++);i=s<240?(15&s)<<12|(63&l)<<6|63&u:(7&s)<<18|(63&l)<<12|(63&u)<<6|63&this.readUint8(e+a++)}}i<65536?o+=String.fromCharCode(i):(i-=65536,o+=String.fromCharCode(55296+(i>>10),56320+(1023&i)))}return o},r.ByteBuffer.prototype.__indirect=function(e){return e+this.readInt32(e)},r.ByteBuffer.prototype.__vector=function(e){return e+this.readInt32(e)+r.SIZEOF_INT},r.ByteBuffer.prototype.__vector_len=function(e){return this.readInt32(e+this.readInt32(e))},r.ByteBuffer.prototype.__has_identifier=function(e){if(e.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)if(e.charCodeAt(t)!=this.readInt8(this.position_+r.SIZEOF_INT+t))return!1;return!0},r.ByteBuffer.prototype.createLong=function(e,t){return r.Long.create(e,t)}}},__webpack_module_cache__={};function __nested_webpack_require_924642__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__nested_webpack_require_924642__),n.exports}__nested_webpack_require_924642__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __nested_webpack_require_924642__.d(t,{a:t}),t},__nested_webpack_require_924642__.d=(e,t)=>{for(var n in t)__nested_webpack_require_924642__.o(t,n)&&!__nested_webpack_require_924642__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__nested_webpack_require_924642__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__nested_webpack_require_924642__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __nested_webpack_exports__=__nested_webpack_require_924642__(1057);return __nested_webpack_exports__})(),module.exports=t()},"?7a2c":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?a42a":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?2b25":
/*!***********************!*\
  !*** sharp (ignored) ***!
  \***********************/()=>{},"?e65c":
/*!****************************!*\
  !*** stream/web (ignored) ***!
  \****************************/()=>{},"?569f":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?3f59":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?154a":
/*!*********************!*\
  !*** url (ignored) ***!
  \*********************/()=>{},"./src/backends/onnx.js":
/*!******************************!*\
  !*** ./src/backends/onnx.js ***!
  \******************************/(e,t,n)=>{var r;n.r(t),n.d(t,{ONNX:()=>a,executionProviders:()=>i});var o=n(/*! onnxruntime-web/webgpu */"./node_modules/onnxruntime-web/dist/ort.webgpu.min.js");let a=r||(r=n.t(o,2));const i=["webgpu"]},"./src/configs.js":
/*!************************!*\
  !*** ./src/configs.js ***!
  \************************/(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>a,PretrainedConfig:()=>o});var r=n(/*! ./utils/hub.js */"./src/utils/hub.js");class o{constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:o=null,local_files_only:a=!1,revision:i="main"}={}){let s=n??await async function(e,t){return await(0,r.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:o,local_files_only:a,revision:i});return new this(s)}}class a{static async from_pretrained(...e){return o.from_pretrained(...e)}}},"./src/env.js":
/*!********************!*\
  !*** ./src/env.js ***!
  \********************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>m});var r=n(/*! fs */"?569f"),o=n(/*! path */"?3f59"),a=n(/*! url */"?154a"),i=n(/*! ./backends/onnx.js */"./src/backends/onnx.js");const{env:s}=i.ONNX,l="undefined"!=typeof self&&"caches"in self,u=!b(r),c=!b(o),p=u&&c,d=p?o.dirname(o.dirname(a.fileURLToPath("file:///Users/ocavue/code/github/transformers.js/src/env.js"))):"./",h=p?o.join(d,"/.cache/"):null,f="/models/",g=p?o.join(d,f):f,_=s?.versions?.web;if(!_)throw new Error("Failed to get the onnx package version");s.wasm.wasmPaths=`https://www.unpkg.com/onnxruntime-web@${_}/dist/`;const m={backends:{onnx:s,tfjs:{}},__dirname:d,version:"2.6.0",allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!0,localModelPath:g,useFS:u,useBrowserCache:l,useFSCache:u,cacheDir:h,useCustomCache:!1,customCache:null};function b(e){return 0===Object.keys(e).length}},"./src/models.js":
/*!***********************!*\
  !*** ./src/models.js ***!
  \***********************/(e,t,n)=>{n.r(t),n.d(t,{AlbertForMaskedLM:()=>Ce,AlbertForQuestionAnswering:()=>Ie,AlbertForSequenceClassification:()=>Me,AlbertModel:()=>Oe,AlbertPreTrainedModel:()=>Ae,AutoModel:()=>ar,AutoModelForAudioClassification:()=>br,AutoModelForCTC:()=>mr,AutoModelForCausalLM:()=>ur,AutoModelForImageClassification:()=>hr,AutoModelForImageSegmentation:()=>fr,AutoModelForMaskGeneration:()=>_r,AutoModelForMaskedLM:()=>cr,AutoModelForObjectDetection:()=>gr,AutoModelForQuestionAnswering:()=>pr,AutoModelForSeq2SeqLM:()=>lr,AutoModelForSequenceClassification:()=>ir,AutoModelForTokenClassification:()=>sr,AutoModelForVision2Seq:()=>dr,BartForConditionalGeneration:()=>Ne,BartForSequenceClassification:()=>Ge,BartModel:()=>Be,BartPretrainedModel:()=>je,BaseModelOutput:()=>F,BeitForImageClassification:()=>rn,BeitModel:()=>nn,BeitPreTrainedModel:()=>tn,BertForMaskedLM:()=>L,BertForQuestionAnswering:()=>N,BertForSequenceClassification:()=>j,BertForTokenClassification:()=>B,BertModel:()=>z,BertPreTrainedModel:()=>R,BloomForCausalLM:()=>Gt,BloomModel:()=>Nt,BloomPreTrainedModel:()=>Bt,CLIPModel:()=>_t,CLIPPreTrainedModel:()=>gt,CLIPTextModelWithProjection:()=>mt,CLIPVisionModelWithProjection:()=>bt,CamembertForMaskedLM:()=>U,CamembertForQuestionAnswering:()=>H,CamembertForSequenceClassification:()=>W,CamembertForTokenClassification:()=>q,CamembertModel:()=>V,CamembertPreTrainedModel:()=>G,CausalLMOutput:()=>kr,CausalLMOutputWithPast:()=>Sr,CodeGenForCausalLM:()=>Rt,CodeGenModel:()=>Ft,CodeGenPreTrainedModel:()=>Dt,DebertaForMaskedLM:()=>Y,DebertaForQuestionAnswering:()=>Z,DebertaForSequenceClassification:()=>Q,DebertaForTokenClassification:()=>J,DebertaModel:()=>X,DebertaPreTrainedModel:()=>K,DebertaV2ForMaskedLM:()=>ne,DebertaV2ForQuestionAnswering:()=>ae,DebertaV2ForSequenceClassification:()=>re,DebertaV2ForTokenClassification:()=>oe,DebertaV2Model:()=>te,DebertaV2PreTrainedModel:()=>ee,DeiTForImageClassification:()=>hn,DeiTModel:()=>dn,DeiTPreTrainedModel:()=>pn,DetrForObjectDetection:()=>sn,DetrForSegmentation:()=>ln,DetrModel:()=>an,DetrObjectDetectionOutput:()=>un,DetrPreTrainedModel:()=>on,DetrSegmentationOutput:()=>cn,DistilBertForMaskedLM:()=>pe,DistilBertForQuestionAnswering:()=>ce,DistilBertForSequenceClassification:()=>le,DistilBertForTokenClassification:()=>ue,DistilBertModel:()=>se,DistilBertPreTrainedModel:()=>ie,GPT2LMHeadModel:()=>xt,GPT2Model:()=>wt,GPT2PreTrainedModel:()=>yt,GPTBigCodeForCausalLM:()=>Et,GPTBigCodeModel:()=>Ct,GPTBigCodePreTrainedModel:()=>It,GPTJForCausalLM:()=>Mt,GPTJModel:()=>Ot,GPTJPreTrainedModel:()=>At,GPTNeoForCausalLM:()=>kt,GPTNeoModel:()=>Tt,GPTNeoPreTrainedModel:()=>vt,GPTNeoXForCausalLM:()=>Pt,GPTNeoXModel:()=>$t,GPTNeoXPreTrainedModel:()=>St,LlamaForCausalLM:()=>jt,LlamaModel:()=>Lt,LlamaPreTrainedModel:()=>zt,M2M100ForConditionalGeneration:()=>Cn,M2M100Model:()=>In,M2M100PreTrainedModel:()=>Mn,MBartForConditionalGeneration:()=>We,MBartForSequenceClassification:()=>qe,MBartModel:()=>Ue,MBartPreTrainedModel:()=>Ve,MPNetForMaskedLM:()=>ye,MPNetForQuestionAnswering:()=>ve,MPNetForSequenceClassification:()=>we,MPNetForTokenClassification:()=>xe,MPNetModel:()=>be,MPNetPreTrainedModel:()=>me,MT5ForConditionalGeneration:()=>Le,MT5Model:()=>ze,MT5PreTrainedModel:()=>Re,MarianMTModel:()=>On,MarianModel:()=>An,MarianPreTrainedModel:()=>Pn,MaskedLMOutput:()=>vr,MobileBertForMaskedLM:()=>fe,MobileBertForQuestionAnswering:()=>_e,MobileBertForSequenceClassification:()=>ge,MobileBertModel:()=>he,MobileBertPreTrainedModel:()=>de,MobileViTForImageClassification:()=>en,MobileViTModel:()=>Zt,MobileViTPreTrainedModel:()=>Jt,ModelOutput:()=>D,MptForCausalLM:()=>Wt,MptModel:()=>Ut,MptPreTrainedModel:()=>Vt,OPTForCausalLM:()=>Kt,OPTModel:()=>Ht,OPTPreTrainedModel:()=>qt,PreTrainedModel:()=>E,PretrainedMixin:()=>Nn,QuestionAnsweringModelOutput:()=>Tr,ResNetForImageClassification:()=>_n,ResNetModel:()=>gn,ResNetPreTrainedModel:()=>fn,RobertaForMaskedLM:()=>Xe,RobertaForQuestionAnswering:()=>Je,RobertaForSequenceClassification:()=>Ye,RobertaForTokenClassification:()=>Qe,RobertaModel:()=>Ke,RobertaPreTrainedModel:()=>He,SamImageSegmentationOutput:()=>$n,SamModel:()=>Sn,SamPreTrainedModel:()=>kn,Seq2SeqLMOutput:()=>yr,SequenceClassifierOutput:()=>wr,SqueezeBertForMaskedLM:()=>Se,SqueezeBertForQuestionAnswering:()=>Pe,SqueezeBertForSequenceClassification:()=>$e,SqueezeBertModel:()=>ke,SqueezeBertPreTrainedModel:()=>Te,SwinForImageClassification:()=>yn,SwinModel:()=>bn,SwinPreTrainedModel:()=>mn,T5ForConditionalGeneration:()=>Fe,T5Model:()=>De,T5PreTrainedModel:()=>Ee,TokenClassifierOutput:()=>xr,ViTForImageClassification:()=>Qt,ViTModel:()=>Yt,ViTPreTrainedModel:()=>Xt,VisionEncoderDecoderModel:()=>ft,Wav2Vec2ForCTC:()=>Fn,Wav2Vec2ForSequenceClassification:()=>Rn,Wav2Vec2Model:()=>Dn,Wav2Vec2PreTrainedModel:()=>En,WavLMForCTC:()=>jn,WavLMForSequenceClassification:()=>Bn,WavLMModel:()=>Ln,WavLMPreTrainedModel:()=>zn,WhisperForConditionalGeneration:()=>ht,WhisperModel:()=>dt,WhisperPreTrainedModel:()=>pt,XLMForQuestionAnswering:()=>ot,XLMForSequenceClassification:()=>nt,XLMForTokenClassification:()=>rt,XLMModel:()=>et,XLMPreTrainedModel:()=>Ze,XLMRobertaForMaskedLM:()=>st,XLMRobertaForQuestionAnswering:()=>ct,XLMRobertaForSequenceClassification:()=>lt,XLMRobertaForTokenClassification:()=>ut,XLMRobertaModel:()=>it,XLMRobertaPreTrainedModel:()=>at,XLMWithLMHeadModel:()=>tt,YolosForObjectDetection:()=>vn,YolosModel:()=>xn,YolosObjectDetectionOutput:()=>Tn,YolosPreTrainedModel:()=>wn});var r=n(/*! ./configs.js */"./src/configs.js"),o=n(/*! ./utils/core.js */"./src/utils/core.js"),a=n(/*! ./utils/hub.js */"./src/utils/hub.js"),i=n(/*! ./utils/generation.js */"./src/utils/generation.js"),s=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),l=n(/*! ./backends/onnx.js */"./src/backends/onnx.js"),u=n(/*! ./transformers.js */"./src/transformers.js");const{InferenceSession:c,Tensor:p}=l.ONNX,d=0,h=1,f=2,g=3,_=4,m=new Map([["CLIPTextModelWithProjection",d],["CLIPVisionModelWithProjection",d]]);async function b(e,t,n){let r=`onnx/${t}${n.quantized?"_quantized":""}.onnx`,o=await(0,a.getModelFile)(e,r,!0,n);try{return await c.create(o,{executionProviders:l.executionProviders})}catch(e){if(1===l.executionProviders.length&&"wasm"===l.executionProviders[0])throw e;return console.warn(e),console.warn("Something went wrong during model construction (most likely a missing operation). Using `wasm` as a fallback. "),await c.create(o,{executionProviders:["wasm"]})}}async function y(e,t){const n=await async function(e,t){const n={},r=[];for(let o of e.inputNames)void 0===t[o]?r.push(o):n[o]=t[o];if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const o=Object.keys(t).length,a=e.inputNames.length;if(o>a){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${o} > ${a}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{let t=await e.run(n);return t=w(t),t}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",n),e}}function w(e){for(let t in e)e[t]instanceof p?e[t]=new s.Tensor(e[t]):"object"==typeof e[t]&&w(e[t]);return e}function x(e){if(e instanceof s.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new s.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new s.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function v(e,t){let n=e.config.pad_token_id??null,r=e.config.eos_token_id??null;(0,o.isIntegralNumber)(r)&&(r=[r]);let a=-1!==t.indexOf(n),i=null===r||!r.includes(n);if(a&&i){let e=BigInt64Array.from(t.data.map((e=>e!=n)));return new s.Tensor("int64",e,t.dims)}return new s.Tensor("int64",new BigInt64Array(t.data.length).fill(1n),t.dims)}function T(e){return new s.Tensor("bool",[e],[1])}async function k(e,t){const n=e.add_decoder_pkv??!0;let{encoder_outputs:r,past_key_values:o}=t;r||(r=(await A(e,t)).last_hidden_state);let a={input_ids:t.decoder_input_ids,encoder_hidden_states:r,use_cache_branch:T(!!o)};e.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(a.encoder_attention_mask=t.attention_mask),e.addPastKeyValues(a,o,n);const i=await y(e.decoder_merged_session,a);let s=i.logits;o=e.getPastKeyValues(i,o);const l=e.getAttentions(i);return new yr({logits:s,past_key_values:o,encoder_outputs:r,...l})}function S(e,t,n){let r=[],o=0;const a=e.requires_attention_mask??!0;let i=e.config.decoder_start_token_id;Array.isArray(i)||(i=[i]);for(let n of t){n.dims=[1,...n.dims];let t={inputs:n,encoder_outputs:null,prev_model_outputs:null,output_token_ids:i,done:!1,score:0,id:o++};a&&(t.attention_mask=v(e,n)),r.push(t)}return r}async function $(e,t){let n={[e.main_input_name]:t.inputs,decoder_input_ids:x(t.output_token_ids.slice(-1)),encoder_outputs:t.encoder_outputs,past_key_values:t.prev_model_outputs?.past_key_values};t.attention_mask&&(n.attention_mask=t.attention_mask);let r=await e.forward(n);return t.prev_model_outputs=r,t.encoder_outputs=r.encoder_outputs,r}function P(e,t){e.output_token_ids=[...e.output_token_ids,t]}async function A(e,t){let n={};for(let r of e.session.inputNames)n[r]=t[r];return await y(e.session,n)}async function O(e,t){let{input_ids:n,past_key_values:r,attention_mask:o}=t,a={input_ids:n,attention_mask:o??v(e,n),use_cache_branch:T(!!r)};e.addPastKeyValues(a,r);let i=await y(e.session,a),s=i.logits;return r=e.getPastKeyValues(i,r),{logits:s,past_key_values:r}}function M(e,t,n,r){let o=[],a=0;for(let i of t){let t,s=i.tolist().map(Number);i.dims=[1,...i.dims],r?(t=r[a],t.dims=[1,...t.dims]):t=v(e,i);let l={input:i,model_input_ids:i,attention_mask:t,prev_model_outputs:null,output_token_ids:s,num_output_tokens:n,done:!1,score:0,id:a++};o.push(l)}return o}async function I(e,t){let n=new BigInt64Array(t.output_token_ids.length).fill(1n),r={input_ids:t.model_input_ids,attention_mask:new s.Tensor("int64",n,[1,n.length]),past_key_values:t.prev_model_outputs?.past_key_values},o=await e.forward(r);return t.prev_model_outputs=o,o}function C(e,t){e.output_token_ids=[...e.output_token_ids,t],e.model_input_ids=new s.Tensor("int64",[BigInt(t)],[1,1])}class E extends o.Callable{main_input_name="input_ids";constructor(e,t){super(),this.config=e,this.session=t;const n=this.constructor.name,r=m.get(n);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,r===_?(this.can_generate=!0,this._runBeam=I,this._getStartBeams=M,this._updateBeam=C,this._forward=O):r===f||r===g?(this.can_generate=!0,this._runBeam=$,this._getStartBeams=S,this._updateBeam=P,this._forward=k):this._forward=A}async dispose(){let e=[];for(let t of Object.keys(this)){let n=this[t];n instanceof c&&e.push(n.handler.dispose())}return await Promise.all(e)}static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:o=null,cache_dir:i=null,local_files_only:s=!1,revision:l="main",model_file_name:u=null}={}){let c,p={quantized:t,progress_callback:n,config:o,cache_dir:i,local_files_only:s,revision:l,model_file_name:u},y=m.get(this.name);return y===_?c=await Promise.all([r.AutoConfig.from_pretrained(e,p),b(e,p.model_file_name??"decoder_model_merged",p)]):y===f||y===g?c=await Promise.all([r.AutoConfig.from_pretrained(e,p),b(e,"encoder_model",p),b(e,"decoder_model_merged",p),(0,a.getModelJSON)(e,"generation_config.json",!1,p)]):y===h?c=await Promise.all([r.AutoConfig.from_pretrained(e,p),b(e,"encoder_model",p),b(e,"decoder_model_merged",p)]):(y!==d&&console.warn(`Model type for ${this.name} not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),c=await Promise.all([r.AutoConfig.from_pretrained(e,p),b(e,p.model_file_name??"model",p)])),new this(...c)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_processor(e,t,n=null){const r=new i.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new i.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new i.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.forced_bos_token_id&&r.push(new i.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new i.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){let n=t>1||null===e.forced_bos_token_id?t:t+1;null!==e.forced_decoder_ids&&(n+=e.forced_decoder_ids[e.forced_decoder_ids.length-1][0]),r.push(new i.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.forced_decoder_ids&&r.push(new i.ForceTokensLogitsProcessor(e.forced_decoder_ids)),null!==n&&r.extend(n),r}_get_generation_config(e){let t=new i.GenerationConfig;return"generation_config"in this&&Object.assign(t,this.generation_config),null!==e&&Object.assign(t,e),t}async generate(e,t=null,n=null,{inputs_attention_mask:r=null}={}){if(!this.can_generate){const e=Kn.get(this.config.model_type);let t=`The current model class (${this.constructor.name}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw e&&(t+=` Please use one of the following classes instead: {'${e.constructor.name}'}`),Error(t)}if(!(e instanceof s.Tensor||(0,o.isTypedArray)(e)||Array.isArray(e)))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${e.constructor.name}".`);let a;if(this.config.is_encoder_decoder)a=0;else if(a=e instanceof s.Tensor?e.dims[0]:e.length,0===a)throw Error("Must supply a non-empty array of input token ids.");t=this._get_generation_config(t),n=n??new i.LogitsProcessorList,n=this._get_logits_processor(t,a,n);let l=1;const u=l+(t.max_new_tokens??1/0),c=Number.isInteger(t.max_length)&&null===(t.max_new_tokens??null);let p=i.Sampler.getSampler(t),d=this.getStartBeams(e,l,r);for(;d.some((e=>!e.done))&&l<u;){let e=[];for(let r of d){if(r.done){e.push(r);continue}if(c&&r.output_token_ids.length>=t.max_length){r.done=!0,e.push(r);continue}let o=await this.runBeam(r);t.output_attentions&&this.addAttentionsToBeam(r,o),t.output_scores;let a=o.logits.slice(null,-1,null);n(r.output_token_ids,a);let i=p(a);for(let[t,n]of i){let o={...r};this.updateBeam(o,t),o.score+=n,t===this.config.eos_token_id&&(o.done=!0),e.push(o)}}++l,e=this.groupBeams(e).map((e=>e.sort(((e,t)=>t.score-e.score)).slice(0,t.num_beams))),d=e.flat(),t.callback_function&&t.callback_function(d)}const h=this.groupBeams(d),f=e=>h.map((n=>t.num_return_sequences>1?n.slice(0,t.num_return_sequences).map((t=>t[e])):[n[0][e]])).flat(),g=f("output_token_ids");if(t.return_dict_in_generate){return{sequences:g,decoder_attentions:f("decoder_attentions"),cross_attentions:f("cross_attentions")}}return g}addAttentionsToBeam(e,t){if(this.config.is_encoder_decoder){if(!t.cross_attentions||0===t.cross_attentions.length)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.cross_attentions||(e.cross_attentions=[]),e.cross_attentions.push(t.cross_attentions)}if(!t.decoder_attentions||0===t.decoder_attentions.length)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.decoder_attentions||(e.decoder_attentions=[]),e.decoder_attentions.push(t.decoder_attentions)}groupBeams(e){const t=Object.create(null);for(const n of e)void 0===t[n.id]?t[n.id]=[n]:t[n.id].push(n);return Object.values(t)}getPastKeyValues(e,t){const n=Object.create(null);for(const r in e)if(r.startsWith("present")){let o=r.replace("present","past_key_values");t&&r.includes("encoder")?n[o]=t[o]:n[o]=e[r]}return n}getAttentions(e){const t=Object.create(null);for(const n of["cross_attentions","decoder_attentions"]){const r=[];for(const t in e)if(t.startsWith(n)){r[t.split(".").pop()]=e[t]}t[n]=r}return t}addPastKeyValues(e,t,n=!1){if(t)Object.assign(e,t);else if(n){let t=[1,this.num_encoder_heads,0,this.encoder_dim_kv];for(let n=0;n<this.num_encoder_layers;++n)e[`past_key_values.${n}.encoder.key`]=new s.Tensor("float32",[],t),e[`past_key_values.${n}.encoder.value`]=new s.Tensor("float32",[],t);let n=[1,this.num_decoder_heads,0,this.decoder_dim_kv];for(let t=0;t<this.num_decoder_layers;++t)e[`past_key_values.${t}.decoder.key`]=new s.Tensor("float32",[],n),e[`past_key_values.${t}.decoder.value`]=new s.Tensor("float32",[],n)}else if(this.config.multi_query){let t=[1,0,2*this.dim_kv];for(let n=0;n<this.num_layers;++n)e[`past_key_values.${n}.key_value`]=new s.Tensor("float32",[],t)}else if("bloom"===this.config.model_type){let t=[1*this.num_heads,this.dim_kv,0],n=[1*this.num_heads,0,this.dim_kv];for(let r=0;r<this.num_layers;++r)e[`past_key_values.${r}.key`]=new s.Tensor("float32",[],t),e[`past_key_values.${r}.value`]=new s.Tensor("float32",[],n)}else{let t=[1,this.num_heads,0,this.dim_kv];for(let n=0;n<this.num_layers;++n)e[`past_key_values.${n}.key`]=new s.Tensor("float32",[],t),e[`past_key_values.${n}.value`]=new s.Tensor("float32",[],t)}}getStartBeams(e,t,n){return this._getStartBeams(this,e,t,n)}async runBeam(e){return await this._runBeam(this,e)}updateBeam(e,t){return this._updateBeam(e,t)}}class D{}class F extends D{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class R extends E{}class z extends R{}class L extends R{async _call(e){return new vr(await super._call(e))}}class j extends R{async _call(e){return new wr(await super._call(e))}}class B extends R{async _call(e){return new xr(await super._call(e))}}class N extends R{async _call(e){return new Tr(await super._call(e))}}class G extends E{}class V extends G{}class U extends G{async _call(e){return new vr(await super._call(e))}}class W extends G{async _call(e){return new wr(await super._call(e))}}class q extends G{async _call(e){return new xr(await super._call(e))}}class H extends G{async _call(e){return new Tr(await super._call(e))}}class K extends E{}class X extends K{}class Y extends K{async _call(e){return new vr(await super._call(e))}}class Q extends K{async _call(e){return new wr(await super._call(e))}}class J extends K{async _call(e){return new xr(await super._call(e))}}class Z extends K{async _call(e){return new Tr(await super._call(e))}}class ee extends E{}class te extends ee{}class ne extends ee{async _call(e){return new vr(await super._call(e))}}class re extends ee{async _call(e){return new wr(await super._call(e))}}class oe extends ee{async _call(e){return new xr(await super._call(e))}}class ae extends ee{async _call(e){return new Tr(await super._call(e))}}class ie extends E{}class se extends ie{}class le extends ie{async _call(e){return new wr(await super._call(e))}}class ue extends ie{async _call(e){return new xr(await super._call(e))}}class ce extends ie{async _call(e){return new Tr(await super._call(e))}}class pe extends ie{async _call(e){return new vr(await super._call(e))}}class de extends E{}class he extends de{}class fe extends de{async _call(e){return new vr(await super._call(e))}}class ge extends de{async _call(e){return new wr(await super._call(e))}}class _e extends de{async _call(e){return new Tr(await super._call(e))}}class me extends E{}class be extends me{}class ye extends me{async _call(e){return new vr(await super._call(e))}}class we extends me{async _call(e){return new wr(await super._call(e))}}class xe extends me{async _call(e){return new xr(await super._call(e))}}class ve extends me{async _call(e){return new Tr(await super._call(e))}}class Te extends E{}class ke extends Te{}class Se extends Te{async _call(e){return new vr(await super._call(e))}}class $e extends Te{async _call(e){return new wr(await super._call(e))}}class Pe extends Te{async _call(e){return new Tr(await super._call(e))}}class Ae extends E{}class Oe extends Ae{}class Me extends Ae{async _call(e){return new wr(await super._call(e))}}class Ie extends Ae{async _call(e){return new Tr(await super._call(e))}}class Ce extends Ae{async _call(e){return new vr(await super._call(e))}}class Ee extends E{}class De extends Ee{}class Fe extends Ee{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class Re extends E{}class ze extends Re{}class Le extends Re{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class je extends E{}class Be extends je{}class Ne extends je{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class Ge extends je{async _call(e){return new wr(await super._call(e))}}class Ve extends E{}class Ue extends Ve{}class We extends Ve{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class qe extends Ve{async _call(e){return new wr(await super._call(e))}}class He extends E{}class Ke extends He{}class Xe extends He{async _call(e){return new vr(await super._call(e))}}class Ye extends He{async _call(e){return new wr(await super._call(e))}}class Qe extends He{async _call(e){return new xr(await super._call(e))}}class Je extends He{async _call(e){return new Tr(await super._call(e))}}class Ze extends E{}class et extends Ze{}class tt extends Ze{async _call(e){return new vr(await super._call(e))}}class nt extends Ze{async _call(e){return new wr(await super._call(e))}}class rt extends Ze{async _call(e){return new xr(await super._call(e))}}class ot extends Ze{async _call(e){return new Tr(await super._call(e))}}class at extends E{}class it extends at{}class st extends at{async _call(e){return new vr(await super._call(e))}}class lt extends at{async _call(e){return new wr(await super._call(e))}}class ut extends at{async _call(e){return new xr(await super._call(e))}}class ct extends at{async _call(e){return new Tr(await super._call(e))}}class pt extends E{}class dt extends pt{}class ht extends pt{requires_attention_mask=!1;main_input_name="input_features";constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(e,t=null,n=null){if(t=this._get_generation_config(t),t.return_timestamps??=!1,t.return_timestamps&&(n=[new i.WhisperTimeStampLogitsProcessor(t)]),t.return_token_timestamps&&(t.output_attentions=!0,t.return_dict_in_generate=!0,"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!t.alignment_heads))throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");const r=await super.generate(e,t,n);return t.return_token_timestamps&&t.alignment_heads&&(r.token_timestamps=this._extract_token_timestamps(r,t.alignment_heads,t.num_frames)),r}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);const i=e.cross_attentions.map((e=>{let r=Array.from({length:this.config.decoder_layers},((t,n)=>(0,s.cat)(e.map((e=>e[n])),2))),o=(0,s.stack)(t.map((([e,t])=>n?r[e].slice(null,t,null,[0,n]):r[e].slice(null,t))));o=o.transpose(1,0,2,3);let[i,l]=(0,s.std_mean)(o,-2,0,!0),c=o.clone();for(let e=0;e<c.dims[0];++e){let t=c[e];for(let n=0;n<t.dims[0];++n){let r=t[n];const o=i[e][n][0],s=l[e][n][0];for(let e=0;e<r.dims[0];++e){let t=r[e];for(let e=0;e<t.data.length;++e)t.data[e]=(t.data[e]-s.data[e])/o.data[e];t.data.set((0,u.medianFilter)(t.data,a))}}}return(0,s.mean)(c,1)})),l=[e.sequences.length,e.sequences[0].length],c=new s.Tensor("float32",new Float32Array(l[0]*l[1]),l);for(let e=0;e<l[0];++e){const t=i[e].neg().squeeze_(0);let[n,a]=(0,s.dynamicTimeWarping)(t),l=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),u=(0,o.mergeArrays)([1],l).map((e=>!!e)),p=[];for(let e=0;e<u.length;++e)u[e]&&p.push(a[e]*r);c[e].data.set(p,1)}return c}}class ft extends E{main_input_name="pixel_values";add_decoder_pkv=!1;constructor(e,t,n){super(e,t),this.decoder_merged_session=n,this.num_layers=this.config.decoder.n_layer,this.num_heads=this.config.decoder.n_head,this.dim_kv=this.config.decoder.n_embd/this.num_heads}}class gt extends E{}class _t extends gt{}class mt extends gt{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class bt extends gt{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class yt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class wt extends yt{}class xt extends yt{}class vt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class Tt extends vt{}class kt extends vt{}class St extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class $t extends St{}class Pt extends St{}class At extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class Ot extends At{}class Mt extends At{}class It extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class Ct extends It{}class Et extends It{}class Dt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class Ft extends Dt{}class Rt extends Dt{}class zt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class Lt extends zt{}class jt extends zt{}class Bt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class Nt extends Bt{}class Gt extends Bt{}class Vt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class Ut extends Vt{}class Wt extends Vt{}class qt extends E{constructor(e,t){super(e,t),this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class Ht extends qt{}class Kt extends qt{}class Xt extends E{}class Yt extends Xt{}class Qt extends Xt{async _call(e){return new wr(await super._call(e))}}class Jt extends E{}class Zt extends Jt{}class en extends Jt{async _call(e){return new wr(await super._call(e))}}class tn extends E{}class nn extends tn{}class rn extends tn{async _call(e){return new wr(await super._call(e))}}class on extends E{}class an extends on{}class sn extends on{async _call(e){return new un(await super._call(e))}}class ln extends on{async _call(e){return new cn(await super._call(e))}}class un extends D{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class cn extends D{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class pn extends E{}class dn extends pn{}class hn extends pn{async _call(e){return new wr(await super._call(e))}}class fn extends E{}class gn extends fn{}class _n extends fn{async _call(e){return new wr(await super._call(e))}}class mn extends E{}class bn extends mn{}class yn extends mn{async _call(e){return new wr(await super._call(e))}}class wn extends E{}class xn extends wn{}class vn extends wn{async _call(e){return new Tn(await super._call(e))}}class Tn extends D{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class kn extends E{}class Sn extends kn{async _call(e){return new $n(await super._call(e))}}class $n extends D{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Pn extends E{}class An extends Pn{}class On extends Pn{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async forward(e){return await k(this,e)}}class Mn extends E{}class In extends Mn{}class Cn extends Mn{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async forward(e){return await k(this,e)}}class En extends E{}class Dn extends En{}class Fn extends En{async _call(e){return new kr(await super._call(e))}}class Rn extends En{async _call(e){return new wr(await super._call(e))}}class zn extends E{}class Ln extends zn{}class jn extends zn{async _call(e){return new kr(await super._call(e))}}class Bn extends zn{async _call(e){return new wr(await super._call(e))}}class Nn{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:o=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",model_file_name:l=null}={}){let u,c={quantized:t,progress_callback:n,config:o,cache_dir:a,local_files_only:i,revision:s,model_file_name:l};if(o=await r.AutoConfig.from_pretrained(e,c),c.config||(c.config=o),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let t of this.MODEL_CLASS_MAPPINGS)if(u=t.get(o.model_type),u)return await u.from_pretrained(e,c);if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${o.model_type}", attempting to construct from base class.`),await E.from_pretrained(e,c);throw Error(`Unsupported model type: ${o.model_type}`)}}const Gn=new Map([["bert",z],["camembert",V],["deberta",X],["deberta-v2",te],["mpnet",be],["albert",Oe],["distilbert",se],["roberta",Ke],["xlm",et],["xlm-roberta",it],["clip",_t],["mobilebert",he],["squeezebert",ke],["wav2vec2",Dn],["wavlm",Ln],["detr",an],["vit",Yt],["mobilevit",Zt],["beit",nn],["deit",dn],["resnet",gn],["swin",bn],["yolos",xn],["sam",Sn]]),Vn=new Map([["t5",De],["mt5",ze],["bart",Be],["mbart",Ue],["marian",An],["whisper",dt],["m2m_100",In]]),Un=new Map([["bloom",Nt],["gpt2",wt],["gptj",Ot],["gpt_bigcode",Ct],["gpt_neo",Tt],["gpt_neox",$t],["codegen",Ft],["llama",Lt],["mpt",Ut],["opt",Ht]]),Wn=new Map([["bert",j],["camembert",W],["deberta",Q],["deberta-v2",re],["mpnet",we],["albert",Me],["distilbert",le],["roberta",Ye],["xlm",nt],["xlm-roberta",lt],["bart",Ge],["mbart",qe],["mobilebert",ge],["squeezebert",$e]]),qn=new Map([["bert",B],["camembert",q],["deberta",J],["deberta-v2",oe],["mpnet",xe],["distilbert",ue],["roberta",Qe],["xlm",rt],["xlm-roberta",ut]]),Hn=new Map([["t5",Fe],["mt5",Le],["bart",Ne],["mbart",We],["whisper",ht],["marian",On],["m2m_100",Cn]]),Kn=new Map([["bloom",Gt],["gpt2",xt],["gptj",Mt],["gpt_bigcode",Et],["gpt_neo",kt],["gpt_neox",Pt],["codegen",Rt],["llama",jt],["mpt",Wt],["opt",Kt]]),Xn=new Map([["bert",L],["camembert",U],["deberta",Y],["deberta-v2",ne],["mpnet",ye],["albert",Ce],["distilbert",pe],["roberta",Xe],["xlm",tt],["xlm-roberta",st],["mobilebert",fe],["squeezebert",Se]]),Yn=new Map([["bert",N],["camembert",H],["deberta",Z],["deberta-v2",ae],["mpnet",ve],["albert",Ie],["distilbert",ce],["roberta",Je],["xlm",ot],["xlm-roberta",ct],["mobilebert",_e],["squeezebert",Pe]]),Qn=new Map([["vision-encoder-decoder",ft]]),Jn=new Map([["vit",Qt],["mobilevit",en],["beit",rn],["deit",hn],["resnet",_n],["swin",yn]]),Zn=new Map([["detr",sn],["yolos",vn]]),er=new Map([["detr",ln]]),tr=new Map([["sam",Sn]]),nr=new Map([["wav2vec2",Fn],["wavlm",jn]]),rr=new Map([["wav2vec2",Rn],["wavlm",Bn]]),or=[[Gn,d],[Vn,h],[Un,_],[Wn,d],[qn,d],[Hn,f],[Kn,_],[Xn,d],[Yn,d],[Qn,g],[Jn,d],[er,d],[Zn,d],[tr,d],[nr,d],[rr,d]];for(const[e,t]of or)for(const n of e.values())m.set(n.name,t);class ar extends Nn{static MODEL_CLASS_MAPPINGS=[Gn,Vn,Un];static BASE_IF_FAIL=!0}class ir extends Nn{static MODEL_CLASS_MAPPINGS=[Wn]}class sr extends Nn{static MODEL_CLASS_MAPPINGS=[qn]}class lr extends Nn{static MODEL_CLASS_MAPPINGS=[Hn]}class ur extends Nn{static MODEL_CLASS_MAPPINGS=[Kn]}class cr extends Nn{static MODEL_CLASS_MAPPINGS=[Xn]}class pr extends Nn{static MODEL_CLASS_MAPPINGS=[Yn]}class dr extends Nn{static MODEL_CLASS_MAPPINGS=[Qn]}class hr extends Nn{static MODEL_CLASS_MAPPINGS=[Jn]}class fr extends Nn{static MODEL_CLASS_MAPPINGS=[er]}class gr extends Nn{static MODEL_CLASS_MAPPINGS=[Zn]}class _r extends Nn{static MODEL_CLASS_MAPPINGS=[tr]}class mr extends Nn{static MODEL_CLASS_MAPPINGS=[nr]}class br extends Nn{static MODEL_CLASS_MAPPINGS=[rr]}class yr extends D{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:o=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=o}}class wr extends D{constructor({logits:e}){super(),this.logits=e}}class xr extends D{constructor({logits:e}){super(),this.logits=e}}class vr extends D{constructor({logits:e}){super(),this.logits=e}}class Tr extends D{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class kr extends D{constructor({logits:e}){super(),this.logits=e}}class Sr extends D{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}},"./src/pipelines.js":
/*!**************************!*\
  !*** ./src/pipelines.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>T,AutomaticSpeechRecognitionPipeline:()=>k,FeatureExtractionPipeline:()=>v,FillMaskPipeline:()=>_,ImageClassificationPipeline:()=>$,ImageSegmentationPipeline:()=>P,ImageToTextPipeline:()=>S,ObjectDetectionPipeline:()=>O,Pipeline:()=>d,QuestionAnsweringPipeline:()=>g,SummarizationPipeline:()=>b,Text2TextGenerationPipeline:()=>m,TextClassificationPipeline:()=>h,TextGenerationPipeline:()=>w,TokenClassificationPipeline:()=>f,TranslationPipeline:()=>y,ZeroShotClassificationPipeline:()=>x,ZeroShotImageClassificationPipeline:()=>A,pipeline:()=>C});var r=n(/*! ./tokenizers.js */"./src/tokenizers.js"),o=n(/*! ./models.js */"./src/models.js"),a=n(/*! ./processors.js */"./src/processors.js"),i=n(/*! ./utils/core.js */"./src/utils/core.js"),s=n(/*! ./utils/maths.js */"./src/utils/maths.js"),l=n(/*! ./utils/audio.js */"./src/utils/audio.js"),u=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),c=n(/*! ./utils/image.js */"./src/utils/image.js");async function p(e){return Array.isArray(e)||(e=[e]),e=await Promise.all(e.map((e=>c.RawImage.read(e))))}class d extends i.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}async _call(e,...t){let n=this.tokenizer(e,{padding:!0,truncation:!0});return[n,await this.model(n)]}}class h extends d{async _call(e,{topk:t=1}={}){let n="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid().data:e=>(0,s.softmax)(e.data),[r,o]=await super._call(e),a=this.model.config.id2label,i=[];for(let e of o.logits){let r=n(e),o=(0,s.getTopItems)(r,t).map((function(e){return{label:a[e[0]],score:e[1]}}));1===t?i.push(...o):i.push(o)}return Array.isArray(e)||1===t?i:i[0]}}class f extends d{async _call(e,{ignore_labels:t=["O"]}={}){let n=Array.isArray(e);n||(e=[e]);let r=this.tokenizer,[o,a]=await super._call(e),i=a.logits,l=this.model.config.id2label,u=[];for(let e=0;e<i.dims[0];++e){let n=o.input_ids[e],a=i[e],c=[];for(let e=0;e<a.dims[0];++e){let o=a[e],i=(0,s.max)(o.data)[1],u=l[i];if(t.includes(u))continue;let p=r.decode([n[e].item()],{skip_special_tokens:!0});if(""===p)continue;let d=(0,s.softmax)(o.data);c.push({entity:u,score:d[i],index:e,word:p,start:null,end:null})}u.push(c)}return n?u:u[0]}}class g extends d{async _call(e,t,{topk:n=1}={}){let r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),o=await this.model(r),a=[];for(let e=0;e<o.start_logits.dims[0];++e){let t=r.input_ids[e],l=t.indexOf(this.tokenizer.sep_token_id),u=Array.from((0,s.softmax)(o.start_logits[e].data)).map(((e,t)=>[e,t])).filter((e=>e[1]>l)),c=Array.from((0,s.softmax)(o.end_logits[e].data)).map(((e,t)=>[e,t])).filter((e=>e[1]>l)),p=(0,i.product)(u,c).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(p.length,n);++e){let[n,r,o]=p[e],i=[...t].slice(n,r+1),s=this.tokenizer.decode(i,{skip_special_tokens:!0});a.push({answer:s,score:o})}}return 1===n?a[0]:a}}class _ extends d{async _call(e,{topk:t=5}={}){let[n,r]=await super._call(e),o=this.tokenizer,a=[];for(let e=0;e<n.input_ids.dims[0];++e){let i=n.input_ids[e],l=i.indexOf(this.tokenizer.mask_token_id);if(-1===l)throw Error(`Mask token (${o.mask_token}) not found in text.`);let u=r.logits[e][l],c=(0,s.getTopItems)((0,s.softmax)(u.data),t);a.push(c.map((e=>{let t=[...i];return t[l]=e[0],{score:e[1],token:e[0],token_str:o.model.vocab[e[0]],sequence:o.decode(t,{skip_special_tokens:!0})}})))}return Array.isArray(e)?a:a[0]}}class m extends d{_key=null;async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));let n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));let r,o={padding:!0,truncation:!0};r=this instanceof y&&"_build_translation_inputs"in this.tokenizer?this.tokenizer._build_translation_inputs(e,o,t).input_ids:this.tokenizer(e,o).input_ids;let a=await this.model.generate(r,t),i=this.tokenizer.batch_decode(a,{skip_special_tokens:!0});return null!==this._key&&(i=i.map((e=>null===this._key?e:{[this._key]:e}))),i}}class b extends m{_key="summary_text"}class y extends m{_key="translation_text"}class w extends d{async _call(e,t={}){let n="string"==typeof e||e instanceof String;n&&(e=[e]),this.tokenizer.padding_side="left";let r=this.tokenizer(e,{padding:!0,truncation:!0}),o=r.input_ids,a=r.attention_mask,i=await this.model.generate(o,t,null,{inputs_attention_mask:a});const s=this.tokenizer.batch_decode(i,{skip_special_tokens:!0}),l=Array.from({length:e.length},(e=>[]));for(let t=0;t<s.length;++t){l[Math.floor(t/i.length*e.length)].push({generated_text:s[t]})}return n&&1===l.length?l[0]:l}}class x extends d{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){let o=Array.isArray(e);o||(e=[e]),Array.isArray(t)||(t=[t]);let a=t.map((e=>n.replace("{}",e))),i=r||1===t.length,l=[];for(let n of e){let e,r=[];for(let e of a){let t=this.tokenizer(n,{text_pair:e,padding:!0,truncation:!0}),o=await this.model(t);i?r.push([o.logits.data[this.contradiction_id],o.logits.data[this.entailment_id]]):r.push(o.logits.data[this.entailment_id])}e=i?r.map((e=>(0,s.softmax)(e)[1])):(0,s.softmax)(r);let o=e.map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));l.push({sequence:n,labels:o.map((e=>t[e[1]])),scores:o.map((e=>e[0]))})}return o?l:l[0]}}class v extends d{async _call(e,{pooling:t="none",normalize:n=!1}={}){let[r,o]=await super._call(e),a=o.last_hidden_state??o.logits;if("none"===t);else{if("mean"!==t)throw Error(`Pooling method '${t}' not supported.`);a=(0,u.mean_pooling)(a,r.attention_mask)}return n&&(a=a.normalize(2,-1)),a}}class T extends d{constructor(e){super(e)}async _preprocess(e,t){return(0,i.isString)(e)&&(e=await(0,l.read_audio)(e,t)),e}async _call(e,{topk:t=5}={}){let n=!Array.isArray(e);n&&(e=[e]);const r=this.model.config.id2label,o=this.processor.feature_extractor.config.sampling_rate;let a=[];for(let n of e){n=await this._preprocess(n,o);const e=await this.processor(n),i=(await this.model(e)).logits[0];let l=(0,s.getTopItems)((0,s.softmax)(i.data),t).map((function(e){return{label:r[e[0]],score:e[1]}}));1===t?a.push(...l):a.push(l)}return n&&1!==t?a[0]:a}}class k extends d{constructor(e){super(e)}async _preprocess(e,t){return(0,i.isString)(e)&&(e=await(0,l.read_audio)(e,t)),e}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t={}){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');let n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate;let o=[];for(let t of e){t=await this._preprocess(t,r);const e=await this.processor(t),n=(await this.model(e)).logits[0],a=[];for(let e of n)a.push((0,s.max)(e.data)[1]);const i=this.tokenizer.decode(a);o.push({text:i})}return n?o[0]:o}async _call_whisper(e,t={}){let n=t.return_timestamps??!1,r=t.chunk_length_s??0,o=t.stride_length_s??null,a=t.chunk_callback??null,l=t.force_full_sequences??!1;"word"===n&&(t.return_token_timestamps=!0);let u=(0,i.pop)(t,"language",null),c=(0,i.pop)(t,"task",null);if(u||c||n){if(t.forced_decoder_ids)throw new Error("Cannot specify `language`/`task`/`return_timestamps` and `forced_decoder_ids` at the same time.");let e=this.tokenizer.get_decoder_prompt_ids({language:u,task:c,no_timestamps:!n});e.length>0&&(t.forced_decoder_ids=e)}let p=!Array.isArray(e);p&&(e=[e]);const d=this.processor.feature_extractor.config.sampling_rate,h=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,f=this.processor.feature_extractor.config.hop_length;let g=[];for(let i of e){i=await this._preprocess(i,d);let e=[];if(r>0){if(null===o)o=r/6;else if(r<=o)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const t=d*r,n=d*o,a=t-2*n;let s=0;for(;s<i.length;){let r=i.subarray(s,s+t),o=await this.processor(r),l=0===s,u=s+a>=i.length;e.push({stride:[r.length,l?0:n,u?0:n],input_features:o.input_features,is_last:u}),s+=a}}else e=[{stride:[i.length,0,0],input_features:(await this.processor(i)).input_features,is_last:!0}];for(let r of e){t.num_frames=Math.floor(r.stride[0]/f);let e=await this.model.generate(r.input_features,t);"word"===n?(r.tokens=e.sequences[0],r.token_timestamps=e.token_timestamps.tolist()[0].map((e=>(0,s.round)(e,2)))):r.tokens=e[0],r.stride=r.stride.map((e=>e/d)),null!==a&&a(r)}let[u,c]=this.tokenizer._decode_asr(e,{time_precision:h,return_timestamps:n,force_full_sequences:l});g.push({text:u,...c})}return p?g[0]:g}}class S extends d{constructor(e){super(e)}async _call(e,t={}){let n=Array.isArray(e);e=await p(e);let{pixel_values:r}=await this.processor(e),o=[];for(let e of r){e.dims=[1,...e.dims];let n=await this.model.generate(e,t),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));o.push(r)}return n?o:o[0]}}class $ extends d{constructor(e){super(e)}async _call(e,{topk:t=1}={}){let n=Array.isArray(e);e=await p(e);let{pixel_values:r}=await this.processor(e),o=await this.model({pixel_values:r}),a=this.model.config.id2label,i=[];for(let e of o.logits){let n=(0,s.getTopItems)((0,s.softmax)(e.data),t).map((function(e){return{label:a[e[0]],score:e[1]}}));1===t?i.push(...n):i.push(n)}return n||1===t?i:i[0]}}class P extends d{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:o=null,target_sizes:a=null,subtask:i=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");let s=(e=await p(e)).map((e=>[e.height,e.width])),{pixel_values:l,pixel_mask:u}=await this.processor(e),d=await this.model({pixel_values:l,pixel_mask:u}),h=null;if(null!==i)h=this.subtasks_mapping[i];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.feature_extractor){h=this.processor.feature_extractor[t].bind(this.processor.feature_extractor),i=e;break}let f=[];if("panoptic"!==i&&"instance"!==i)throw"semantic"===i?Error("semantic segmentation not yet supported."):Error(`Subtask ${i} not supported.`);{let e=h(d,t,n,r,o,a??s)[0],i=e.segmentation,l=this.model.config.id2label;for(let t of e.segments_info){let e=new Uint8ClampedArray(i.data.length);for(let n=0;n<i.data.length;++n)i.data[n]===t.id&&(e[n]=255);let n=new c.RawImage(e,i.dims[1],i.dims[0],1);f.push({score:t.score,label:l[t.label_id],mask:n})}}return f}}class A extends d{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){let r=Array.isArray(e);e=await p(e);let o=t.map((e=>n.replace("{}",e))),a=this.tokenizer(o,{padding:!0,truncation:!0}),{pixel_values:i}=await this.processor(e),l=await this.model({...a,pixel_values:i}),u=[];for(let e of l.logits_per_image){let n=(0,s.softmax)(e.data);u.push([...n].map(((e,n)=>({score:e,label:t[n]}))))}return r?u:u[0]}}class O extends d{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){let r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");e=await p(e);let o=n?null:e.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:i}=await this.processor(e),s=await this.model({pixel_values:a,pixel_mask:i}),l=this.processor.feature_extractor.post_process_object_detection(s,t,o),u=this.model.config.id2label;const c=l.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:u[e.classes[r]],box:this._get_bounding_box(t,!n)})))));return r?c:c[0]}_get_bounding_box(e,t){t&&(e=e.map((e=>0|e)));const[n,r,o,a]=e;return{xmin:n,ymin:r,xmax:o,ymax:a}}}const M={"text-classification":{tokenizer:r.AutoTokenizer,pipeline:h,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:f,model:o.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:g,model:o.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:_,model:o.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:b,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:y,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:m,model:o.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:w,model:o.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:x,model:o.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:T,model:o.AutoModelForAudioClassification,processor:a.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:k,model:[o.AutoModelForSeq2SeqLM,o.AutoModelForCTC],processor:a.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:S,model:o.AutoModelForVision2Seq,processor:a.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:$,model:o.AutoModelForImageClassification,processor:a.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:P,model:o.AutoModelForImageSegmentation,processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:A,model:o.AutoModel,processor:a.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:O,model:o.AutoModelForObjectDetection,processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:v,model:o.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"}},I={"sentiment-analysis":"text-classification",ner:"token-classification",vqa:"visual-question-answering",asr:"automatic-speech-recognition",embeddings:"feature-extraction"};async function C(e,t=null,{quantized:n=!0,progress_callback:r=null,config:o=null,cache_dir:a=null,local_files_only:s=!1,revision:l="main"}={}){e=I[e]??e;let u=M[e.split("_",1)[0]];if(!u)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(M)}]`);t||(t=u.default.model,console.log(`No model specified. Using default model: "${t}".`));let c={quantized:n,progress_callback:r,config:o,cache_dir:a,local_files_only:s,revision:l};const p=new Map([["tokenizer",u.tokenizer],["model",u.model],["processor",u.processor]]);let d=await async function(e,t,n){const r=Object.create(null),o=[];for(let[a,i]of e.entries()){if(!i)continue;let e;e=Array.isArray(i)?new Promise((async(e,r)=>{let o;for(let r of i)try{return void e(await r.from_pretrained(t,n))}catch(e){o=e}r(o)})):i.from_pretrained(t,n),r[a]=e,o.push(e)}await Promise.all(o);for(let[e,t]of Object.entries(r))r[e]=await t;return r}(p,t,c);return d.task=e,(0,i.dispatchCallback)(r,{status:"ready",task:e,model:t}),new(0,u.pipeline)(d)}},"./src/processors.js":
/*!***************************!*\
  !*** ./src/processors.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{AutoProcessor:()=>$,BeitFeatureExtractor:()=>_,ConvNextFeatureExtractor:()=>d,DeiTFeatureExtractor:()=>g,DetrFeatureExtractor:()=>m,FeatureExtractor:()=>c,ImageFeatureExtractor:()=>p,MobileViTFeatureExtractor:()=>f,Processor:()=>v,SamImageProcessor:()=>y,SamProcessor:()=>T,ViTFeatureExtractor:()=>h,Wav2Vec2FeatureExtractor:()=>x,Wav2Vec2ProcessorWithLM:()=>S,WhisperFeatureExtractor:()=>w,WhisperProcessor:()=>k,YolosFeatureExtractor:()=>b});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),o=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),i=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),s=(n(/*! ./utils/image.js */"./src/utils/image.js"),n(/*! ./utils/audio.js */"./src/utils/audio.js"));function l([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function u(e,t=.5,n=null){const r=e.logits,o=e.pred_boxes,[i,s,u]=r.dims;if(null!==n&&n.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let e=0;e<i;++e){let i=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},d=r[e],h=o[e];for(let e=0;e<s;++e){let n=d[e],r=(0,a.max)(n.data)[1];if(r===u-1)continue;let o=(0,a.softmax)(n.data)[r];if(o>t){let t=h[e].data;t=l(t),null!==i&&(t=t.map(((e,t)=>e*i[(t+1)%2]))),p.boxes.push(t),p.classes.push(r),p.scores.push(o)}}c.push(p)}return c}class c extends r.Callable{constructor(e){super(),this.config=e}}class p extends c{constructor(e){super(e),this.image_mean=this.config.image_mean,this.image_std=this.config.image_std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.size=this.config.size,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.pad_size=this.config.pad_size,this.do_pad=(this.config.do_pad??!1)&&this.pad_size}async preprocess(e){this.do_convert_rgb&&(e=e.rgb());const t=e.width,n=e.height;if(this.do_resize){let r,o;if(Number.isInteger(this.size)?(r=this.size,o=this.config.max_size??r):(r=this.size.shortest_edge,o=this.size.longest_edge),void 0!==r||void 0!==o){const a=void 0===r?1:Math.max(r/t,r/n),i=t*a,s=n*a,l=void 0===o?1:Math.min(o/i,o/s),u=Math.floor(Number((i*l).toPrecision(3))),c=Math.floor(Number((s*l).toPrecision(3)));e=await e.resize(u,c,{resample:this.resample})}else{if(void 0===this.size.width||void 0===this.size.height)throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(this.size)}`);e=await e.resize(this.size.width,this.size.height,{resample:this.resample})}}if(this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}let r=[e.height,e.width];if(this.do_pad){let t=0,n=this.pad_size.width-e.width,r=0,o=this.pad_size.height-e.height;e=await e.pad([t,n,r,o])}const o=Float32Array.from(e.data);if(this.do_rescale)for(let e=0;e<o.length;++e)o[e]=this.rescale_factor*o[e];if(this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let t=0;t<o.length;t+=e.channels)for(let n=0;n<e.channels;++n)o[t+n]=(o[t+n]-this.image_mean[n])/this.image_std[n]}let a=[e.height,e.width,e.channels],s=new i.Tensor("float32",o,a);return{original_size:[n,t],reshaped_input_size:r,pixel_values:(0,i.transpose)(s,[2,0,1])}}async _call(e){Array.isArray(e)||(e=[e]);let t=await Promise.all(e.map((e=>this.preprocess(e))));return t.forEach((e=>e.pixel_values.dims=[1,...e.pixel_values.dims])),{pixel_values:(0,i.cat)(t.map((e=>e.pixel_values))),original_sizes:t.map((e=>e.original_size)),reshaped_input_sizes:t.map((e=>e.reshaped_input_size))}}}class d extends p{}class h extends p{}class f extends p{}class g extends p{}class _ extends p{}class m extends p{async _call(e){let t=await super._call(e),n=[t.pixel_values.dims[0],64,64];return t.pixel_mask=new i.Tensor("int64",new BigInt64Array(n.reduce(((e,t)=>e*t))).fill(1n),n),t}post_process_object_detection(...e){return u(...e)}remove_low_and_no_objects(e,t,n,r){let o=[],i=[],s=[];for(let l=0;l<e.dims[0];++l){let u=e[l],c=t[l],p=(0,a.max)(u.data)[1];if(p===r)continue;let d=(0,a.softmax)(u.data)[p];d>n&&(o.push(c),i.push(d),s.push(p))}return[o,i,s]}check_segment_validity(e,t,n,r=.5,o=.8){let a=[],i=0,s=0;for(let o=0;o<e.length;++o)e[o]===n&&(a.push(o),++i),t[n].data[o]>=r&&++s;let l=i>0&&s>0;if(l){l=i/s>o}return[l,a]}compute_segments(e,t,n,r,o,a=null,s=null){let[l,u]=s??e[0].dims,c=new i.Tensor("int32",new Int32Array(l*u),[l,u]),p=[];if(null!==s)for(let t=0;t<e.length;++t)e[t]=(0,i.interpolate)(e[t],s,"bilinear",!1);let d=new Int32Array(e[0].data.length),h=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];for(let t=0;t<e[n].data.length;++t)e[n].data[t]*=r,e[n].data[t]>h[t]&&(d[t]=n,h[t]=e[n].data[t])}let f=0;for(let a=0;a<n.length;++a){let i=n[a],[s,l]=this.check_segment_validity(d,e,a,r,o);if(s){++f;for(let e of l)c.data[e]=f;p.push({id:f,label_id:i,score:t[a]})}}return[c,p]}post_process_panoptic_segmentation(e,t=.5,n=.5,r=.8,o=null,a=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);const s=e.logits,l=e.pred_masks.sigmoid();let[u,c,p]=s.dims;if(p-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let e=0;e<u;++e){let u=null!==a?a[e]:null,c=s[e],h=l[e],[f,g,_]=this.remove_low_and_no_objects(c,h,t,p);if(0===_.length){let[e,t]=u??h.dims.slice(-2),n=new i.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);d.push({segmentation:n,segments_info:[]});continue}let[m,b]=this.compute_segments(f,g,_,n,r,o,u);d.push({segmentation:m,segments_info:b})}return d}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class b extends p{post_process_object_detection(...e){return u(...e)}}class y extends p{async _call(e,t){let{pixel_values:n,original_sizes:o,reshaped_input_sizes:a}=await super._call(e),s=(0,r.calculateDimensions)(t);if(3===s.length)s=[1,...s],t=[t];else if(4!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let e=0;e<t.length;++e){let n=o[e],r=a[e],i=[r[0]/n[0],r[1]/n[1]];for(let n=0;n<t[e].length;++n)for(let r=0;r<t[e][n].length;++r)for(let o=0;o<t[e][n][r].length;++o)t[e][n][r][o]*=i[o]}return{pixel_values:n,original_sizes:o,reshaped_input_sizes:a,input_points:new i.Tensor("int64",BigInt64Array.from(t.flat(1/0).map((e=>BigInt(Math.round(e))))),s)}}post_process_masks(e,t,n,{mask_threshold:r=0,binarize:o=!0,pad_size:a=null}={}){let s=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){let u=t[a],c=n[a],p=e[a],d=[];for(let e=0;e<p.dims[0];++e){let t=p[e],n=(0,i.interpolate)(t,l,"bilinear",!1);n=n.slice(null,[0,c[0]],[0,c[1]]),n=(0,i.interpolate)(p,u,"bilinear",!1),o&&(n=new i.Tensor("bool",Array.from(n.data).map((e=>e>r)),n.dims)),n.dims=[1,...n.dims],d.push(n)}let h=(0,i.cat)(d);s.push(h)}return s}}class w extends c{constructor(e){super(e),this.config.mel_filters??=(0,s.getMelFilters)(this.config.sampling_rate,this.config.n_fft,this.config.feature_size)}calcOffset(e,t){return Math.abs((e+t)%(2*t)-t)}padReflect(e,t,n){const r=new Float32Array(e.length+t+n),o=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[this.calcOffset(n,o)];for(let a=1;a<=n;++a)r[o+t+a]=e[this.calcOffset(o-a,o)];return r}stft(e,t){const n=this.config.n_fft,r=2*(n-1),o=2*(2*n-1),i=2**Math.ceil(Math.log2(o)),s=n+2,l=new Float32Array(s*e.length),u=new Float32Array(o),c=new Float32Array(i),p=new Float32Array(i),d=new Float32Array(i),h=new Float32Array(i),f=new Float32Array(i),g=new Float32Array(i),_=-2*Math.PI/n,m=Math.cos(_),b=Math.sin(_);for(let e=0;e<o>>1;++e){const t=(e+1-n)**2/2,r=Math.sqrt(m**2+b**2)**t,o=t*Math.atan2(b,m);let a=2*e;u[a]=r*Math.cos(o),u[a+1]=r*Math.sin(o),c[a]=u[a],c[a+1]=-u[a+1]}const y=u.subarray(r,o),w=new a.FFT(i>>1);w.transform(h,c);for(let n=0;n<e.length;++n){const o=e[n];for(let e=0;e<y.length;e+=2){const n=e+1,r=e>>1,a=o[r]*t[r];p[e]=a*y[e],p[n]=a*y[n]}w.transform(f,p);for(let e=0;e<h.length;e+=2){const t=e+1;d[e]=f[e]*h[e]-f[t]*h[t],d[t]=f[e]*h[t]+f[t]*h[e]}w.inverseTransform(g,d);const a=n*s;for(let e=0;e<s;e+=2){const t=g[e+r],n=g[e+r+1],o=y[e],i=y[e+1],s=a+e;l[s]=t*o-n*i,l[s+1]=t*i+n*o}}return{data:l,dims:[e.length,s]}}fram_wave(e,t=!0){const n=[],r=Math.floor((this.config.n_fft-1)/2)+1,o=e.length;for(let a=0;a<o+1;a+=this.config.hop_length){let i;if(t){let t=a>r?a-r:0,n=a<o-r?a+r:o;i=e.subarray(t,n),0===t?i=this.padReflect(i,-a+r,0):n===o&&(i=this.padReflect(i,0,a-o+r))}else{i=new Float32Array(this.config.n_fft);const t=e.subarray(a,a+this.config.n_fft);t.length<this.config.n_fft?(i.set(t),i.fill(0,t.length,this.config.n_fft)):i=t}n.push(i)}return n}hanning(e){if(e<1)return[];if(1===e)return[1];const t=e-1,n=new Float32Array(t);for(let r=0;r<t;++r){const o=2*r-e+1;n[r]=.5+.5*Math.cos(Math.PI*o/t)}return n}_extract_fbank_features(e){const t=new Float32Array(this.config.n_samples);t.set(e);const n=this.hanning(this.config.n_fft+1),r=this.fram_wave(t),o=this.stft(r,n),a=o.data,i=o.dims[0]-1,s=o.dims[1]>>1,l=new Float32Array(i*s);for(let e=0;e<i;++e)for(let t=0;t<s;++t){let n=e*s+t,r=n<<1,o=a[r]**2+a[r+1]**2;l[n]=o}const u=this.config.mel_filters,c=u.length,p=new Float32Array(c*i);let d=0;for(let e=0;e<c;++e){const t=u[e];for(let e=0;e<i;++e){let n=0;for(let r=0;r<s;++r)n+=t[r]*l[e*s+r];p[d++]=n}}const h=new Float32Array(p.length);let f=0;for(let e=0;e<p.length;++e){const t=Math.max(1e-10,p[e]),n=Math.log10(t);h[e]=n,f=Math.max(n,f)}for(let e=0;e<h.length;++e)h[e]=Math.max(h[e],f-8),h[e]=(h[e]+4)/4;return{data:h,dims:[c,i]}}async _call(e){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`WhisperFeatureExtractor expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead.If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`);e.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`.");let t=e.slice(0,this.config.n_samples),n=this._extract_fbank_features(t);return{input_features:new i.Tensor("float32",n.data,[1,...n.dims])}}}class x extends c{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`Wav2Vec2FeatureExtractor expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead.If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`);e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new i.Tensor("float32",t,n),attention_mask:new i.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}class v extends r.Callable{constructor(e){super(),this.feature_extractor=e}async _call(e){return await this.feature_extractor(e)}}class T extends v{async _call(e,t){return await this.feature_extractor(e,t)}post_process_masks(...e){return this.feature_extractor.post_process_masks(...e)}}class k extends v{async _call(e){return await this.feature_extractor(e)}}class S extends v{async _call(e){return await this.feature_extractor(e)}}class ${static FEATURE_EXTRACTOR_CLASS_MAPPING={WhisperFeatureExtractor:w,ViTFeatureExtractor:h,MobileViTFeatureExtractor:f,ConvNextFeatureExtractor:d,BeitFeatureExtractor:_,DeiTFeatureExtractor:g,DetrFeatureExtractor:m,YolosFeatureExtractor:b,SamImageProcessor:y,Wav2Vec2FeatureExtractor:x};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:k,Wav2Vec2ProcessorWithLM:S,SamProcessor:T};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main"}={}){let s=n??await(0,o.getModelJSON)(e,"preprocessor_config.json",!0,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i}),l=s.feature_extractor_type??s.image_processor_type,u=this.FEATURE_EXTRACTOR_CLASS_MAPPING[l];if(!u){if(void 0===s.size)throw new Error(`Unknown Feature Extractor type: ${s.feature_extractor_type}`);console.warn("Feature extractor type not specified, assuming ImageFeatureExtractor due to size parameter in config."),u=p}return new(this.PROCESSOR_CLASS_MAPPING[s.processor_class]??v)(new u(s))}}},"./src/tokenizers.js":
/*!***************************!*\
  !*** ./src/tokenizers.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>ie,AutoTokenizer:()=>je,BartTokenizer:()=>me,BertTokenizer:()=>ae,BloomTokenizer:()=>xe,CLIPTokenizer:()=>Re,CamembertTokenizer:()=>he,CodeGenTokenizer:()=>Fe,CodeLlamaTokenizer:()=>Te,DebertaTokenizer:()=>ue,DebertaV2Tokenizer:()=>ce,DistilBertTokenizer:()=>de,FalconTokenizer:()=>$e,GPT2Tokenizer:()=>_e,GPTNeoXTokenizer:()=>Pe,HerbertTokenizer:()=>pe,LlamaTokenizer:()=>ve,M2M100Tokenizer:()=>Me,MBart50Tokenizer:()=>ye,MBartTokenizer:()=>be,MPNetTokenizer:()=>Se,MarianTokenizer:()=>ze,MobileBertTokenizer:()=>se,NllbTokenizer:()=>Oe,PreTrainedTokenizer:()=>re,RobertaTokenizer:()=>we,SqueezeBertTokenizer:()=>le,T5Tokenizer:()=>ge,TokenizerModel:()=>f,Wav2Vec2CTCTokenizer:()=>Le,WhisperTokenizer:()=>De,XLMRobertaTokenizer:()=>ke,XLMTokenizer:()=>fe});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),o=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),i=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),s=n(/*! ./utils/data-structures.js */"./src/utils/data-structures.js");async function l(e,t){return await Promise.all([(0,o.getModelJSON)(e,"tokenizer.json",!0,t),(0,o.getModelJSON)(e,"tokenizer_config.json",!0,t)])}function u(e,t=!0){return void 0!==e.Regex?new RegExp(t?e.Regex:`(${e.Regex})`,"gu"):void 0!==e.String?e.String:(console.warn("Unknown pattern type:",e),null)}function c(e){return new Map(Object.entries(e))}function p(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function d(e){return e.replace(/[\u0300-\u036f]/g,"")}const h="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E";class f extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new g(e);case"Unigram":return new _(e,...t);case"BPE":return new y(e);default:if(e.vocab)return new w(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return this.encode(e)}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){let t=e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id));return this.fuse_unk&&(t=function(e,t){let n=[],r=0;for(;r<e.length;)if(n.push(e[r]),e[r]===t)for(;r<e.length&&e[r]===t;)++r;else++r;return n}(t,this.unk_token_id)),t}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class g extends f{constructor(e){super(e),this.tokens_to_ids=c(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){let t=[];for(let n of e){let e=[...n],r=!1,o=0,a=[];for(;o<e.length;){let t=e.length,n=null;for(;o<t;){let r=e.slice(o,t).join("");if(o>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}a.push(n),o=t}r?t.push(this.unk_token):t.push(...a)}return t}}class _ extends f{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t){const n=e.vocab[t];this.vocab[t]=n[0],this.scores[t]=n[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=t.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new s.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.sentence,n=t.length;let r=0;for(;r<n;){const n=1;let o=!1;const a=[];for(let i of this.trie.commonPrefixSearch(t.slice(r))){a.push(i);const t=this.tokens_to_ids.get(i),s=this.scores[t],l=i.length;e.insert(r,l,s,t),o||l!==n||(o=!0)}o||e.insert(r,n,this.unkScore,this.unk_token_id),r+=n}}tokenize(e){const t=new s.TokenLattice(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(t),t.tokens()}encode(e){let t=[];for(let n of e){const e=this.tokenize(n);t.push(...e)}return t}}const m=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))];let t=e.slice(),n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);let r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),b=(0,r.reverseDictionary)(m);class y extends f{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=c(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;this.bpe_ranks=new Map(e.merges.map(((e,t)=>[e,t]))),this.merges=e.merges.map((e=>e.split(this.BPE_SPLIT_TOKEN))),this.end_of_word_suffix=e.end_of_word_suffix,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new s.PriorityQueue(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},o=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:o,next:null};o.next=r,this._add_node(e,o),o=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(t.token+this.BPE_SPLIT_TOKEN+t.next.token);void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){let t=[];for(let n of e){let e=this.bpe(n);for(let n of e)this.tokens_to_ids.has(n)?t.push(n):this.byte_fallback?t.push(...Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`))):t.push(this.unk_token)}return t}}class w extends f{constructor(e,t){super(e),this.tokens_to_ids=c(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class x extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new M(e);case"Precompiled":return new ee(e);case"Sequence":return new O(e);case"Replace":return new v(e);case"NFC":return new T(e);case"NFKD":return new k(e);case"Strip":return new S(e);case"StripAccents":return new $(e);case"Lowercase":return new P(e);case"Prepend":return new A(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class v extends x{normalize(e){let t=u(this.config.pattern);return null===t?e:e=e.replaceAll(t,this.config.content)}}class T extends x{normalize(e){return e=e.normalize("NFC")}}class k extends x{normalize(e){return e=e.normalize("NFKD")}}class S extends x{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class $ extends x{normalize(e){return e=d(e)}}class P extends x{normalize(e){return e=e.toLowerCase()}}class A extends x{normalize(e){return e=this.config.prepend+e}}class O extends x{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>x.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class M extends x{_tokenize_chinese_chars(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n],o=r.charCodeAt(0);this._is_chinese_char(o)?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}_is_chinese_char(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}normalize(e){return this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class I extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new C(e);case"Sequence":return new te(e);case"WhitespaceSplit":return new ne(e);case"Metaspace":return new J(e);case"ByteLevel":return new E(e);case"Split":return new D(e);case"Punctuation":return new F(e);case"Digits":return new R(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e){let t=[];return t=Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e))):this.pre_tokenize_text(e),t.flat()}_call(e){return this.pre_tokenize(e)}}class C extends I{constructor(e){super(),this.pattern=new RegExp(`[^\\s${h}]+|[${h}]`,"gu")}pre_tokenize_text(e){return e.trim().match(this.pattern)||[]}}class E extends I{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=m,this.text_encoder=new TextEncoder}pre_tokenize_text(e){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class D extends I{constructor(e){super(),this.config=e,this.pattern=u(this.config.pattern,this.config.invert)}pre_tokenize_text(e){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:e.split(this.pattern).filter((e=>e))}}class F extends I{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${h}]+|[${h}]+`,"gu")}pre_tokenize_text(e){return e.match(this.pattern)||[]}}class R extends I{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e){return e.match(this.pattern)||[]}}class z extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new B(e);case"ByteLevel":return new N(e);case"RobertaProcessing":return new j(e);case"BertProcessing":return new L(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class L extends z{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null){return e=(0,r.mergeArrays)([this.cls],e,[this.sep]),null!==t&&(e=(0,r.mergeArrays)(e,[this.sep],t,[this.sep])),e}}class j extends L{}class B extends z{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null){let n=null===t?this.single:this.pair,o=[];for(let a of n)"SpecialToken"in a?o.push(a.SpecialToken.id):"Sequence"in a&&("A"===a.Sequence.id?o=(0,r.mergeArrays)(o,e):"B"===a.Sequence.id&&(o=(0,r.mergeArrays)(o,t)));return o}}class N extends z{post_process(e){return e}}class G extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){switch(e.type){case"WordPiece":return new H(e);case"Metaspace":return new Z(e);case"ByteLevel":return new K(e);case"Replace":return new V(e);case"ByteFallback":return new U(e);case"Fuse":return new W(e);case"Strip":return new q(e);case"Sequence":return new Y(e);case"CTC":return new X(e);case"BPEDecoder":return new Q(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class V extends G{decode_chain(e){let t=u(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class U extends G{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){let t=[],n=[];for(let r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){let t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){let e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){let e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class W extends G{decode_chain(e){return[e.join("")]}}class q extends G{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class H extends G{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=p(e)),e)))}}class K extends G{constructor(e){super(e),this.byte_decoder=b,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){let t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){let t=[],n=[];for(let r of e)this.added_tokens.includes(r)?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class X extends G{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";let t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=p(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class Y extends G{constructor(e){super(e),this.decoders=e.decoders.map((e=>G.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class Q extends G{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class J extends I{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement}pre_tokenize(e){"string"==typeof e&&(e=e.trimStart().split(/\s+/));const t=[];for(let n of e){let e=n.replaceAll(" ",this.strRep);this.addPrefixSpace&&!e.startsWith(this.replacement)&&(e=this.strRep+e),t.push(e)}return t}}class Z extends G{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class ee extends x{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class te extends I{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>I.fromConfig(e)))}pre_tokenize_text(e){return"string"==typeof e&&(e=[e]),this.tokenizers.reduce(((e,t)=>t.pre_tokenize(e)),e)}}class ne extends I{constructor(e){super()}pre_tokenize_text(e){return function(e){return e.match(/\S+/g)||[]}(e)}}class re extends r.Callable{constructor(e,t){super(),this.normalizer=x.fromConfig(e.normalizer),this.pre_tokenizer=I.fromConfig(e.pre_tokenizer),this.model=f.fromConfig(e.model,t),this.post_processor=z.fromConfig(e.post_processor),this.decoder=G.fromConfig(e.decoder),this.decoder.end_of_word_suffix=this.model.end_of_word_suffix,this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(let t of e.added_tokens){let e=t.id,n=t.content;this.added_tokens.push(n),this.model.tokens_to_ids.set(n,e),this.model.vocab[e]=n,t.special&&(this.special_tokens.push(n),this.all_special_ids.push(e))}this.special_tokens.push(...t.additional_special_tokens??[]),this.special_tokens=[...new Set(this.special_tokens)],this.decoder.added_tokens=this.added_tokens,this.added_tokens_regex=this.added_tokens.length>0?new RegExp("("+this.added_tokens.map(r.escapeRegExp).join("|")+")"):null,this.mask_token=this.getToken(t,"mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken(t,"pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken(t,"sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,this.padding_side="right"}getToken(e,...t){for(let n of t){let t=e[n];if(t){if("object"==typeof t){if("AddedToken"===t.__type)return t.content;throw Error(`Unknown token: ${t}`)}return t}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:a="main"}={}){return new this(...await l(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:a}))}prepare_model_inputs(e){return e}_call(e,{text_pair:t=null,padding:n=!1,truncation:r=null,max_length:o=null,return_tensor:s=!0}={}){let l;if(Array.isArray(e)){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");l=e.map(((e,n)=>this.encode(e,t[n])))}else l=e.map((e=>this.encode(e)))}else{if(null===e)throw Error("text may not be null");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");l=[this.encode(e,t)]}let u=(0,a.max)(l.map((e=>e.length)))[0];null===o&&(o=u),o=Math.min(o,this.model_max_length);let c=[];if(n||r)for(let e=0;e<l.length;++e)if(l[e].length!==o)if(l[e].length>o)r&&(l[e]=l[e].slice(0,o)),c.push(new Array(l[e].length).fill(1));else if(n){let t=o-l[e].length;"right"===this.padding_side?(c.push(new Array(l[e].length).fill(1).concat(new Array(t).fill(0))),l[e].push(...new Array(t).fill(this.pad_token_id))):(c.push(new Array(t).fill(0).concat(new Array(l[e].length).fill(1))),l[e].unshift(...new Array(t).fill(this.pad_token_id)))}else c.push(new Array(l[e].length).fill(1));else c.push(new Array(l[e].length).fill(1));else c=l.map((e=>new Array(e.length).fill(1)));if(s){if((!n||!r)&&l.some((e=>e.length!==l[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");let e=[l.length,l[0].length];l=new i.Tensor("int64",BigInt64Array.from(l.flat().map(BigInt)),e),c=new i.Tensor("int64",BigInt64Array.from(c.flat().map(BigInt)),e)}else Array.isArray(e)||(l=l[0],c=c[0]);let p={input_ids:l,attention_mask:c};return p=this.prepare_model_inputs(p),p}_encode_text(e){if(null===e)return null;let t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map((e=>{if(this.added_tokens.includes(e))return e;{!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return d(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e));let t=null!==this.pre_tokenizer?this.pre_tokenizer(e):[e];return this.model(t)}})).flat();return t}encode(e,t=null){let n=this._encode_text(e),o=this._encode_text(t),a=null!==this.post_processor?this.post_processor(n,o):(0,r.mergeArrays)(n??[],o??[]);return this.model.convert_tokens_to_ids(a)}batch_decode(e,t={}){return e.map((e=>this.decode(e,t)))}decode(e,t={}){if(!Array.isArray(e)||0===e.length||!(0,r.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let o=this.decoder(r);return this.decoder.end_of_word_suffix&&(o=o.replaceAll(this.decoder.end_of_word_suffix," "),t&&(o=o.trim())),(n??this.clean_up_tokenization_spaces)&&(o=p(o)),o}}function oe(e){if(e.input_ids instanceof i.Tensor)e.token_type_ids=new i.Tensor("int64",new BigInt64Array(e.input_ids.data.length),e.input_ids.dims);else{if(!Array.isArray(e.input_ids))throw new Error("Input ids must be a Tensor or an Array");Array.isArray(e.input_ids[0])?e.token_type_ids=e.input_ids.map((e=>new Array(e.length).fill(0))):e.token_type_ids=new Array(e.input_ids.length).fill(0)}return e}class ae extends re{prepare_model_inputs(e){return oe(e)}}class ie extends re{prepare_model_inputs(e){return oe(e)}}class se extends re{prepare_model_inputs(e){return oe(e)}}class le extends re{prepare_model_inputs(e){return oe(e)}}class ue extends re{prepare_model_inputs(e){return oe(e)}}class ce extends re{prepare_model_inputs(e){return oe(e)}}class pe extends re{prepare_model_inputs(e){return oe(e)}}class de extends re{}class he extends re{}class fe extends re{constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}prepare_model_inputs(e){return oe(e)}}class ge extends re{}class _e extends re{}class me extends re{}class be extends re{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Ae(this,e,t,n)}}class ye extends be{}class we extends re{}class xe extends re{constructor(e,t){const n=".,!?…。，、।۔،",r=e.pre_tokenizer?.pretokenizers[0]?.pattern;r&&r.Regex===` ?[^(\\s|[${n}])]+`&&(r.Regex=` ?[^\\s${n}]+`),super(e,t)}}class ve extends re{}class Te extends re{}class ke extends re{}class Se extends re{}class $e extends re{prepare_model_inputs(e){return oe(e)}}class Pe extends re{}function Ae(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const o=r.src_lang,a=r.tgt_lang;if(!e.language_codes.includes(a))throw new Error(`Target language code "${a}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==o){if(!e.language_codes.includes(o))throw new Error(`Source language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(let t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(o);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(a)])[0],e._call(t,n)}class Oe extends re{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Ae(this,e,t,n)}}class Me extends re{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return Ae(this,e,t,n)}}const Ie=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],Ce=new Map(Ie),Ee=new Map([...Ie.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);class De extends re{_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:o=!0}={}){if(null===r)throw Error("Must specify time_precision");let i=null;const s="word"===t;function l(){return{language:i,timestamp:[null,null],text:""}}const u=[];let c=l(),p=0;const d=this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1;let h=[],f=[],g=!1,_=null;const m=new Set(this.all_special_ids);for(let n of e){const e=n.tokens,o=s?n.token_timestamps:null;let b=null,y=d;if("stride"in n){const[t,o,a]=n.stride;if(p-=o,_=t-a,o&&(y=o/r+d),a)for(let t=e.length-1;t>=0;--t){const n=e[t];if(n>=d){if(null!==b&&(n-d)*r<_)break;b=n}}}let w=[],x=[];for(let n=0;n<e.length;++n){const _=e[n];if(m.has(_)){const e=this.decode([_]),n=Ce.get(e.slice(2,-2));if(void 0!==n){if(null!==i&&n!==i&&!t){h.push(w);const e=this.findLongestCommonSequence(h)[0],t=this.decode(e);c.text=t,u.push(c),h=[],w=[],c=l()}i=c.language=n}}else if(_>=d){const e=(_-d)*r+p,t=(0,a.round)(e,2);if(null!==b&&_>=b)g=!0;else if(g||h.length>0&&_<y)g=!1;else if(null===c.timestamp[0])c.timestamp[0]=t;else if(t===c.timestamp[0]);else{c.timestamp[1]=t,h.push(w),s&&f.push(x);const[e,n]=this.findLongestCommonSequence(h,f),r=this.decode(e);c.text=r,s&&(c.words=this.collateWordTimestamps(e,n,i)),u.push(c),h=[],w=[],f=[],x=[],c=l()}}else if(w.push(_),s){let e,t=(0,a.round)(o[n]+p,2);e=n+1<o.length?(0,a.round)(o[n+1]+p,2):null,x.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;p+=e-r}w.length>0?(h.push(w),s&&f.push(x)):h.every((e=>0===e.length))&&(c=l(),h=[],w=[],f=[],x=[])}if(h.length>0){if(o&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(h,f),r=this.decode(e);c.text=r,s&&(c.words=this.collateWordTimestamps(e,n,i)),u.push(c)}let b=Object.create(null);const y=u.map((e=>e.text)).join("");if(t||n){for(let e=0;e<u.length;++e){const r=u[e];t||delete r.timestamp,n||delete r.language}if(s){let e=[];for(let t of u)for(let n of t.words)e.push(n);b={chunks:e}}else b={chunks:u}}return[y,b]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,o=[];const a=Array.isArray(t)&&t.length>0;let i=a?[]:null,s=a?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let c=0,p=[r,r,0,0];const d=u.length;for(let e=1;e<r+d;++e){const t=e/1e4,o=Math.max(0,r-e),a=Math.min(r,r+d-e),i=n.slice(o,a),s=Math.max(0,e-r),l=Math.min(d,e),h=u.slice(s,l);if(i.length!==h.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const f=i.filter(((e,t)=>e===h[t])).length,g=f/e+t;f>1&&g>c&&(c=g,p=[o,a,s,l])}const[h,f,g,_]=p,m=Math.floor((f+h)/2),b=Math.floor((_+g)/2);o.push(...n.slice(0,m)),n=u.slice(b),r=n.length,a&&(i.push(...s.slice(0,m)),s=t[l].slice(b))}return o.push(...n),a?(i.push(...s),[o,i]):[o,[]]}collateWordTimestamps(e,t,n){let[r,o,a]=this.combineTokensIntoWords(e,n),i=[];for(let e=0;e<r.length;++e){const n=a[e];i.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return i}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let o,a,i;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[o,a,i]=this.splitTokensOnUnicode(e):[o,a,i]=this.splitTokensOnSpaces(e),this.mergePunctuations(o,a,i,n,r)}decode(e,t){let n;return n=t&&t.decode_with_timestamps?this.decodeWithTimestamps(e,t):super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let o=[[]];for(let t of e)if(t>=r){let e=(t-r)*n;e=(0,a.round)(e,2),o.push(`<|${e}|>`),o.push([])}else o[o.length-1].push(t);return o=o.map((e=>"string"==typeof e?e:super.decode(e,t))),o.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0});let n=[],r=[],o=[],a=[],i=[],s=0;for(let l=0;l<e.length;++l){const u=e[l];a.push(u),i.push(l);const c=this.decode(a,{decode_with_timestamps:!0});c.includes("�")&&"�"!==t[s+c.indexOf("�")]||(n.push(c),r.push(a),o.push(i),a=[],i=[],s+=c.length)}return[n,r,o]}splitTokensOnSpaces(e){let[t,n,r]=this.splitTokensOnUnicode(e),o=[],a=[],i=[];const s=new RegExp(`^[${h}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],u=n[e],c=r[e],p=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),d=l.startsWith(" "),h=l.trim(),f=s.test(h);if(p||d||f||0===o.length)o.push(l),a.push(u),i.push(c);else{const e=o.length-1;o[e]+=l,a[e].push(...u),i[e].push(...c)}}return[o,a,i]}mergePunctuations(e,t,n,o,a){let i=structuredClone(e),s=structuredClone(t),l=structuredClone(n),u=i.length-2,c=i.length-1;for(;u>=0;)i[u].startsWith(" ")&&o.includes(i[u].trim())?(i[c]=i[u]+i[c],s[c]=(0,r.mergeArrays)(s[u],s[c]),l[c]=(0,r.mergeArrays)(l[u],l[c]),i[u]="",s[u]=[],l[u]=[]):c=u,--u;for(u=0,c=1;c<i.length;)!i[u].endsWith(" ")&&a.includes(i[c])?(i[u]+=i[c],s[u]=(0,r.mergeArrays)(s[u],s[c]),l[u]=(0,r.mergeArrays)(l[u],l[c]),i[c]="",s[c]=[],l[c]=[]):u=c,++c;return[i.filter((e=>e)),s.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}get_decoder_prompt_ids({language:e=null,task:t=null,no_timestamps:n=!0}={}){let r=[];if(e){e=e.toLowerCase();let t=Ee.get(e);if(void 0===t){if(!Ce.has(e)){const t=2===e.length?Ce.keys():Ce.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}let n=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===n)throw new Error(`Unable to find language "${t}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);r.push(n)}else r.push(null);if(t){if("transcribe"!==(t=t.toLowerCase())&&"translate"!==t)throw new Error(`Task "${t}" is not supported. Must be one of: ["transcribe", "translate"]`);let e=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===e)throw new Error(`Unable to find task "${t}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);r.push(e)}else r.push(null);if(n){let e=this.model.tokens_to_ids.get("<|notimestamps|>");if(void 0===e)throw new Error('Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.');r.push(e)}return r.map(((e,t)=>[t+1,e])).filter((e=>null!==e[1]))}}class Fe extends re{}class Re extends re{}class ze extends re{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;let[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){let[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,r.mergeArrays)([e],super._encode_text(t))}}}class Le extends re{}class je{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ge,DistilBertTokenizer:de,CamembertTokenizer:he,DebertaTokenizer:ue,DebertaV2Tokenizer:ce,BertTokenizer:ae,HerbertTokenizer:pe,XLMTokenizer:fe,MobileBertTokenizer:se,SqueezeBertTokenizer:le,AlbertTokenizer:ie,GPT2Tokenizer:_e,BartTokenizer:me,MBartTokenizer:be,MBart50Tokenizer:ye,RobertaTokenizer:we,WhisperTokenizer:De,CodeGenTokenizer:Fe,CLIPTokenizer:Re,MarianTokenizer:ze,BloomTokenizer:xe,NllbTokenizer:Oe,M2M100Tokenizer:Me,LlamaTokenizer:ve,CodeLlamaTokenizer:Te,XLMRobertaTokenizer:ke,MPNetTokenizer:Se,FalconTokenizer:$e,GPTNeoXTokenizer:Pe,Wav2Vec2CTCTokenizer:Le,PreTrainedTokenizer:re};static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:r=null,cache_dir:o=null,local_files_only:a=!1,revision:i="main"}={}){let[s,u]=await l(e,{quantized:t,progress_callback:n,config:r,cache_dir:o,local_files_only:a,revision:i}),c=u.tokenizer_class.replace(/Fast$/,""),p=this.TOKENIZER_CLASS_MAPPING[c];return p||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),p=re),new p(s,u)}}},"./src/transformers.js":
/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{AlbertForMaskedLM:()=>a.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>a.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>a.AlbertForSequenceClassification,AlbertModel:()=>a.AlbertModel,AlbertPreTrainedModel:()=>a.AlbertPreTrainedModel,AlbertTokenizer:()=>i.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>l.AutoConfig,AutoModel:()=>a.AutoModel,AutoModelForAudioClassification:()=>a.AutoModelForAudioClassification,AutoModelForCTC:()=>a.AutoModelForCTC,AutoModelForCausalLM:()=>a.AutoModelForCausalLM,AutoModelForImageClassification:()=>a.AutoModelForImageClassification,AutoModelForImageSegmentation:()=>a.AutoModelForImageSegmentation,AutoModelForMaskGeneration:()=>a.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>a.AutoModelForMaskedLM,AutoModelForObjectDetection:()=>a.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>a.AutoModelForQuestionAnswering,AutoModelForSeq2SeqLM:()=>a.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>a.AutoModelForSequenceClassification,AutoModelForTokenClassification:()=>a.AutoModelForTokenClassification,AutoModelForVision2Seq:()=>a.AutoModelForVision2Seq,AutoProcessor:()=>s.AutoProcessor,AutoTokenizer:()=>i.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>a.BartForConditionalGeneration,BartForSequenceClassification:()=>a.BartForSequenceClassification,BartModel:()=>a.BartModel,BartPretrainedModel:()=>a.BartPretrainedModel,BartTokenizer:()=>i.BartTokenizer,BaseModelOutput:()=>a.BaseModelOutput,BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BeitForImageClassification:()=>a.BeitForImageClassification,BeitModel:()=>a.BeitModel,BeitPreTrainedModel:()=>a.BeitPreTrainedModel,BertForMaskedLM:()=>a.BertForMaskedLM,BertForQuestionAnswering:()=>a.BertForQuestionAnswering,BertForSequenceClassification:()=>a.BertForSequenceClassification,BertForTokenClassification:()=>a.BertForTokenClassification,BertModel:()=>a.BertModel,BertPreTrainedModel:()=>a.BertPreTrainedModel,BertTokenizer:()=>i.BertTokenizer,BloomForCausalLM:()=>a.BloomForCausalLM,BloomModel:()=>a.BloomModel,BloomPreTrainedModel:()=>a.BloomPreTrainedModel,BloomTokenizer:()=>i.BloomTokenizer,CLIPModel:()=>a.CLIPModel,CLIPPreTrainedModel:()=>a.CLIPPreTrainedModel,CLIPTextModelWithProjection:()=>a.CLIPTextModelWithProjection,CLIPTokenizer:()=>i.CLIPTokenizer,CLIPVisionModelWithProjection:()=>a.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>a.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>a.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>a.CamembertForSequenceClassification,CamembertForTokenClassification:()=>a.CamembertForTokenClassification,CamembertModel:()=>a.CamembertModel,CamembertPreTrainedModel:()=>a.CamembertPreTrainedModel,CamembertTokenizer:()=>i.CamembertTokenizer,CausalLMOutput:()=>a.CausalLMOutput,CausalLMOutputWithPast:()=>a.CausalLMOutputWithPast,CodeGenForCausalLM:()=>a.CodeGenForCausalLM,CodeGenModel:()=>a.CodeGenModel,CodeGenPreTrainedModel:()=>a.CodeGenPreTrainedModel,CodeGenTokenizer:()=>i.CodeGenTokenizer,CodeLlamaTokenizer:()=>i.CodeLlamaTokenizer,ConvNextFeatureExtractor:()=>s.ConvNextFeatureExtractor,DebertaForMaskedLM:()=>a.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>a.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>a.DebertaForSequenceClassification,DebertaForTokenClassification:()=>a.DebertaForTokenClassification,DebertaModel:()=>a.DebertaModel,DebertaPreTrainedModel:()=>a.DebertaPreTrainedModel,DebertaTokenizer:()=>i.DebertaTokenizer,DebertaV2ForMaskedLM:()=>a.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>a.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>a.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>a.DebertaV2ForTokenClassification,DebertaV2Model:()=>a.DebertaV2Model,DebertaV2PreTrainedModel:()=>a.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>i.DebertaV2Tokenizer,DeiTFeatureExtractor:()=>s.DeiTFeatureExtractor,DeiTForImageClassification:()=>a.DeiTForImageClassification,DeiTModel:()=>a.DeiTModel,DeiTPreTrainedModel:()=>a.DeiTPreTrainedModel,DetrFeatureExtractor:()=>s.DetrFeatureExtractor,DetrForObjectDetection:()=>a.DetrForObjectDetection,DetrForSegmentation:()=>a.DetrForSegmentation,DetrModel:()=>a.DetrModel,DetrObjectDetectionOutput:()=>a.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>a.DetrPreTrainedModel,DetrSegmentationOutput:()=>a.DetrSegmentationOutput,DistilBertForMaskedLM:()=>a.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>a.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>a.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>a.DistilBertForTokenClassification,DistilBertModel:()=>a.DistilBertModel,DistilBertPreTrainedModel:()=>a.DistilBertPreTrainedModel,DistilBertTokenizer:()=>i.DistilBertTokenizer,FFT:()=>d.FFT,FalconTokenizer:()=>i.FalconTokenizer,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>s.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,GPT2LMHeadModel:()=>a.GPT2LMHeadModel,GPT2Model:()=>a.GPT2Model,GPT2PreTrainedModel:()=>a.GPT2PreTrainedModel,GPT2Tokenizer:()=>i.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>a.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>a.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>a.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>a.GPTJForCausalLM,GPTJModel:()=>a.GPTJModel,GPTJPreTrainedModel:()=>a.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>a.GPTNeoForCausalLM,GPTNeoModel:()=>a.GPTNeoModel,GPTNeoPreTrainedModel:()=>a.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>a.GPTNeoXForCausalLM,GPTNeoXModel:()=>a.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>a.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>i.GPTNeoXTokenizer,HerbertTokenizer:()=>i.HerbertTokenizer,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractor:()=>s.ImageFeatureExtractor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,LlamaForCausalLM:()=>a.LlamaForCausalLM,LlamaModel:()=>a.LlamaModel,LlamaPreTrainedModel:()=>a.LlamaPreTrainedModel,LlamaTokenizer:()=>i.LlamaTokenizer,M2M100ForConditionalGeneration:()=>a.M2M100ForConditionalGeneration,M2M100Model:()=>a.M2M100Model,M2M100PreTrainedModel:()=>a.M2M100PreTrainedModel,M2M100Tokenizer:()=>i.M2M100Tokenizer,MBart50Tokenizer:()=>i.MBart50Tokenizer,MBartForConditionalGeneration:()=>a.MBartForConditionalGeneration,MBartForSequenceClassification:()=>a.MBartForSequenceClassification,MBartModel:()=>a.MBartModel,MBartPreTrainedModel:()=>a.MBartPreTrainedModel,MBartTokenizer:()=>i.MBartTokenizer,MPNetForMaskedLM:()=>a.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>a.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>a.MPNetForSequenceClassification,MPNetForTokenClassification:()=>a.MPNetForTokenClassification,MPNetModel:()=>a.MPNetModel,MPNetPreTrainedModel:()=>a.MPNetPreTrainedModel,MPNetTokenizer:()=>i.MPNetTokenizer,MT5ForConditionalGeneration:()=>a.MT5ForConditionalGeneration,MT5Model:()=>a.MT5Model,MT5PreTrainedModel:()=>a.MT5PreTrainedModel,MarianMTModel:()=>a.MarianMTModel,MarianModel:()=>a.MarianModel,MarianPreTrainedModel:()=>a.MarianPreTrainedModel,MarianTokenizer:()=>i.MarianTokenizer,MaskedLMOutput:()=>a.MaskedLMOutput,MobileBertForMaskedLM:()=>a.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>a.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>a.MobileBertForSequenceClassification,MobileBertModel:()=>a.MobileBertModel,MobileBertPreTrainedModel:()=>a.MobileBertPreTrainedModel,MobileBertTokenizer:()=>i.MobileBertTokenizer,MobileViTFeatureExtractor:()=>s.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>a.MobileViTForImageClassification,MobileViTModel:()=>a.MobileViTModel,MobileViTPreTrainedModel:()=>a.MobileViTPreTrainedModel,ModelOutput:()=>a.ModelOutput,MptForCausalLM:()=>a.MptForCausalLM,MptModel:()=>a.MptModel,MptPreTrainedModel:()=>a.MptPreTrainedModel,NllbTokenizer:()=>i.NllbTokenizer,OPTForCausalLM:()=>a.OPTForCausalLM,OPTModel:()=>a.OPTModel,OPTPreTrainedModel:()=>a.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>a.PreTrainedModel,PreTrainedTokenizer:()=>i.PreTrainedTokenizer,PretrainedConfig:()=>l.PretrainedConfig,PretrainedMixin:()=>a.PretrainedMixin,Processor:()=>s.Processor,QuestionAnsweringModelOutput:()=>a.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,RawImage:()=>c.RawImage,ResNetForImageClassification:()=>a.ResNetForImageClassification,ResNetModel:()=>a.ResNetModel,ResNetPreTrainedModel:()=>a.ResNetPreTrainedModel,RobertaForMaskedLM:()=>a.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>a.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>a.RobertaForSequenceClassification,RobertaForTokenClassification:()=>a.RobertaForTokenClassification,RobertaModel:()=>a.RobertaModel,RobertaPreTrainedModel:()=>a.RobertaPreTrainedModel,RobertaTokenizer:()=>i.RobertaTokenizer,SamImageProcessor:()=>s.SamImageProcessor,SamImageSegmentationOutput:()=>a.SamImageSegmentationOutput,SamModel:()=>a.SamModel,SamPreTrainedModel:()=>a.SamPreTrainedModel,SamProcessor:()=>s.SamProcessor,Seq2SeqLMOutput:()=>a.Seq2SeqLMOutput,SequenceClassifierOutput:()=>a.SequenceClassifierOutput,SqueezeBertForMaskedLM:()=>a.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>a.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>a.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>a.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>a.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>i.SqueezeBertTokenizer,SummarizationPipeline:()=>r.SummarizationPipeline,SwinForImageClassification:()=>a.SwinForImageClassification,SwinModel:()=>a.SwinModel,SwinPreTrainedModel:()=>a.SwinPreTrainedModel,T5ForConditionalGeneration:()=>a.T5ForConditionalGeneration,T5Model:()=>a.T5Model,T5PreTrainedModel:()=>a.T5PreTrainedModel,T5Tokenizer:()=>i.T5Tokenizer,Tensor:()=>p.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>a.TokenClassifierOutput,TokenizerModel:()=>i.TokenizerModel,TranslationPipeline:()=>r.TranslationPipeline,ViTFeatureExtractor:()=>s.ViTFeatureExtractor,ViTForImageClassification:()=>a.ViTForImageClassification,ViTModel:()=>a.ViTModel,ViTPreTrainedModel:()=>a.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>a.VisionEncoderDecoderModel,Wav2Vec2CTCTokenizer:()=>i.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>s.Wav2Vec2FeatureExtractor,Wav2Vec2ForCTC:()=>a.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>a.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>a.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>a.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>s.Wav2Vec2ProcessorWithLM,WavLMForCTC:()=>a.WavLMForCTC,WavLMForSequenceClassification:()=>a.WavLMForSequenceClassification,WavLMModel:()=>a.WavLMModel,WavLMPreTrainedModel:()=>a.WavLMPreTrainedModel,WhisperFeatureExtractor:()=>s.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>a.WhisperForConditionalGeneration,WhisperModel:()=>a.WhisperModel,WhisperPreTrainedModel:()=>a.WhisperPreTrainedModel,WhisperProcessor:()=>s.WhisperProcessor,WhisperTokenizer:()=>i.WhisperTokenizer,XLMForQuestionAnswering:()=>a.XLMForQuestionAnswering,XLMForSequenceClassification:()=>a.XLMForSequenceClassification,XLMForTokenClassification:()=>a.XLMForTokenClassification,XLMModel:()=>a.XLMModel,XLMPreTrainedModel:()=>a.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>a.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>a.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>a.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>a.XLMRobertaForTokenClassification,XLMRobertaModel:()=>a.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>a.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>i.XLMRobertaTokenizer,XLMTokenizer:()=>i.XLMTokenizer,XLMWithLMHeadModel:()=>a.XLMWithLMHeadModel,YolosFeatureExtractor:()=>s.YolosFeatureExtractor,YolosForObjectDetection:()=>a.YolosForObjectDetection,YolosModel:()=>a.YolosModel,YolosObjectDetectionOutput:()=>a.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>a.YolosPreTrainedModel,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,cat:()=>p.cat,cos_sim:()=>d.cos_sim,dot:()=>d.dot,dynamicTimeWarping:()=>p.dynamicTimeWarping,env:()=>o.env,getMelFilters:()=>u.getMelFilters,getTopItems:()=>d.getTopItems,interpolate:()=>p.interpolate,interpolate_data:()=>d.interpolate_data,log_softmax:()=>d.log_softmax,magnitude:()=>d.magnitude,max:()=>d.max,mean:()=>p.mean,mean_pooling:()=>p.mean_pooling,medianFilter:()=>d.medianFilter,min:()=>d.min,pipeline:()=>r.pipeline,read_audio:()=>u.read_audio,rfftfreq:()=>d.rfftfreq,round:()=>d.round,softmax:()=>d.softmax,stack:()=>p.stack,std_mean:()=>p.std_mean,transpose:()=>p.transpose,transpose_data:()=>d.transpose_data});var r=n(/*! ./pipelines.js */"./src/pipelines.js"),o=n(/*! ./env.js */"./src/env.js"),a=n(/*! ./models.js */"./src/models.js"),i=n(/*! ./tokenizers.js */"./src/tokenizers.js"),s=n(/*! ./processors.js */"./src/processors.js"),l=n(/*! ./configs.js */"./src/configs.js"),u=n(/*! ./utils/audio.js */"./src/utils/audio.js"),c=n(/*! ./utils/image.js */"./src/utils/image.js"),p=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),d=n(/*! ./utils/maths.js */"./src/utils/maths.js")},"./src/utils/audio.js":
/*!****************************!*\
  !*** ./src/utils/audio.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{getMelFilters:()=>i,read_audio:()=>a});var r=n(/*! ./hub.js */"./src/utils/hub.js"),o=n(/*! ./maths.js */"./src/utils/maths.js");async function a(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),o=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${o.sampleRate}Hz.`);const a=await o.decodeAudioData(n);let i;if(2===a.numberOfChannels){const e=Math.sqrt(2);let t=a.getChannelData(0),n=a.getChannelData(1);i=new Float32Array(t.length);for(let r=0;r<a.length;++r)i[r]=e*(t[r]+n[r])/2}else i=a.getChannelData(0);return i}function i(e,t,n=128){n=Math.floor(n);const r=Math.floor(1+t/2),a=new Array(n),i=(0,o.rfftfreq)(t,1/e),s=45.245640471924965/(n+1),l=200/3,u=new Array(n+2),c=1e3/l,p=Math.log(6.4)/27,d=new Array(u.length);for(let e=0;e<u.length;++e){const t=e*s+0;u[e]=t>=c?1e3*Math.exp(p*(t-c)):0+l*t,d[e]=i.map((t=>u[e]-t))}const h=u.slice(1).map(((e,t)=>1/(e-u[t])));for(let e=0;e<a.length;++e){a[e]=new Array(r);const t=h[e],n=h[e+1],o=d[e],i=d[e+2],s=2/(u[e+2]-u[e]);for(let r=0;r<a[e].length;++r){const l=-o[r]*t,u=i[r]*n;a[e][r]=Math.max(0,Math.min(l,u))*s}}return a}},"./src/utils/core.js":
/*!***************************!*\
  !*** ./src/utils/core.js ***!
  \***************************/(e,t,n)=>{function r(e,t){null!==e&&e(t)}function o(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function a(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}n.r(t),n.d(t,{Callable:()=>i,calculateDimensions:()=>p,dispatchCallback:()=>r,escapeRegExp:()=>a,exists:()=>c,isIntegralNumber:()=>u,isString:()=>s,isTypedArray:()=>l,mergeArrays:()=>h,pop:()=>d,product:()=>f,reverseDictionary:()=>o});const i=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}};function s(e){return"string"==typeof e||e instanceof String}function l(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function u(e){return Number.isInteger(e)||"bigint"==typeof e}function c(e){return null!=e}function p(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function d(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function h(...e){return Array.prototype.concat.apply([],e)}function f(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}},"./src/utils/data-structures.js":
/*!**************************************!*\
  !*** ./src/utils/data-structures.js ***!
  \**************************************/(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>o,PriorityQueue:()=>r,TokenLattice:()=>i});class r{constructor(e=((e,t)=>e>t)){this._heap=[],this._comparator=e}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)this._heap.push(t),this._siftUp();return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){let e=this.size-1;for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}}class o{constructor(){this.root=a.default()}extend(e){for(let t of e)this.push(t)}push(e){let t=this.root;for(let n of e){let e=t.children.get(n);void 0===e&&(e=a.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root,n="";for(let r=0;r<e.length&&void 0!==t;++r){const o=e[r];n+=o,t=t.children.get(o),void 0!==t&&t.isLeaf&&(yield n)}}}class a{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new a(!1,new Map)}}class i{constructor(e,t,n){this.sentence=e,this.len=e.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new s(this.bosTokenId,0,0,0,0),o=new s(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(o.clone()),this.beginNodes[this.len].push(o),this.endNodes[0].push(r)}insert(e,t,n,r){const o=this.nodes.length,a=new s(r,o,e,t,n);this.beginNodes[e].push(a),this.endNodes[e+t].push(a),this.nodes.push(a)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let o of this.endNodes[t]){const t=o.backtraceScore+e.score;(null===r||t>n)&&(r=o.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let o=r.clone();for(;null!==o.prev;){n.push(o.clone());const e=o.clone();o=e.prev.clone()}return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class s{constructor(e,t,n,r,o){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=o,this.prev=null,this.backtraceScore=0}clone(){const e=new s(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}},"./src/utils/generation.js":
/*!*********************************!*\
  !*** ./src/utils/generation.js ***!
  \*********************************/(e,t,n)=>{n.r(t),n.d(t,{ForceTokensLogitsProcessor:()=>s,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,GenerationConfig:()=>f,LogitsProcessor:()=>i,LogitsProcessorList:()=>a,NoRepeatNGramLogitsProcessor:()=>d,RepetitionPenaltyLogitsProcessor:()=>h,Sampler:()=>g,SuppressTokensAtBeginLogitsProcessor:()=>c,WhisperTimeStampLogitsProcessor:()=>p});n(/*! ./tensor.js */"./src/utils/tensor.js");var r=n(/*! ./core.js */"./src/utils/core.js"),o=n(/*! ./maths.js */"./src/utils/maths.js");class a extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){for(let n of t)this.processors.forEach((t=>t(e,n)))}[Symbol.iterator](){return this.processors.values()}}class i extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class s extends i{constructor(e){super(),this.force_token_map=Object.fromEntries(e??[])}_call(e,t){let n=this.force_token_map[e.length];return(0,r.exists)(n)&&(t.data.fill(-1/0),t.data[n]=0),t}}class l extends i{constructor(e){super(),this.bos_token_id=e}_call(e,t){return 1===e.length&&(t.data.fill(-1/0),t.data[this.bos_token_id]=0),t}}class u extends i{constructor(e,t){super(),this.max_length=e,this.forced_eos_token_id=t}_call(e,t){}}class c extends i{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){if(e.length===this.begin_index)for(let e of this.begin_suppress_tokens)t.data[e]=-1/0;return t}}class p extends i{constructor(e){super(),this.eos_token_id=e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=(e.forced_decoder_ids||[]).length+2,e.forced_decoder_ids.slice(-1)[0][1]===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){if(t.data[this.no_timestamps_token_id]=-1/0,e.length===this.begin_index-1)return t.data.fill(-1/0),t.data[this.timestamp_begin]=0,t;const n=e.slice(this.begin_index),r=n.length>=1&&n[n.length-1]>=this.timestamp_begin,a=n.length<2||n[n.length-2]>=this.timestamp_begin;if(r&&(a?t.data.subarray(this.timestamp_begin).fill(-1/0):t.data.subarray(0,this.eos_token_id).fill(-1/0)),e.length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;t.data.subarray(e+1).fill(-1/0)}const i=(0,o.log_softmax)(t.data);return Math.log(i.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,o.max)(i.subarray(0,this.timestamp_begin))[0]&&t.data.subarray(0,this.timestamp_begin).fill(-1/0),t}}class d extends i{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t)}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),o=r.get(n)??[];o.push(e[e.length-1]),r.set(n,o)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){const n=this.calcBannedNgramTokens(e);for(const e of n)t.data[e]=-1/0;return t}}class h extends i{constructor(e){super(),this.penalty=e}_call(e,t){for(const n of e)t.data[n]<0?t.data[n]*=this.penalty:t.data[n]/=this.penalty;return t}}class f{constructor(e={}){this.max_length=e.max_length??20,this.max_new_tokens=e.max_new_tokens??null,this.min_length=e.min_length??0,this.min_new_tokens=e.min_new_tokens??null,this.early_stopping=e.early_stopping??!1,this.max_time=e.max_time??null,this.do_sample=e.do_sample??!1,this.num_beams=e.num_beams??1,this.num_beam_groups=e.num_beam_groups??1,this.penalty_alpha=e.penalty_alpha??null,this.use_cache=e.use_cache??!0,this.temperature=e.temperature??1,this.top_k=e.top_k??50,this.top_p=e.top_p??1,this.typical_p=e.typical_p??1,this.epsilon_cutoff=e.epsilon_cutoff??0,this.eta_cutoff=e.eta_cutoff??0,this.diversity_penalty=e.diversity_penalty??0,this.repetition_penalty=e.repetition_penalty??1,this.encoder_repetition_penalty=e.encoder_repetition_penalty??1,this.length_penalty=e.length_penalty??1,this.no_repeat_ngram_size=e.no_repeat_ngram_size??0,this.bad_words_ids=e.bad_words_ids??null,this.force_words_ids=e.force_words_ids??null,this.renormalize_logits=e.renormalize_logits??!1,this.constraints=e.constraints??null,this.forced_bos_token_id=e.forced_bos_token_id??null,this.forced_eos_token_id=e.forced_eos_token_id??null,this.remove_invalid_values=e.remove_invalid_values??!1,this.exponential_decay_length_penalty=e.exponential_decay_length_penalty??null,this.suppress_tokens=e.suppress_tokens??null,this.begin_suppress_tokens=e.begin_suppress_tokens??null,this.forced_decoder_ids=e.forced_decoder_ids??null,this.num_return_sequences=e.num_return_sequences??1,this.output_attentions=e.output_attentions??!1,this.output_hidden_states=e.output_hidden_states??!1,this.output_scores=e.output_scores??!1,this.return_dict_in_generate=e.return_dict_in_generate??!1,this.pad_token_id=e.pad_token_id??null,this.bos_token_id=e.bos_token_id??null,this.eos_token_id=e.eos_token_id??null,this.encoder_no_repeat_ngram_size=e.encoder_no_repeat_ngram_size??0,this.decoder_start_token_id=e.decoder_start_token_id??null,this.generation_kwargs=e.generation_kwargs??{}}}class g extends r.Callable{constructor(e){super(),this.generation_config=e}_call(e,t=-1){return this.sample(e,t)}sample(e,t){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return this.generation_config.temperature>0&&(r=r.map((e=>e/this.generation_config.temperature))),r}randomSelect(e){let t=e.reduce(((e,t)=>e+t),0),n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new m(e);if(e.num_beams>1)return new b(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new _(e)}}class _ extends g{sample(e,t=-1){let n=this.getLogits(e,t);return[[(0,o.max)(n)[1],0]]}}class m extends g{sample(e,t=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const r=this.getLogits(e,t),a=(0,o.getTopItems)(r,n),i=(0,o.softmax)(a.map((e=>e[1])));return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(i);return[a[e][0],Math.log(i[e])]}))}}class b extends g{sample(e,t=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const r=this.getLogits(e,t),a=(0,o.getTopItems)(r,n),i=(0,o.softmax)(a.map((e=>e[1])));return Array.from({length:this.generation_config.num_beams},((e,t)=>[a[t][0],Math.log(i[t])]))}}},"./src/utils/hub.js":
/*!**************************!*\
  !*** ./src/utils/hub.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{getFile:()=>c,getModelFile:()=>h,getModelJSON:()=>f});var r=n(/*! fs */"?7a2c"),o=n(/*! path */"?a42a"),a=n(/*! stream/web */"?e65c"),i=n(/*! ../env.js */"./src/env.js"),s=n(/*! ./core.js */"./src/utils/core.js");globalThis.ReadableStream||(globalThis.ReadableStream=a.ReadableStream);class l{_CONTENT_TYPE_MAP={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new l(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function u(e,t=null){let n;try{n=new URL(e)}catch(e){return!1}return!(t&&!t.includes(n.hostname))&&("http:"===n.protocol||"https:"===n.protocol)}async function c(e){if(i.env.useFS&&!u(e))return new l(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=i.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(u(e,["huggingface.co","hf.co"])){const e=process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const p={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class d{constructor(e){this.path=e}async match(e){let t=o.join(this.path,e),n=new l(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let a=o.join(this.path,e);try{await r.promises.mkdir(o.dirname(a),{recursive:!0}),await r.promises.writeFile(a,n)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function h(e,t,n=!0,r={}){if(!i.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let o;if((0,s.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!o&&i.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{o=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!o&&i.env.useFSCache&&(o=new d(r.cache_dir??i.env.cacheDir)),!o&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");o=i.env.customCache}const a=r.revision??"main";let l,h,f=g(e,t),_=g(i.env.localModelPath,f),m=g(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",a),t),b="main"===a?f:g(e,a,t),y=o instanceof d?b:m,w=!1;if(o&&(h=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(o,_,y)),void 0===h){if(i.env.allowLocalModels){if(u(f)){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${f}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${f}.`)}else try{h=await c(_),l=_}catch(e){console.warn(`Unable to load from local path "${_}": "${e}"`)}}if(void 0===h||404===h.status){if(r.local_files_only||!i.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${_}".`);return null}if(h=await c(m),200!==h.status)return function(e,t,n){if(!n)return null;const r=p[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(h.status,m,n);l=y}w=o&&"undefined"!=typeof Response&&h instanceof Response&&200===h.status}(0,s.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t});const x=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),o=new Uint8Array(r),a=0;const i=e.body.getReader();async function s(){const{done:e,value:n}=await i.read();if(e)return;let l=a+n.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(o),o=e}o.set(n,a),a=l;return t({progress:a/r*100,loaded:a,total:r}),s()}return await s(),o}(h,(n=>{(0,s.dispatchCallback)(r.progress_callback,{status:"progress",...n,name:e,file:t})}));return w&&l&&void 0===await o.match(l)&&await o.put(l,new Response(x,{headers:h.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),(0,s.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),x}async function f(e,t,n=!0,r={}){let o=await h(e,t,n,r);if(null===o)return{};let a=new TextDecoder("utf-8").decode(o);return JSON.parse(a)}function g(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":
/*!****************************!*\
  !*** ./src/utils/image.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>d});var r=n(/*! ./core.js */"./src/utils/core.js"),o=n(/*! ./hub.js */"./src/utils/hub.js"),a=n(/*! ../env.js */"./src/env.js"),i=n(/*! sharp */"?2b25");const s="undefined"!=typeof self;let l,u,c;if(s)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},c=self.createImageBitmap,u=self.ImageData;else{if(!i)throw new Error("Unable to load image processing library.");c=async e=>{const t=(await e.metadata()).channels;let{data:n,info:r}=await e.raw().toBuffer({resolveWithObject:!0});const o=new d(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&o.convert(t),o}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"};class d{_CONTENT_TYPE_MAP={png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e,t,n,r){this._update(e,t,n,r)}static async read(e){if(e instanceof d)return e;if((0,r.isString)(e)||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static async fromURL(e){let t=await(0,o.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);let n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(s){let t=await c(e);const n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{let t=i(await e.arrayBuffer());return await c(t)}}grayscale(){if(1===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],o=this.data[t+1],a=this.data[t+2];e[n++]=Math.round(.2989*r+.587*o+.114*a)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t,{resample:n=2}={}){let r=p[n]??n;if(s){let n=this.channels,r=this.toCanvas();const o=l(e,t).getContext("2d");return o.drawImage(r,0,0,e,t),new d(o.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(r){case"box":case"hamming":"box"!==r&&"hamming"!==r||(console.warn(`Resampling method ${r} is not yet supported. Using bilinear instead.`),r="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:r});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${r} is not supported.`)}return await c(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(s){let o=this.channels,a=this.toCanvas(),i=this.width+e+t,s=this.height+n+r;const u=l(i,s).getContext("2d");return u.drawImage(a,0,0,this.width,this.height,e,n,i,s),new d(u.getImageData(0,0,i,s).data,i,s,4).convert(o)}{let o=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await c(o)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;let n=(this.width-e)/2,r=(this.height-t)/2;if(s){let o=this.channels,a=this.toCanvas();const i=l(e,t).getContext("2d");let s=0,u=0,c=0,p=0;return n>=0?s=n:c=-n,r>=0?u=r:p=-r,i.drawImage(a,s,u,e,t,c,p,e,t),new d(i.getImageData(0,0,e,t).data,e,t,4).convert(o)}{let o=this.toSharp();if(n>=0&&r>=0)o=o.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){let a=Math.floor(-r),i=Math.floor(-n);o=o.extend({top:a,left:i,right:e-this.width-i,bottom:t-this.height-a})}else{let a=[0,0],i=0;r<0?(a[0]=Math.floor(-r),a[1]=t-this.height-a[0]):i=Math.floor(r);let s=[0,0],l=0;n<0?(s[0]=Math.floor(-n),s[1]=e-this.width-s[0]):l=Math.floor(n),o=o.extend({top:a[0],bottom:a[1],left:s[0],right:s[1]}).extract({left:l,top:i,width:e,height:t})}return await c(o)}}toCanvas(){if(!s)throw new Error("toCanvas() is only supported in browser environments.");let e=this.clone().rgba(),t=l(e.width,e.height),n=new u(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new d(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}save(e){if(s){const t=e.split(".").pop().toLowerCase(),n=this._CONTENT_TYPE_MAP[t]??"image/png",r=this.toCanvas().toDataURL(n),o=document.createElement("a");o.href=r,o.download=e,o.click(),o.remove()}else{if(!a.env.useFS)throw new Error("Unable to save the image because filesystem is disabled in this environment.");this.toSharp().toFile(e)}}toSharp(){if(s)throw new Error("toSharp() is only supported in server-side environments.");return i(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":
/*!****************************!*\
  !*** ./src/utils/maths.js ***!
  \****************************/(e,t,n)=>{function r(e,[t,n,r],[o,a],i="bilinear",s=!1){const l=a/r,u=o/n,c=new e.constructor(o*a*t),p=n*r,d=o*a;for(let i=0;i<o;++i)for(let o=0;o<a;++o){const s=i*a+o,h=(o+.5)/l-.5,f=(i+.5)/u-.5;let g=Math.floor(h),_=Math.floor(f);const m=Math.min(g+1,r-1),b=Math.min(_+1,n-1);g=Math.max(g,0),_=Math.max(_,0);const y=h-g,w=f-_,x=(1-y)*(1-w),v=y*(1-w),T=(1-y)*w,k=y*w,S=_*r,$=b*r,P=S+g,A=S+m,O=$+g,M=$+m;for(let n=0;n<t;++n){const t=n*p;c[n*d+s]=x*e[t+P]+v*e[t+A]+T*e[t+O]+k*e[t+M]}}return c}function o(e,t,n){const r=new Array(n.length),o=new Array(n.length);for(let e=n.length-1,a=1;e>=0;--e)o[e]=a,r[e]=t[n[e]],a*=r[e];const a=n.map(((e,t)=>o[n.indexOf(t)])),i=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,o=n;e>=0;--e)r+=o%t[e]*a[e],o=Math.floor(o/t[e]);i[r]=e[n]}return[i,r]}function a(e){const t=d(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function i(e){return a(e).map((e=>Math.log(e)))}function s(e,t){return e.reduce(((e,n,r)=>e+n*t[r]),0)}function l(e,t=0){return e=Array.from(e).map(((e,t)=>[t,e])).sort(((e,t)=>t[1]-e[1])),t>0&&(e=e.slice(0,t)),e}function u(e,t){return s(e,t)/(c(e)*c(t))}function c(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function p(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[t,n]}function h(e,t=1){if(!Number.isInteger(e))throw new TypeError(`n should be an integer, but ${e} given.`);const n=1/(e*t),r=Math.floor(e/2)+1,o=new Array(r);for(let e=0;e<r;++e)o[e]=e*n;return o}n.r(t),n.d(t,{FFT:()=>f,cos_sim:()=>u,dot:()=>s,getTopItems:()=>l,interpolate_data:()=>r,log_softmax:()=>i,magnitude:()=>c,max:()=>d,medianFilter:()=>g,min:()=>p,rfftfreq:()=>h,round:()=>_,softmax:()=>a,transpose_data:()=>o});class f{constructor(e){if(this.size=0|e,this.size<=1||0!=(this.size&this.size-1))throw new Error("FFT size must be a power of two and bigger than 1");this._csize=e<<1,this.table=new Float32Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float32Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}completeSpectrum(e){const t=this._csize,n=t>>>1;for(let r=2;r<n;r+=2)e[t-r]=e[r],e[t-r+1]=-e[r+1]}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let o,a,i=1<<this._width,s=r/i<<1,l=this._bitrev;if(4===s)for(o=0,a=0;o<r;o+=s,++a){const n=l[a];this._singleTransform2(t,e,o,n,i)}else for(o=0,a=0;o<r;o+=s,++a){const r=l[a];this._singleTransform4(t,e,o,r,i,n)}for(i>>=2;i>=2;i>>=2){s=r/i<<1;let t=s>>>2;for(o=0;o<r;o+=s){let r=o+t;for(let a=o,s=0;a<r;a+=2,s+=i){const r=a,o=r+t,i=o+t,l=i+t,u=e[r],c=e[r+1],p=e[o],d=e[o+1],h=e[i],f=e[i+1],g=e[l],_=e[l+1],m=this.table[s],b=n*this.table[s+1],y=p*m-d*b,w=p*b+d*m,x=this.table[2*s],v=n*this.table[2*s+1],T=h*x-f*v,k=h*v+f*x,S=this.table[3*s],$=n*this.table[3*s+1],P=g*S-_*$,A=g*$+_*S,O=u+T,M=c+k,I=u-T,C=c-k,E=y+P,D=w+A,F=n*(y-P),R=n*(w-A);e[r]=O+E,e[r+1]=M+D,e[o]=I+R,e[o+1]=C-F,e[i]=O-E,e[i+1]=M-D,e[l]=I-R,e[l+1]=C+F}}}}_singleTransform2(e,t,n,r,o){const a=e[r],i=e[r+1],s=e[r+o],l=e[r+o+1];t[n]=a+s,t[n+1]=i+l,t[n+2]=a-s,t[n+3]=i-l}_singleTransform4(e,t,n,r,o,a){const i=2*o,s=3*o,l=e[r],u=e[r+1],c=e[r+o],p=e[r+o+1],d=e[r+i],h=e[r+i+1],f=e[r+s],g=e[r+s+1],_=l+d,m=u+h,b=l-d,y=u-h,w=c+f,x=p+g,v=a*(c-f),T=a*(p-g);t[n]=_+w,t[n+1]=m+x,t[n+2]=b+T,t[n+3]=y-v,t[n+4]=_-w,t[n+5]=m-x,t[n+6]=b-T,t[n+7]=y+v}_realTransform4(e,t,n){const r=this._csize;let o=1<<this._width,a=r/o<<1;var i,s,l=this._bitrev;if(4===a)for(i=0,s=0;i<r;i+=a,++s){const n=l[s];this._singleRealTransform2(t,e,i,n>>>1,o>>>1)}else for(i=0,s=0;i<r;i+=a,++s){const r=l[s];this._singleRealTransform4(t,e,i,r>>>1,o>>>1,n)}for(o>>=2;o>=2;o>>=2){a=r/o<<1;const t=a>>>1,s=t>>>1,l=s>>>1;for(i=0;i<r;i+=a)for(let r=0,a=0;r<=l;r+=2,a+=o){const o=i+r,u=o+s,c=u+s,p=c+s,d=e[o],h=e[o+1],f=e[u],g=e[u+1],_=e[c],m=e[c+1],b=e[p],y=e[p+1],w=this.table[a],x=n*this.table[a+1],v=f*w-g*x,T=f*x+g*w,k=this.table[2*a],S=n*this.table[2*a+1],$=_*k-m*S,P=_*S+m*k,A=this.table[3*a],O=n*this.table[3*a+1],M=b*A-y*O,I=b*O+y*A,C=d+$,E=h+P,D=d-$,F=h-P,R=v+M,z=T+I,L=n*(v-M),j=n*(T-I);if(e[o]=C+R,e[o+1]=E+z,e[u]=D+j,e[u+1]=F-L,0===r){e[c]=C-R,e[c+1]=E-z;continue}if(r===l)continue;const B=i+s-r,N=i+t-r;e[B]=D+-n*j,e[B+1]=-F-n*L,e[N]=C+-n*R,e[N+1]=n*z-E}}}_singleRealTransform2(e,t,n,r,o){const a=e[r],i=e[r+o];t[n]=a+i,t[n+1]=0,t[n+2]=a-i,t[n+3]=0}_singleRealTransform4(e,t,n,r,o,a){const i=2*o,s=3*o,l=e[r],u=e[r+o],c=e[r+i],p=e[r+s],d=l+c,h=l-c,f=u+p,g=a*(u-p);t[n]=d+f,t[n+1]=0,t[n+2]=h,t[n+3]=-g,t[n+4]=d-f,t[n+5]=0,t[n+6]=h,t[n+7]=g}}function g(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),o=Math.floor(t/2);for(let t=0;t<e.length;++t){let a=0;for(let n=-o;n<=o;++n){let o=t+n;o<0?o=Math.abs(o):o>=e.length&&(o=2*(e.length-1)-o),r[a++]=e[o]}r.sort(),n[t]=r[o]}return n}function _(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}},"./src/utils/tensor.js":
/*!*****************************!*\
  !*** ./src/utils/tensor.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>i,cat:()=>h,dynamicTimeWarping:()=>m,interpolate:()=>l,mean:()=>_,mean_pooling:()=>u,stack:()=>f,std_mean:()=>g,transpose:()=>s});var r=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),o=n(/*! ./maths.js */"./src/utils/maths.js");const a=r.ONNX.Tensor;class i extends a{constructor(...e){return e[0]instanceof r.ONNX.Tensor?super(e[0].type,e[0].data,e[0].dims):super(...e),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=d(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new i(this.type,[this.data[e]],n)}indexOf(e){for(let t=0;t<this.data.length;++t)if(this.data[t]==e)return t;return-1}_subarray(e,t,n){let r=this.data.subarray(e*t,(e+1)*t);return new i(this.type,r,n)}item(){if(1!==this.data.length)throw new Error(`a Tensor with ${this.data.length} elements cannot be converted to Scalar`);return this.data[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let o=e;for(let e=t.length-1;e>=0;e--)o=o.reduce(((n,r)=>{let o=n[n.length-1];return o.length<t[e]?o.push(r):n.push([r]),n}),[[]]);return o[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){for(let e=0;e<this.data.length;++e)this.data[e]=1/(1+Math.exp(-this.data[e]));return this}clone(){return new i(this.type,this.data.slice(),this.dims.slice())}slice(...e){let t=[],n=[];for(let r=0;r<this.dims.length;++r){let o=e[r];if(null==o)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof o)o=d(o,this.dims[r],r),n.push([o,o+1]);else{if(!Array.isArray(o)||2!==o.length)throw new Error(`Invalid slice: ${o}`);{if(o[0]>o[1])throw new Error(`Invalid slice: ${o}`);let e=[Math.max(o[0],0),Math.min(o[1],this.dims[r])];n.push(e),t.push(e[1]-e[0])}}}let r=n.map((([e,t])=>t-e)),o=r.reduce(((e,t)=>e*t)),a=new this.data.constructor(o);const s=this.stride();for(let e=0;e<o;++e){let t=0;for(let o=r.length-1,a=e;o>=0;--o){const e=r[o];t+=(a%e+n[o][0])*s[o],a=Math.floor(a/e)}a[e]=this.data[t]}return new i(this.type,a,t)}transpose(...e){return s(this,e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);if(null===t){let t=this.data.reduce(((t,n)=>t+n**e),0)**(1/e);return new i(this.type,[t],[])}t=d(t,this.dims.length);const r=this.dims.slice();r[t]=1;const o=new this.data.constructor(this.data.length/this.dims[t]);for(let n=0;n<this.data.length;++n){let a=0;for(let e=this.dims.length-1,o=n,i=1;e>=0;--e){const n=this.dims[e];if(e!==t){a+=o%n*i,i*=r[e]}o=Math.floor(o/n)}o[a]+=this.data[n]**e}if(1!==e)for(let t=0;t<o.length;++t)o[t]=o[t]**(1/e);return n||r.splice(t,1),new i(this.type,o,r)}normalize_(e=2,t=1){t=d(t,this.dims.length);const n=this.norm(e,t,!0);for(let e=0;e<this.data.length;++e){let r=0;for(let n=this.dims.length-1,o=e,a=1;n>=0;--n){const e=this.dims[n];if(n!==t){r+=o%e*a,a*=this.dims[n]}o=Math.floor(o/e)}this.data[e]/=n.data[r]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new i(this.type,this.data,c(this.dims,e))}squeeze_(e=null){return this.dims=c(this.dims,e),this}unsqueeze(e=null){return new i(this.type,this.data,p(this.dims,e))}unsqueeze_(e=null){return this.dims=p(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),o=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...o],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}if(-1!==t){const n=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=this.data.length/n}return new i(this.type,this.data,e)}neg_(){for(let e=0;e<this.data.length;++e)this.data[e]=-this.data[e];return this}neg(){return this.clone().neg_()}}function s(e,t){const[n,r]=(0,o.transpose_data)(e.data,e.dims,t);return new i(e.type,n,r)}function l(e,[t,n],r="bilinear",a=!1){const s=e.dims.at(-3)??1,l=e.dims.at(-2),u=e.dims.at(-1);let c=(0,o.interpolate_data)(e.data,[s,l,u],[t,n],r,a);return new i(e.type,c,[s,t,n])}function u(e,t){let n=[e.dims[0],e.dims[2]],r=new e.data.constructor(n[0]*n[1]),[o,a,s]=e.dims,l=0;for(let n=0;n<o;++n){let o=n*s*a;for(let i=0;i<s;++i){let u=0,c=0,p=n*a,d=o+i;for(let n=0;n<a;++n){let r=Number(t.data[p+n]);c+=r,u+=e.data[d+n*s]*r}let h=u/c;r[l++]=h}}return new i(e.type,r,n)}function c(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function p(e,t){return t=d(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function d(e,t,n=null){if(e<-t||e>=t)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function h(e,t=0){t=d(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),o=new e[0].data.constructor(r),a=e[0].type;if(0===t){let t=0;for(let n of e)o.set(n.data,t),t+=n.data.length}else{let r=0;for(let a=0;a<e.length;++a){let i=e[a];for(let e=0;e<i.data.length;++e){let a=0;for(let o=i.dims.length-1,s=e,l=1;o>=0;--o){const e=i.dims[o];let u=s%e;o===t&&(u+=r),a+=u*l,l*=n[o],s=Math.floor(s/e)}o[a]=i.data[e]}r+=i.dims[t]}}return new i(a,o,n)}function f(e,t=0){return h(e.map((e=>e.unsqueeze(t))),t)}function g(e,t=null,n=1,r=!1){if(null===t){const t=e.data.reduce(((e,t)=>e+t),0)/e.data.length,r=Math.sqrt(e.data.reduce(((e,n)=>e+(n-t)**2),0)/(e.data.length-n)),o=new i(e.type,[t],[]);return[new i(e.type,[r],[]),o]}const o=_(e,t=d(t,e.dims.length),r),a=e.dims.slice();a[t]=1;const s=new e.data.constructor(e.data.length/e.dims[t]);for(let n=0;n<e.data.length;++n){let r=0;for(let o=e.dims.length-1,i=n,s=1;o>=0;--o){const n=e.dims[o];if(o!==t){r+=i%n*s,s*=a[o]}i=Math.floor(i/n)}s[r]+=(e.data[n]-o.data[r])**2}for(let r=0;r<s.length;++r)s[r]=Math.sqrt(s[r]/(e.dims[t]-n));r||a.splice(t,1);return[new i(e.type,s,a),o]}function _(e,t=null,n=!1){if(null===t){let t=e.data.reduce(((e,t)=>e+t),0);return new i(e.type,[t/e.data.length],[])}t=d(t,e.dims.length);const r=e.dims.slice();r[t]=1;const o=new e.data.constructor(e.data.length/e.dims[t]);for(let n=0;n<e.data.length;++n){let a=0;for(let o=e.dims.length-1,i=n,s=1;o>=0;--o){const n=e.dims[o];if(o!==t){a+=i%n*s,s*=r[o]}i=Math.floor(i/n)}o[a]+=e.data[n]}if(1!==e.dims[t])for(let n=0;n<o.length;++n)o[n]=o[n]/e.dims[t];return n||r.splice(t,1),new i(e.type,o,r)}function m(e){const[t,n]=e.dims,r=[t+1,n+1],o=new i("float32",new Float32Array(r[0]*r[1]).fill(1/0),r),a=new i("float32",new Float32Array(r[0]*r[1]).fill(-1),r);o[0].data[0]=0;for(let r=1;r<n+1;++r)for(let n=1;n<t+1;++n){const t=o[n-1][r-1].item(),i=o[n-1][r].item(),s=o[n][r-1].item();let l,u;t<i&&t<s?(l=t,u=0):i<t&&i<s?(l=i,u=1):(l=s,u=2),o[n].data[r]=e[n-1][r-1].item()+l,a[n].data[r]=u}let s=t,l=n;a.data.fill(2,0,r[1]);for(let e=0;e<r[0];++e)a[e].data[0]=1;let u=[],c=[];for(;s>0||l>0;){u.push(s-1),c.push(l-1);switch(a[s][l].item()){case 0:--s,--l;break;case 1:--s;break;case 2:--l;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${s}, ${l}]. Please file a bug report.`)}}return u.reverse(),c.reverse(),[u,c]}}},__webpack_module_cache__={},leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);__webpack_require__.r(n);var r={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var o=2&t&&e;"object"==typeof o&&!~leafPrototypes.indexOf(o);o=getProto(o))Object.getOwnPropertyNames(o).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,__webpack_require__.d(n,r),n},__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/transformers.js"),__webpack_exports__AlbertForMaskedLM=__webpack_exports__.AlbertForMaskedLM,__webpack_exports__AlbertForQuestionAnswering=__webpack_exports__.AlbertForQuestionAnswering,__webpack_exports__AlbertForSequenceClassification=__webpack_exports__.AlbertForSequenceClassification,__webpack_exports__AlbertModel=__webpack_exports__.AlbertModel,__webpack_exports__AlbertPreTrainedModel=__webpack_exports__.AlbertPreTrainedModel,__webpack_exports__AlbertTokenizer=__webpack_exports__.AlbertTokenizer,__webpack_exports__AudioClassificationPipeline=__webpack_exports__.AudioClassificationPipeline,__webpack_exports__AutoConfig=__webpack_exports__.AutoConfig,__webpack_exports__AutoModel=__webpack_exports__.AutoModel,__webpack_exports__AutoModelForAudioClassification=__webpack_exports__.AutoModelForAudioClassification,__webpack_exports__AutoModelForCTC=__webpack_exports__.AutoModelForCTC,__webpack_exports__AutoModelForCausalLM=__webpack_exports__.AutoModelForCausalLM,__webpack_exports__AutoModelForImageClassification=__webpack_exports__.AutoModelForImageClassification,__webpack_exports__AutoModelForImageSegmentation=__webpack_exports__.AutoModelForImageSegmentation,__webpack_exports__AutoModelForMaskGeneration=__webpack_exports__.AutoModelForMaskGeneration,__webpack_exports__AutoModelForMaskedLM=__webpack_exports__.AutoModelForMaskedLM,__webpack_exports__AutoModelForObjectDetection=__webpack_exports__.AutoModelForObjectDetection,__webpack_exports__AutoModelForQuestionAnswering=__webpack_exports__.AutoModelForQuestionAnswering,__webpack_exports__AutoModelForSeq2SeqLM=__webpack_exports__.AutoModelForSeq2SeqLM,__webpack_exports__AutoModelForSequenceClassification=__webpack_exports__.AutoModelForSequenceClassification,__webpack_exports__AutoModelForTokenClassification=__webpack_exports__.AutoModelForTokenClassification,__webpack_exports__AutoModelForVision2Seq=__webpack_exports__.AutoModelForVision2Seq,__webpack_exports__AutoProcessor=__webpack_exports__.AutoProcessor,__webpack_exports__AutoTokenizer=__webpack_exports__.AutoTokenizer,__webpack_exports__AutomaticSpeechRecognitionPipeline=__webpack_exports__.AutomaticSpeechRecognitionPipeline,__webpack_exports__BartForConditionalGeneration=__webpack_exports__.BartForConditionalGeneration,__webpack_exports__BartForSequenceClassification=__webpack_exports__.BartForSequenceClassification,__webpack_exports__BartModel=__webpack_exports__.BartModel,__webpack_exports__BartPretrainedModel=__webpack_exports__.BartPretrainedModel,__webpack_exports__BartTokenizer=__webpack_exports__.BartTokenizer,__webpack_exports__BaseModelOutput=__webpack_exports__.BaseModelOutput,__webpack_exports__BeitFeatureExtractor=__webpack_exports__.BeitFeatureExtractor,__webpack_exports__BeitForImageClassification=__webpack_exports__.BeitForImageClassification,__webpack_exports__BeitModel=__webpack_exports__.BeitModel,__webpack_exports__BeitPreTrainedModel=__webpack_exports__.BeitPreTrainedModel,__webpack_exports__BertForMaskedLM=__webpack_exports__.BertForMaskedLM,__webpack_exports__BertForQuestionAnswering=__webpack_exports__.BertForQuestionAnswering,__webpack_exports__BertForSequenceClassification=__webpack_exports__.BertForSequenceClassification,__webpack_exports__BertForTokenClassification=__webpack_exports__.BertForTokenClassification,__webpack_exports__BertModel=__webpack_exports__.BertModel,__webpack_exports__BertPreTrainedModel=__webpack_exports__.BertPreTrainedModel,__webpack_exports__BertTokenizer=__webpack_exports__.BertTokenizer,__webpack_exports__BloomForCausalLM=__webpack_exports__.BloomForCausalLM,__webpack_exports__BloomModel=__webpack_exports__.BloomModel,__webpack_exports__BloomPreTrainedModel=__webpack_exports__.BloomPreTrainedModel,__webpack_exports__BloomTokenizer=__webpack_exports__.BloomTokenizer,__webpack_exports__CLIPModel=__webpack_exports__.CLIPModel,__webpack_exports__CLIPPreTrainedModel=__webpack_exports__.CLIPPreTrainedModel,__webpack_exports__CLIPTextModelWithProjection=__webpack_exports__.CLIPTextModelWithProjection,__webpack_exports__CLIPTokenizer=__webpack_exports__.CLIPTokenizer,__webpack_exports__CLIPVisionModelWithProjection=__webpack_exports__.CLIPVisionModelWithProjection,__webpack_exports__CamembertForMaskedLM=__webpack_exports__.CamembertForMaskedLM,__webpack_exports__CamembertForQuestionAnswering=__webpack_exports__.CamembertForQuestionAnswering,__webpack_exports__CamembertForSequenceClassification=__webpack_exports__.CamembertForSequenceClassification,__webpack_exports__CamembertForTokenClassification=__webpack_exports__.CamembertForTokenClassification,__webpack_exports__CamembertModel=__webpack_exports__.CamembertModel,__webpack_exports__CamembertPreTrainedModel=__webpack_exports__.CamembertPreTrainedModel,__webpack_exports__CamembertTokenizer=__webpack_exports__.CamembertTokenizer,__webpack_exports__CausalLMOutput=__webpack_exports__.CausalLMOutput,__webpack_exports__CausalLMOutputWithPast=__webpack_exports__.CausalLMOutputWithPast,__webpack_exports__CodeGenForCausalLM=__webpack_exports__.CodeGenForCausalLM,__webpack_exports__CodeGenModel=__webpack_exports__.CodeGenModel,__webpack_exports__CodeGenPreTrainedModel=__webpack_exports__.CodeGenPreTrainedModel,__webpack_exports__CodeGenTokenizer=__webpack_exports__.CodeGenTokenizer,__webpack_exports__CodeLlamaTokenizer=__webpack_exports__.CodeLlamaTokenizer,__webpack_exports__ConvNextFeatureExtractor=__webpack_exports__.ConvNextFeatureExtractor,__webpack_exports__DebertaForMaskedLM=__webpack_exports__.DebertaForMaskedLM,__webpack_exports__DebertaForQuestionAnswering=__webpack_exports__.DebertaForQuestionAnswering,__webpack_exports__DebertaForSequenceClassification=__webpack_exports__.DebertaForSequenceClassification,__webpack_exports__DebertaForTokenClassification=__webpack_exports__.DebertaForTokenClassification,__webpack_exports__DebertaModel=__webpack_exports__.DebertaModel,__webpack_exports__DebertaPreTrainedModel=__webpack_exports__.DebertaPreTrainedModel,__webpack_exports__DebertaTokenizer=__webpack_exports__.DebertaTokenizer,__webpack_exports__DebertaV2ForMaskedLM=__webpack_exports__.DebertaV2ForMaskedLM,__webpack_exports__DebertaV2ForQuestionAnswering=__webpack_exports__.DebertaV2ForQuestionAnswering,__webpack_exports__DebertaV2ForSequenceClassification=__webpack_exports__.DebertaV2ForSequenceClassification,__webpack_exports__DebertaV2ForTokenClassification=__webpack_exports__.DebertaV2ForTokenClassification,__webpack_exports__DebertaV2Model=__webpack_exports__.DebertaV2Model,__webpack_exports__DebertaV2PreTrainedModel=__webpack_exports__.DebertaV2PreTrainedModel,__webpack_exports__DebertaV2Tokenizer=__webpack_exports__.DebertaV2Tokenizer,__webpack_exports__DeiTFeatureExtractor=__webpack_exports__.DeiTFeatureExtractor,__webpack_exports__DeiTForImageClassification=__webpack_exports__.DeiTForImageClassification,__webpack_exports__DeiTModel=__webpack_exports__.DeiTModel,__webpack_exports__DeiTPreTrainedModel=__webpack_exports__.DeiTPreTrainedModel,__webpack_exports__DetrFeatureExtractor=__webpack_exports__.DetrFeatureExtractor,__webpack_exports__DetrForObjectDetection=__webpack_exports__.DetrForObjectDetection,__webpack_exports__DetrForSegmentation=__webpack_exports__.DetrForSegmentation,__webpack_exports__DetrModel=__webpack_exports__.DetrModel,__webpack_exports__DetrObjectDetectionOutput=__webpack_exports__.DetrObjectDetectionOutput,__webpack_exports__DetrPreTrainedModel=__webpack_exports__.DetrPreTrainedModel,__webpack_exports__DetrSegmentationOutput=__webpack_exports__.DetrSegmentationOutput,__webpack_exports__DistilBertForMaskedLM=__webpack_exports__.DistilBertForMaskedLM,__webpack_exports__DistilBertForQuestionAnswering=__webpack_exports__.DistilBertForQuestionAnswering,__webpack_exports__DistilBertForSequenceClassification=__webpack_exports__.DistilBertForSequenceClassification,__webpack_exports__DistilBertForTokenClassification=__webpack_exports__.DistilBertForTokenClassification,__webpack_exports__DistilBertModel=__webpack_exports__.DistilBertModel,__webpack_exports__DistilBertPreTrainedModel=__webpack_exports__.DistilBertPreTrainedModel,__webpack_exports__DistilBertTokenizer=__webpack_exports__.DistilBertTokenizer,__webpack_exports__FFT=__webpack_exports__.FFT,__webpack_exports__FalconTokenizer=__webpack_exports__.FalconTokenizer,__webpack_exports__FeatureExtractionPipeline=__webpack_exports__.FeatureExtractionPipeline,__webpack_exports__FeatureExtractor=__webpack_exports__.FeatureExtractor,__webpack_exports__FillMaskPipeline=__webpack_exports__.FillMaskPipeline,__webpack_exports__GPT2LMHeadModel=__webpack_exports__.GPT2LMHeadModel,__webpack_exports__GPT2Model=__webpack_exports__.GPT2Model,__webpack_exports__GPT2PreTrainedModel=__webpack_exports__.GPT2PreTrainedModel,__webpack_exports__GPT2Tokenizer=__webpack_exports__.GPT2Tokenizer,__webpack_exports__GPTBigCodeForCausalLM=__webpack_exports__.GPTBigCodeForCausalLM,__webpack_exports__GPTBigCodeModel=__webpack_exports__.GPTBigCodeModel,__webpack_exports__GPTBigCodePreTrainedModel=__webpack_exports__.GPTBigCodePreTrainedModel,__webpack_exports__GPTJForCausalLM=__webpack_exports__.GPTJForCausalLM,__webpack_exports__GPTJModel=__webpack_exports__.GPTJModel,__webpack_exports__GPTJPreTrainedModel=__webpack_exports__.GPTJPreTrainedModel,__webpack_exports__GPTNeoForCausalLM=__webpack_exports__.GPTNeoForCausalLM,__webpack_exports__GPTNeoModel=__webpack_exports__.GPTNeoModel,__webpack_exports__GPTNeoPreTrainedModel=__webpack_exports__.GPTNeoPreTrainedModel,__webpack_exports__GPTNeoXForCausalLM=__webpack_exports__.GPTNeoXForCausalLM,__webpack_exports__GPTNeoXModel=__webpack_exports__.GPTNeoXModel,__webpack_exports__GPTNeoXPreTrainedModel=__webpack_exports__.GPTNeoXPreTrainedModel,__webpack_exports__GPTNeoXTokenizer=__webpack_exports__.GPTNeoXTokenizer,__webpack_exports__HerbertTokenizer=__webpack_exports__.HerbertTokenizer,__webpack_exports__ImageClassificationPipeline=__webpack_exports__.ImageClassificationPipeline,__webpack_exports__ImageFeatureExtractor=__webpack_exports__.ImageFeatureExtractor,__webpack_exports__ImageSegmentationPipeline=__webpack_exports__.ImageSegmentationPipeline,__webpack_exports__ImageToTextPipeline=__webpack_exports__.ImageToTextPipeline,__webpack_exports__LlamaForCausalLM=__webpack_exports__.LlamaForCausalLM,__webpack_exports__LlamaModel=__webpack_exports__.LlamaModel,__webpack_exports__LlamaPreTrainedModel=__webpack_exports__.LlamaPreTrainedModel,__webpack_exports__LlamaTokenizer=__webpack_exports__.LlamaTokenizer,__webpack_exports__M2M100ForConditionalGeneration=__webpack_exports__.M2M100ForConditionalGeneration,__webpack_exports__M2M100Model=__webpack_exports__.M2M100Model,__webpack_exports__M2M100PreTrainedModel=__webpack_exports__.M2M100PreTrainedModel,__webpack_exports__M2M100Tokenizer=__webpack_exports__.M2M100Tokenizer,__webpack_exports__MBart50Tokenizer=__webpack_exports__.MBart50Tokenizer,__webpack_exports__MBartForConditionalGeneration=__webpack_exports__.MBartForConditionalGeneration,__webpack_exports__MBartForSequenceClassification=__webpack_exports__.MBartForSequenceClassification,__webpack_exports__MBartModel=__webpack_exports__.MBartModel,__webpack_exports__MBartPreTrainedModel=__webpack_exports__.MBartPreTrainedModel,__webpack_exports__MBartTokenizer=__webpack_exports__.MBartTokenizer,__webpack_exports__MPNetForMaskedLM=__webpack_exports__.MPNetForMaskedLM,__webpack_exports__MPNetForQuestionAnswering=__webpack_exports__.MPNetForQuestionAnswering,__webpack_exports__MPNetForSequenceClassification=__webpack_exports__.MPNetForSequenceClassification,__webpack_exports__MPNetForTokenClassification=__webpack_exports__.MPNetForTokenClassification,__webpack_exports__MPNetModel=__webpack_exports__.MPNetModel,__webpack_exports__MPNetPreTrainedModel=__webpack_exports__.MPNetPreTrainedModel,__webpack_exports__MPNetTokenizer=__webpack_exports__.MPNetTokenizer,__webpack_exports__MT5ForConditionalGeneration=__webpack_exports__.MT5ForConditionalGeneration,__webpack_exports__MT5Model=__webpack_exports__.MT5Model,__webpack_exports__MT5PreTrainedModel=__webpack_exports__.MT5PreTrainedModel,__webpack_exports__MarianMTModel=__webpack_exports__.MarianMTModel,__webpack_exports__MarianModel=__webpack_exports__.MarianModel,__webpack_exports__MarianPreTrainedModel=__webpack_exports__.MarianPreTrainedModel,__webpack_exports__MarianTokenizer=__webpack_exports__.MarianTokenizer,__webpack_exports__MaskedLMOutput=__webpack_exports__.MaskedLMOutput,__webpack_exports__MobileBertForMaskedLM=__webpack_exports__.MobileBertForMaskedLM,__webpack_exports__MobileBertForQuestionAnswering=__webpack_exports__.MobileBertForQuestionAnswering,__webpack_exports__MobileBertForSequenceClassification=__webpack_exports__.MobileBertForSequenceClassification,__webpack_exports__MobileBertModel=__webpack_exports__.MobileBertModel,__webpack_exports__MobileBertPreTrainedModel=__webpack_exports__.MobileBertPreTrainedModel,__webpack_exports__MobileBertTokenizer=__webpack_exports__.MobileBertTokenizer,__webpack_exports__MobileViTFeatureExtractor=__webpack_exports__.MobileViTFeatureExtractor,__webpack_exports__MobileViTForImageClassification=__webpack_exports__.MobileViTForImageClassification,__webpack_exports__MobileViTModel=__webpack_exports__.MobileViTModel,__webpack_exports__MobileViTPreTrainedModel=__webpack_exports__.MobileViTPreTrainedModel,__webpack_exports__ModelOutput=__webpack_exports__.ModelOutput,__webpack_exports__MptForCausalLM=__webpack_exports__.MptForCausalLM,__webpack_exports__MptModel=__webpack_exports__.MptModel,__webpack_exports__MptPreTrainedModel=__webpack_exports__.MptPreTrainedModel,__webpack_exports__NllbTokenizer=__webpack_exports__.NllbTokenizer,__webpack_exports__OPTForCausalLM=__webpack_exports__.OPTForCausalLM,__webpack_exports__OPTModel=__webpack_exports__.OPTModel,__webpack_exports__OPTPreTrainedModel=__webpack_exports__.OPTPreTrainedModel,__webpack_exports__ObjectDetectionPipeline=__webpack_exports__.ObjectDetectionPipeline,__webpack_exports__Pipeline=__webpack_exports__.Pipeline,__webpack_exports__PreTrainedModel=__webpack_exports__.PreTrainedModel,__webpack_exports__PreTrainedTokenizer=__webpack_exports__.PreTrainedTokenizer,__webpack_exports__PretrainedConfig=__webpack_exports__.PretrainedConfig,__webpack_exports__PretrainedMixin=__webpack_exports__.PretrainedMixin,__webpack_exports__Processor=__webpack_exports__.Processor,__webpack_exports__QuestionAnsweringModelOutput=__webpack_exports__.QuestionAnsweringModelOutput,__webpack_exports__QuestionAnsweringPipeline=__webpack_exports__.QuestionAnsweringPipeline,__webpack_exports__RawImage=__webpack_exports__.RawImage,__webpack_exports__ResNetForImageClassification=__webpack_exports__.ResNetForImageClassification,__webpack_exports__ResNetModel=__webpack_exports__.ResNetModel,__webpack_exports__ResNetPreTrainedModel=__webpack_exports__.ResNetPreTrainedModel,__webpack_exports__RobertaForMaskedLM=__webpack_exports__.RobertaForMaskedLM,__webpack_exports__RobertaForQuestionAnswering=__webpack_exports__.RobertaForQuestionAnswering,__webpack_exports__RobertaForSequenceClassification=__webpack_exports__.RobertaForSequenceClassification,__webpack_exports__RobertaForTokenClassification=__webpack_exports__.RobertaForTokenClassification,__webpack_exports__RobertaModel=__webpack_exports__.RobertaModel,__webpack_exports__RobertaPreTrainedModel=__webpack_exports__.RobertaPreTrainedModel,__webpack_exports__RobertaTokenizer=__webpack_exports__.RobertaTokenizer,__webpack_exports__SamImageProcessor=__webpack_exports__.SamImageProcessor,__webpack_exports__SamImageSegmentationOutput=__webpack_exports__.SamImageSegmentationOutput,__webpack_exports__SamModel=__webpack_exports__.SamModel,__webpack_exports__SamPreTrainedModel=__webpack_exports__.SamPreTrainedModel,__webpack_exports__SamProcessor=__webpack_exports__.SamProcessor,__webpack_exports__Seq2SeqLMOutput=__webpack_exports__.Seq2SeqLMOutput,__webpack_exports__SequenceClassifierOutput=__webpack_exports__.SequenceClassifierOutput,__webpack_exports__SqueezeBertForMaskedLM=__webpack_exports__.SqueezeBertForMaskedLM,__webpack_exports__SqueezeBertForQuestionAnswering=__webpack_exports__.SqueezeBertForQuestionAnswering,__webpack_exports__SqueezeBertForSequenceClassification=__webpack_exports__.SqueezeBertForSequenceClassification,__webpack_exports__SqueezeBertModel=__webpack_exports__.SqueezeBertModel,__webpack_exports__SqueezeBertPreTrainedModel=__webpack_exports__.SqueezeBertPreTrainedModel,__webpack_exports__SqueezeBertTokenizer=__webpack_exports__.SqueezeBertTokenizer,__webpack_exports__SummarizationPipeline=__webpack_exports__.SummarizationPipeline,__webpack_exports__SwinForImageClassification=__webpack_exports__.SwinForImageClassification,__webpack_exports__SwinModel=__webpack_exports__.SwinModel,__webpack_exports__SwinPreTrainedModel=__webpack_exports__.SwinPreTrainedModel,__webpack_exports__T5ForConditionalGeneration=__webpack_exports__.T5ForConditionalGeneration,__webpack_exports__T5Model=__webpack_exports__.T5Model,__webpack_exports__T5PreTrainedModel=__webpack_exports__.T5PreTrainedModel,__webpack_exports__T5Tokenizer=__webpack_exports__.T5Tokenizer,__webpack_exports__Tensor=__webpack_exports__.Tensor,__webpack_exports__Text2TextGenerationPipeline=__webpack_exports__.Text2TextGenerationPipeline,__webpack_exports__TextClassificationPipeline=__webpack_exports__.TextClassificationPipeline,__webpack_exports__TextGenerationPipeline=__webpack_exports__.TextGenerationPipeline,__webpack_exports__TokenClassificationPipeline=__webpack_exports__.TokenClassificationPipeline,__webpack_exports__TokenClassifierOutput=__webpack_exports__.TokenClassifierOutput,__webpack_exports__TokenizerModel=__webpack_exports__.TokenizerModel,__webpack_exports__TranslationPipeline=__webpack_exports__.TranslationPipeline,__webpack_exports__ViTFeatureExtractor=__webpack_exports__.ViTFeatureExtractor,__webpack_exports__ViTForImageClassification=__webpack_exports__.ViTForImageClassification,__webpack_exports__ViTModel=__webpack_exports__.ViTModel,__webpack_exports__ViTPreTrainedModel=__webpack_exports__.ViTPreTrainedModel,__webpack_exports__VisionEncoderDecoderModel=__webpack_exports__.VisionEncoderDecoderModel,__webpack_exports__Wav2Vec2CTCTokenizer=__webpack_exports__.Wav2Vec2CTCTokenizer,__webpack_exports__Wav2Vec2FeatureExtractor=__webpack_exports__.Wav2Vec2FeatureExtractor,__webpack_exports__Wav2Vec2ForCTC=__webpack_exports__.Wav2Vec2ForCTC,__webpack_exports__Wav2Vec2ForSequenceClassification=__webpack_exports__.Wav2Vec2ForSequenceClassification,__webpack_exports__Wav2Vec2Model=__webpack_exports__.Wav2Vec2Model,__webpack_exports__Wav2Vec2PreTrainedModel=__webpack_exports__.Wav2Vec2PreTrainedModel,__webpack_exports__Wav2Vec2ProcessorWithLM=__webpack_exports__.Wav2Vec2ProcessorWithLM,__webpack_exports__WavLMForCTC=__webpack_exports__.WavLMForCTC,__webpack_exports__WavLMForSequenceClassification=__webpack_exports__.WavLMForSequenceClassification,__webpack_exports__WavLMModel=__webpack_exports__.WavLMModel,__webpack_exports__WavLMPreTrainedModel=__webpack_exports__.WavLMPreTrainedModel,__webpack_exports__WhisperFeatureExtractor=__webpack_exports__.WhisperFeatureExtractor,__webpack_exports__WhisperForConditionalGeneration=__webpack_exports__.WhisperForConditionalGeneration,__webpack_exports__WhisperModel=__webpack_exports__.WhisperModel,__webpack_exports__WhisperPreTrainedModel=__webpack_exports__.WhisperPreTrainedModel,__webpack_exports__WhisperProcessor=__webpack_exports__.WhisperProcessor,__webpack_exports__WhisperTokenizer=__webpack_exports__.WhisperTokenizer,__webpack_exports__XLMForQuestionAnswering=__webpack_exports__.XLMForQuestionAnswering,__webpack_exports__XLMForSequenceClassification=__webpack_exports__.XLMForSequenceClassification,__webpack_exports__XLMForTokenClassification=__webpack_exports__.XLMForTokenClassification,__webpack_exports__XLMModel=__webpack_exports__.XLMModel,__webpack_exports__XLMPreTrainedModel=__webpack_exports__.XLMPreTrainedModel,__webpack_exports__XLMRobertaForMaskedLM=__webpack_exports__.XLMRobertaForMaskedLM,__webpack_exports__XLMRobertaForQuestionAnswering=__webpack_exports__.XLMRobertaForQuestionAnswering,__webpack_exports__XLMRobertaForSequenceClassification=__webpack_exports__.XLMRobertaForSequenceClassification,__webpack_exports__XLMRobertaForTokenClassification=__webpack_exports__.XLMRobertaForTokenClassification,__webpack_exports__XLMRobertaModel=__webpack_exports__.XLMRobertaModel,__webpack_exports__XLMRobertaPreTrainedModel=__webpack_exports__.XLMRobertaPreTrainedModel,__webpack_exports__XLMRobertaTokenizer=__webpack_exports__.XLMRobertaTokenizer,__webpack_exports__XLMTokenizer=__webpack_exports__.XLMTokenizer,__webpack_exports__XLMWithLMHeadModel=__webpack_exports__.XLMWithLMHeadModel,__webpack_exports__YolosFeatureExtractor=__webpack_exports__.YolosFeatureExtractor,__webpack_exports__YolosForObjectDetection=__webpack_exports__.YolosForObjectDetection,__webpack_exports__YolosModel=__webpack_exports__.YolosModel,__webpack_exports__YolosObjectDetectionOutput=__webpack_exports__.YolosObjectDetectionOutput,__webpack_exports__YolosPreTrainedModel=__webpack_exports__.YolosPreTrainedModel,__webpack_exports__ZeroShotClassificationPipeline=__webpack_exports__.ZeroShotClassificationPipeline,__webpack_exports__ZeroShotImageClassificationPipeline=__webpack_exports__.ZeroShotImageClassificationPipeline,__webpack_exports__cat=__webpack_exports__.cat,__webpack_exports__cos_sim=__webpack_exports__.cos_sim,__webpack_exports__dot=__webpack_exports__.dot,__webpack_exports__dynamicTimeWarping=__webpack_exports__.dynamicTimeWarping,__webpack_exports__env=__webpack_exports__.env,__webpack_exports__getMelFilters=__webpack_exports__.getMelFilters,__webpack_exports__getTopItems=__webpack_exports__.getTopItems,__webpack_exports__interpolate=__webpack_exports__.interpolate,__webpack_exports__interpolate_data=__webpack_exports__.interpolate_data,__webpack_exports__log_softmax=__webpack_exports__.log_softmax,__webpack_exports__magnitude=__webpack_exports__.magnitude,__webpack_exports__max=__webpack_exports__.max,__webpack_exports__mean=__webpack_exports__.mean,__webpack_exports__mean_pooling=__webpack_exports__.mean_pooling,__webpack_exports__medianFilter=__webpack_exports__.medianFilter,__webpack_exports__min=__webpack_exports__.min,__webpack_exports__pipeline=__webpack_exports__.pipeline,__webpack_exports__read_audio=__webpack_exports__.read_audio,__webpack_exports__rfftfreq=__webpack_exports__.rfftfreq,__webpack_exports__round=__webpack_exports__.round,__webpack_exports__softmax=__webpack_exports__.softmax,__webpack_exports__stack=__webpack_exports__.stack,__webpack_exports__std_mean=__webpack_exports__.std_mean,__webpack_exports__transpose=__webpack_exports__.transpose,__webpack_exports__transpose_data=__webpack_exports__.transpose_data;export{__webpack_exports__AlbertForMaskedLM as AlbertForMaskedLM,__webpack_exports__AlbertForQuestionAnswering as AlbertForQuestionAnswering,__webpack_exports__AlbertForSequenceClassification as AlbertForSequenceClassification,__webpack_exports__AlbertModel as AlbertModel,__webpack_exports__AlbertPreTrainedModel as AlbertPreTrainedModel,__webpack_exports__AlbertTokenizer as AlbertTokenizer,__webpack_exports__AudioClassificationPipeline as AudioClassificationPipeline,__webpack_exports__AutoConfig as AutoConfig,__webpack_exports__AutoModel as AutoModel,__webpack_exports__AutoModelForAudioClassification as AutoModelForAudioClassification,__webpack_exports__AutoModelForCTC as AutoModelForCTC,__webpack_exports__AutoModelForCausalLM as AutoModelForCausalLM,__webpack_exports__AutoModelForImageClassification as AutoModelForImageClassification,__webpack_exports__AutoModelForImageSegmentation as AutoModelForImageSegmentation,__webpack_exports__AutoModelForMaskGeneration as AutoModelForMaskGeneration,__webpack_exports__AutoModelForMaskedLM as AutoModelForMaskedLM,__webpack_exports__AutoModelForObjectDetection as AutoModelForObjectDetection,__webpack_exports__AutoModelForQuestionAnswering as AutoModelForQuestionAnswering,__webpack_exports__AutoModelForSeq2SeqLM as AutoModelForSeq2SeqLM,__webpack_exports__AutoModelForSequenceClassification as AutoModelForSequenceClassification,__webpack_exports__AutoModelForTokenClassification as AutoModelForTokenClassification,__webpack_exports__AutoModelForVision2Seq as AutoModelForVision2Seq,__webpack_exports__AutoProcessor as AutoProcessor,__webpack_exports__AutoTokenizer as AutoTokenizer,__webpack_exports__AutomaticSpeechRecognitionPipeline as AutomaticSpeechRecognitionPipeline,__webpack_exports__BartForConditionalGeneration as BartForConditionalGeneration,__webpack_exports__BartForSequenceClassification as BartForSequenceClassification,__webpack_exports__BartModel as BartModel,__webpack_exports__BartPretrainedModel as BartPretrainedModel,__webpack_exports__BartTokenizer as BartTokenizer,__webpack_exports__BaseModelOutput as BaseModelOutput,__webpack_exports__BeitFeatureExtractor as BeitFeatureExtractor,__webpack_exports__BeitForImageClassification as BeitForImageClassification,__webpack_exports__BeitModel as BeitModel,__webpack_exports__BeitPreTrainedModel as BeitPreTrainedModel,__webpack_exports__BertForMaskedLM as BertForMaskedLM,__webpack_exports__BertForQuestionAnswering as BertForQuestionAnswering,__webpack_exports__BertForSequenceClassification as BertForSequenceClassification,__webpack_exports__BertForTokenClassification as BertForTokenClassification,__webpack_exports__BertModel as BertModel,__webpack_exports__BertPreTrainedModel as BertPreTrainedModel,__webpack_exports__BertTokenizer as BertTokenizer,__webpack_exports__BloomForCausalLM as BloomForCausalLM,__webpack_exports__BloomModel as BloomModel,__webpack_exports__BloomPreTrainedModel as BloomPreTrainedModel,__webpack_exports__BloomTokenizer as BloomTokenizer,__webpack_exports__CLIPModel as CLIPModel,__webpack_exports__CLIPPreTrainedModel as CLIPPreTrainedModel,__webpack_exports__CLIPTextModelWithProjection as CLIPTextModelWithProjection,__webpack_exports__CLIPTokenizer as CLIPTokenizer,__webpack_exports__CLIPVisionModelWithProjection as CLIPVisionModelWithProjection,__webpack_exports__CamembertForMaskedLM as CamembertForMaskedLM,__webpack_exports__CamembertForQuestionAnswering as CamembertForQuestionAnswering,__webpack_exports__CamembertForSequenceClassification as CamembertForSequenceClassification,__webpack_exports__CamembertForTokenClassification as CamembertForTokenClassification,__webpack_exports__CamembertModel as CamembertModel,__webpack_exports__CamembertPreTrainedModel as CamembertPreTrainedModel,__webpack_exports__CamembertTokenizer as CamembertTokenizer,__webpack_exports__CausalLMOutput as CausalLMOutput,__webpack_exports__CausalLMOutputWithPast as CausalLMOutputWithPast,__webpack_exports__CodeGenForCausalLM as CodeGenForCausalLM,__webpack_exports__CodeGenModel as CodeGenModel,__webpack_exports__CodeGenPreTrainedModel as CodeGenPreTrainedModel,__webpack_exports__CodeGenTokenizer as CodeGenTokenizer,__webpack_exports__CodeLlamaTokenizer as CodeLlamaTokenizer,__webpack_exports__ConvNextFeatureExtractor as ConvNextFeatureExtractor,__webpack_exports__DebertaForMaskedLM as DebertaForMaskedLM,__webpack_exports__DebertaForQuestionAnswering as DebertaForQuestionAnswering,__webpack_exports__DebertaForSequenceClassification as DebertaForSequenceClassification,__webpack_exports__DebertaForTokenClassification as DebertaForTokenClassification,__webpack_exports__DebertaModel as DebertaModel,__webpack_exports__DebertaPreTrainedModel as DebertaPreTrainedModel,__webpack_exports__DebertaTokenizer as DebertaTokenizer,__webpack_exports__DebertaV2ForMaskedLM as DebertaV2ForMaskedLM,__webpack_exports__DebertaV2ForQuestionAnswering as DebertaV2ForQuestionAnswering,__webpack_exports__DebertaV2ForSequenceClassification as DebertaV2ForSequenceClassification,__webpack_exports__DebertaV2ForTokenClassification as DebertaV2ForTokenClassification,__webpack_exports__DebertaV2Model as DebertaV2Model,__webpack_exports__DebertaV2PreTrainedModel as DebertaV2PreTrainedModel,__webpack_exports__DebertaV2Tokenizer as DebertaV2Tokenizer,__webpack_exports__DeiTFeatureExtractor as DeiTFeatureExtractor,__webpack_exports__DeiTForImageClassification as DeiTForImageClassification,__webpack_exports__DeiTModel as DeiTModel,__webpack_exports__DeiTPreTrainedModel as DeiTPreTrainedModel,__webpack_exports__DetrFeatureExtractor as DetrFeatureExtractor,__webpack_exports__DetrForObjectDetection as DetrForObjectDetection,__webpack_exports__DetrForSegmentation as DetrForSegmentation,__webpack_exports__DetrModel as DetrModel,__webpack_exports__DetrObjectDetectionOutput as DetrObjectDetectionOutput,__webpack_exports__DetrPreTrainedModel as DetrPreTrainedModel,__webpack_exports__DetrSegmentationOutput as DetrSegmentationOutput,__webpack_exports__DistilBertForMaskedLM as DistilBertForMaskedLM,__webpack_exports__DistilBertForQuestionAnswering as DistilBertForQuestionAnswering,__webpack_exports__DistilBertForSequenceClassification as DistilBertForSequenceClassification,__webpack_exports__DistilBertForTokenClassification as DistilBertForTokenClassification,__webpack_exports__DistilBertModel as DistilBertModel,__webpack_exports__DistilBertPreTrainedModel as DistilBertPreTrainedModel,__webpack_exports__DistilBertTokenizer as DistilBertTokenizer,__webpack_exports__FFT as FFT,__webpack_exports__FalconTokenizer as FalconTokenizer,__webpack_exports__FeatureExtractionPipeline as FeatureExtractionPipeline,__webpack_exports__FeatureExtractor as FeatureExtractor,__webpack_exports__FillMaskPipeline as FillMaskPipeline,__webpack_exports__GPT2LMHeadModel as GPT2LMHeadModel,__webpack_exports__GPT2Model as GPT2Model,__webpack_exports__GPT2PreTrainedModel as GPT2PreTrainedModel,__webpack_exports__GPT2Tokenizer as GPT2Tokenizer,__webpack_exports__GPTBigCodeForCausalLM as GPTBigCodeForCausalLM,__webpack_exports__GPTBigCodeModel as GPTBigCodeModel,__webpack_exports__GPTBigCodePreTrainedModel as GPTBigCodePreTrainedModel,__webpack_exports__GPTJForCausalLM as GPTJForCausalLM,__webpack_exports__GPTJModel as GPTJModel,__webpack_exports__GPTJPreTrainedModel as GPTJPreTrainedModel,__webpack_exports__GPTNeoForCausalLM as GPTNeoForCausalLM,__webpack_exports__GPTNeoModel as GPTNeoModel,__webpack_exports__GPTNeoPreTrainedModel as GPTNeoPreTrainedModel,__webpack_exports__GPTNeoXForCausalLM as GPTNeoXForCausalLM,__webpack_exports__GPTNeoXModel as GPTNeoXModel,__webpack_exports__GPTNeoXPreTrainedModel as GPTNeoXPreTrainedModel,__webpack_exports__GPTNeoXTokenizer as GPTNeoXTokenizer,__webpack_exports__HerbertTokenizer as HerbertTokenizer,__webpack_exports__ImageClassificationPipeline as ImageClassificationPipeline,__webpack_exports__ImageFeatureExtractor as ImageFeatureExtractor,__webpack_exports__ImageSegmentationPipeline as ImageSegmentationPipeline,__webpack_exports__ImageToTextPipeline as ImageToTextPipeline,__webpack_exports__LlamaForCausalLM as LlamaForCausalLM,__webpack_exports__LlamaModel as LlamaModel,__webpack_exports__LlamaPreTrainedModel as LlamaPreTrainedModel,__webpack_exports__LlamaTokenizer as LlamaTokenizer,__webpack_exports__M2M100ForConditionalGeneration as M2M100ForConditionalGeneration,__webpack_exports__M2M100Model as M2M100Model,__webpack_exports__M2M100PreTrainedModel as M2M100PreTrainedModel,__webpack_exports__M2M100Tokenizer as M2M100Tokenizer,__webpack_exports__MBart50Tokenizer as MBart50Tokenizer,__webpack_exports__MBartForConditionalGeneration as MBartForConditionalGeneration,__webpack_exports__MBartForSequenceClassification as MBartForSequenceClassification,__webpack_exports__MBartModel as MBartModel,__webpack_exports__MBartPreTrainedModel as MBartPreTrainedModel,__webpack_exports__MBartTokenizer as MBartTokenizer,__webpack_exports__MPNetForMaskedLM as MPNetForMaskedLM,__webpack_exports__MPNetForQuestionAnswering as MPNetForQuestionAnswering,__webpack_exports__MPNetForSequenceClassification as MPNetForSequenceClassification,__webpack_exports__MPNetForTokenClassification as MPNetForTokenClassification,__webpack_exports__MPNetModel as MPNetModel,__webpack_exports__MPNetPreTrainedModel as MPNetPreTrainedModel,__webpack_exports__MPNetTokenizer as MPNetTokenizer,__webpack_exports__MT5ForConditionalGeneration as MT5ForConditionalGeneration,__webpack_exports__MT5Model as MT5Model,__webpack_exports__MT5PreTrainedModel as MT5PreTrainedModel,__webpack_exports__MarianMTModel as MarianMTModel,__webpack_exports__MarianModel as MarianModel,__webpack_exports__MarianPreTrainedModel as MarianPreTrainedModel,__webpack_exports__MarianTokenizer as MarianTokenizer,__webpack_exports__MaskedLMOutput as MaskedLMOutput,__webpack_exports__MobileBertForMaskedLM as MobileBertForMaskedLM,__webpack_exports__MobileBertForQuestionAnswering as MobileBertForQuestionAnswering,__webpack_exports__MobileBertForSequenceClassification as MobileBertForSequenceClassification,__webpack_exports__MobileBertModel as MobileBertModel,__webpack_exports__MobileBertPreTrainedModel as MobileBertPreTrainedModel,__webpack_exports__MobileBertTokenizer as MobileBertTokenizer,__webpack_exports__MobileViTFeatureExtractor as MobileViTFeatureExtractor,__webpack_exports__MobileViTForImageClassification as MobileViTForImageClassification,__webpack_exports__MobileViTModel as MobileViTModel,__webpack_exports__MobileViTPreTrainedModel as MobileViTPreTrainedModel,__webpack_exports__ModelOutput as ModelOutput,__webpack_exports__MptForCausalLM as MptForCausalLM,__webpack_exports__MptModel as MptModel,__webpack_exports__MptPreTrainedModel as MptPreTrainedModel,__webpack_exports__NllbTokenizer as NllbTokenizer,__webpack_exports__OPTForCausalLM as OPTForCausalLM,__webpack_exports__OPTModel as OPTModel,__webpack_exports__OPTPreTrainedModel as OPTPreTrainedModel,__webpack_exports__ObjectDetectionPipeline as ObjectDetectionPipeline,__webpack_exports__Pipeline as Pipeline,__webpack_exports__PreTrainedModel as PreTrainedModel,__webpack_exports__PreTrainedTokenizer as PreTrainedTokenizer,__webpack_exports__PretrainedConfig as PretrainedConfig,__webpack_exports__PretrainedMixin as PretrainedMixin,__webpack_exports__Processor as Processor,__webpack_exports__QuestionAnsweringModelOutput as QuestionAnsweringModelOutput,__webpack_exports__QuestionAnsweringPipeline as QuestionAnsweringPipeline,__webpack_exports__RawImage as RawImage,__webpack_exports__ResNetForImageClassification as ResNetForImageClassification,__webpack_exports__ResNetModel as ResNetModel,__webpack_exports__ResNetPreTrainedModel as ResNetPreTrainedModel,__webpack_exports__RobertaForMaskedLM as RobertaForMaskedLM,__webpack_exports__RobertaForQuestionAnswering as RobertaForQuestionAnswering,__webpack_exports__RobertaForSequenceClassification as RobertaForSequenceClassification,__webpack_exports__RobertaForTokenClassification as RobertaForTokenClassification,__webpack_exports__RobertaModel as RobertaModel,__webpack_exports__RobertaPreTrainedModel as RobertaPreTrainedModel,__webpack_exports__RobertaTokenizer as RobertaTokenizer,__webpack_exports__SamImageProcessor as SamImageProcessor,__webpack_exports__SamImageSegmentationOutput as SamImageSegmentationOutput,__webpack_exports__SamModel as SamModel,__webpack_exports__SamPreTrainedModel as SamPreTrainedModel,__webpack_exports__SamProcessor as SamProcessor,__webpack_exports__Seq2SeqLMOutput as Seq2SeqLMOutput,__webpack_exports__SequenceClassifierOutput as SequenceClassifierOutput,__webpack_exports__SqueezeBertForMaskedLM as SqueezeBertForMaskedLM,__webpack_exports__SqueezeBertForQuestionAnswering as SqueezeBertForQuestionAnswering,__webpack_exports__SqueezeBertForSequenceClassification as SqueezeBertForSequenceClassification,__webpack_exports__SqueezeBertModel as SqueezeBertModel,__webpack_exports__SqueezeBertPreTrainedModel as SqueezeBertPreTrainedModel,__webpack_exports__SqueezeBertTokenizer as SqueezeBertTokenizer,__webpack_exports__SummarizationPipeline as SummarizationPipeline,__webpack_exports__SwinForImageClassification as SwinForImageClassification,__webpack_exports__SwinModel as SwinModel,__webpack_exports__SwinPreTrainedModel as SwinPreTrainedModel,__webpack_exports__T5ForConditionalGeneration as T5ForConditionalGeneration,__webpack_exports__T5Model as T5Model,__webpack_exports__T5PreTrainedModel as T5PreTrainedModel,__webpack_exports__T5Tokenizer as T5Tokenizer,__webpack_exports__Tensor as Tensor,__webpack_exports__Text2TextGenerationPipeline as Text2TextGenerationPipeline,__webpack_exports__TextClassificationPipeline as TextClassificationPipeline,__webpack_exports__TextGenerationPipeline as TextGenerationPipeline,__webpack_exports__TokenClassificationPipeline as TokenClassificationPipeline,__webpack_exports__TokenClassifierOutput as TokenClassifierOutput,__webpack_exports__TokenizerModel as TokenizerModel,__webpack_exports__TranslationPipeline as TranslationPipeline,__webpack_exports__ViTFeatureExtractor as ViTFeatureExtractor,__webpack_exports__ViTForImageClassification as ViTForImageClassification,__webpack_exports__ViTModel as ViTModel,__webpack_exports__ViTPreTrainedModel as ViTPreTrainedModel,__webpack_exports__VisionEncoderDecoderModel as VisionEncoderDecoderModel,__webpack_exports__Wav2Vec2CTCTokenizer as Wav2Vec2CTCTokenizer,__webpack_exports__Wav2Vec2FeatureExtractor as Wav2Vec2FeatureExtractor,__webpack_exports__Wav2Vec2ForCTC as Wav2Vec2ForCTC,__webpack_exports__Wav2Vec2ForSequenceClassification as Wav2Vec2ForSequenceClassification,__webpack_exports__Wav2Vec2Model as Wav2Vec2Model,__webpack_exports__Wav2Vec2PreTrainedModel as Wav2Vec2PreTrainedModel,__webpack_exports__Wav2Vec2ProcessorWithLM as Wav2Vec2ProcessorWithLM,__webpack_exports__WavLMForCTC as WavLMForCTC,__webpack_exports__WavLMForSequenceClassification as WavLMForSequenceClassification,__webpack_exports__WavLMModel as WavLMModel,__webpack_exports__WavLMPreTrainedModel as WavLMPreTrainedModel,__webpack_exports__WhisperFeatureExtractor as WhisperFeatureExtractor,__webpack_exports__WhisperForConditionalGeneration as WhisperForConditionalGeneration,__webpack_exports__WhisperModel as WhisperModel,__webpack_exports__WhisperPreTrainedModel as WhisperPreTrainedModel,__webpack_exports__WhisperProcessor as WhisperProcessor,__webpack_exports__WhisperTokenizer as WhisperTokenizer,__webpack_exports__XLMForQuestionAnswering as XLMForQuestionAnswering,__webpack_exports__XLMForSequenceClassification as XLMForSequenceClassification,__webpack_exports__XLMForTokenClassification as XLMForTokenClassification,__webpack_exports__XLMModel as XLMModel,__webpack_exports__XLMPreTrainedModel as XLMPreTrainedModel,__webpack_exports__XLMRobertaForMaskedLM as XLMRobertaForMaskedLM,__webpack_exports__XLMRobertaForQuestionAnswering as XLMRobertaForQuestionAnswering,__webpack_exports__XLMRobertaForSequenceClassification as XLMRobertaForSequenceClassification,__webpack_exports__XLMRobertaForTokenClassification as XLMRobertaForTokenClassification,__webpack_exports__XLMRobertaModel as XLMRobertaModel,__webpack_exports__XLMRobertaPreTrainedModel as XLMRobertaPreTrainedModel,__webpack_exports__XLMRobertaTokenizer as XLMRobertaTokenizer,__webpack_exports__XLMTokenizer as XLMTokenizer,__webpack_exports__XLMWithLMHeadModel as XLMWithLMHeadModel,__webpack_exports__YolosFeatureExtractor as YolosFeatureExtractor,__webpack_exports__YolosForObjectDetection as YolosForObjectDetection,__webpack_exports__YolosModel as YolosModel,__webpack_exports__YolosObjectDetectionOutput as YolosObjectDetectionOutput,__webpack_exports__YolosPreTrainedModel as YolosPreTrainedModel,__webpack_exports__ZeroShotClassificationPipeline as ZeroShotClassificationPipeline,__webpack_exports__ZeroShotImageClassificationPipeline as ZeroShotImageClassificationPipeline,__webpack_exports__cat as cat,__webpack_exports__cos_sim as cos_sim,__webpack_exports__dot as dot,__webpack_exports__dynamicTimeWarping as dynamicTimeWarping,__webpack_exports__env as env,__webpack_exports__getMelFilters as getMelFilters,__webpack_exports__getTopItems as getTopItems,__webpack_exports__interpolate as interpolate,__webpack_exports__interpolate_data as interpolate_data,__webpack_exports__log_softmax as log_softmax,__webpack_exports__magnitude as magnitude,__webpack_exports__max as max,__webpack_exports__mean as mean,__webpack_exports__mean_pooling as mean_pooling,__webpack_exports__medianFilter as medianFilter,__webpack_exports__min as min,__webpack_exports__pipeline as pipeline,__webpack_exports__read_audio as read_audio,__webpack_exports__rfftfreq as rfftfreq,__webpack_exports__round as round,__webpack_exports__softmax as softmax,__webpack_exports__stack as stack,__webpack_exports__std_mean as std_mean,__webpack_exports__transpose as transpose,__webpack_exports__transpose_data as transpose_data};
//# sourceMappingURL=transformers.min.js.map